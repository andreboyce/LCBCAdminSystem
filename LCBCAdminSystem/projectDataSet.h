#pragma once

#using <mscorlib.dll>
#using <System.dll>
#using <System.Data.dll>
#using <System.Xml.dll>
#using <System.Data.dll>

using namespace System::Security::Permissions;
[assembly:SecurityPermissionAttribute(SecurityAction::RequestMinimum, SkipVerification=false)];
// 
// This source code was auto-generated by xsd, Version=2.0.50727.42.
// 
namespace LCBCAdminRegistrationSystem {
    using namespace System;
    
    using namespace System;
    ref class projectDataSet;
    
    
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0"), 
    Serializable, 
    System::ComponentModel::DesignerCategoryAttribute(L"code"), 
    System::ComponentModel::ToolboxItem(true), 
    System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedDataSetSchema"), 
    System::Xml::Serialization::XmlRootAttribute(L"projectDataSet"), 
    System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.DataSet")]
    public ref class projectDataSet : public System::Data::DataSet {
        public : ref class ElderDataTable;
        public : ref class EmployerDataTable;
        public : ref class Grade_PointDataTable;
        public : ref class Parent_or_GuardianDataTable;
        public : ref class StudentDataTable;
        public : ref class ElderRow;
        public : ref class EmployerRow;
        public : ref class Grade_PointRow;
        public : ref class Parent_or_GuardianRow;
        public : ref class StudentRow;
        public : ref class ElderRowChangeEvent;
        public : ref class EmployerRowChangeEvent;
        public : ref class Grade_PointRowChangeEvent;
        public : ref class Parent_or_GuardianRowChangeEvent;
        public : ref class StudentRowChangeEvent;
        
        private: LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  tableElder;
        
        private: LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  tableEmployer;
        
        private: LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  tableGrade_Point;
        
        private: LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  tableParent_or_Guardian;
        
        private: LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  tableStudent;
        
        private: System::Data::DataRelation^  relationReference;
        
        private: System::Data::DataRelation^  relationReference1;
        
        private: System::Data::DataRelation^  relationReference2;
        
        private: System::Data::SchemaSerializationMode _schemaSerializationMode;
        
        public : delegate System::Void ElderRowChangeEventHandler(System::Object^  sender, LCBCAdminRegistrationSystem::projectDataSet::ElderRowChangeEvent^  e);
        
        public : delegate System::Void EmployerRowChangeEventHandler(System::Object^  sender, LCBCAdminRegistrationSystem::projectDataSet::EmployerRowChangeEvent^  e);
        
        public : delegate System::Void Grade_PointRowChangeEventHandler(System::Object^  sender, LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRowChangeEvent^  e);
        
        public : delegate System::Void Parent_or_GuardianRowChangeEventHandler(System::Object^  sender, LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRowChangeEvent^  e);
        
        public : delegate System::Void StudentRowChangeEventHandler(System::Object^  sender, LCBCAdminRegistrationSystem::projectDataSet::StudentRowChangeEvent^  e);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        projectDataSet();
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        projectDataSet(System::Runtime::Serialization::SerializationInfo^  info, System::Runtime::Serialization::StreamingContext context);
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(System::ComponentModel::DesignerSerializationVisibility::Content)]
         property LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  Elder {
            LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(System::ComponentModel::DesignerSerializationVisibility::Content)]
         property LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  Employer {
            LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(System::ComponentModel::DesignerSerializationVisibility::Content)]
         property LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  Grade_Point {
            LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(System::ComponentModel::DesignerSerializationVisibility::Content)]
         property LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  Parent_or_Guardian {
            LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::ComponentModel::Browsable(false), 
        System::ComponentModel::DesignerSerializationVisibility(System::ComponentModel::DesignerSerializationVisibility::Content)]
         property LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  Student {
            LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::ComponentModel::BrowsableAttribute(true), 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(System::ComponentModel::DesignerSerializationVisibility::Visible)]
        virtual  property System::Data::SchemaSerializationMode SchemaSerializationMode {
            System::Data::SchemaSerializationMode get() override;
            System::Void set(System::Data::SchemaSerializationMode value) override;
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(System::ComponentModel::DesignerSerializationVisibility::Hidden)]
         property System::Data::DataTableCollection^  Tables {
            System::Data::DataTableCollection^  get() new;
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
        System::ComponentModel::DesignerSerializationVisibilityAttribute(System::ComponentModel::DesignerSerializationVisibility::Hidden)]
         property System::Data::DataRelationCollection^  Relations {
            System::Data::DataRelationCollection^  get() new;
        }
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        virtual System::Void InitializeDerivedDataSet() override;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        virtual System::Data::DataSet^  Clone() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        virtual System::Boolean ShouldSerializeTables() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        virtual System::Boolean ShouldSerializeRelations() override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        virtual System::Void ReadXmlSerializable(System::Xml::XmlReader^  reader) override;
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        virtual System::Xml::Schema::XmlSchema^  GetSchemaSerializable() override;
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitVars();
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitVars(System::Boolean initTable);
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitClass();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Boolean ShouldSerializeElder();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Boolean ShouldSerializeEmployer();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Boolean ShouldSerializeGrade_Point();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Boolean ShouldSerializeParent_or_Guardian();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Boolean ShouldSerializeStudent();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void SchemaChanged(System::Object^  sender, System::ComponentModel::CollectionChangeEventArgs^  e);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        static System::Xml::Schema::XmlSchemaComplexType^  GetTypedDataSetSchema(System::Xml::Schema::XmlSchemaSet^  xs);
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0"), 
        System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class ElderDataTable : public System::Data::DataTable, public System::Collections::IEnumerable {
            
            private: System::Data::DataColumn^  columnID;
            
            private: System::Data::DataColumn^  columnName;
            
            private: System::Data::DataColumn^  columnAddress;
            
            private: System::Data::DataColumn^  columnTelephone_Number;
            
            private: System::Data::DataColumn^  columnChurch;
            
            private: System::Data::DataColumn^  columnPosition;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::ElderRowChangeEventHandler^  ElderRowChanging;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::ElderRowChangeEventHandler^  ElderRowChanged;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::ElderRowChangeEventHandler^  ElderRowDeleting;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::ElderRowChangeEventHandler^  ElderRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            ElderDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            ElderDataTable(System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            ElderDataTable(System::Runtime::Serialization::SerializationInfo^  info, System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  IDColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  NameColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  AddressColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Telephone_NumberColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  ChurchColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  PositionColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::ComponentModel::Browsable(false)]
             property System::Int32 Count {
                System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  default [System::Int32 ] {
                LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  get(System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void AddElderRow(LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  AddElderRow(System::String^  Name, System::String^  Address, 
                        System::Int32 Telephone_Number, System::String^  Church, System::String^  Position);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  FindByID(System::Int32 ID);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  NewElderRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Data::DataRow^  NewRowFromBuilder(System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowChanged(System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowChanging(System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowDeleted(System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowDeleting(System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void RemoveElderRow(LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            static System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0"), 
        System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class EmployerDataTable : public System::Data::DataTable, public System::Collections::IEnumerable {
            
            private: System::Data::DataColumn^  columnID;
            
            private: System::Data::DataColumn^  columnFirst_Name;
            
            private: System::Data::DataColumn^  columnLast_Name;
            
            private: System::Data::DataColumn^  columnTelephone_Number;
            
            private: System::Data::DataColumn^  columnAddress;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::EmployerRowChangeEventHandler^  EmployerRowChanging;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::EmployerRowChangeEventHandler^  EmployerRowChanged;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::EmployerRowChangeEventHandler^  EmployerRowDeleting;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::EmployerRowChangeEventHandler^  EmployerRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            EmployerDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            EmployerDataTable(System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            EmployerDataTable(System::Runtime::Serialization::SerializationInfo^  info, System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  IDColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  First_NameColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Last_NameColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Telephone_NumberColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  AddressColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::ComponentModel::Browsable(false)]
             property System::Int32 Count {
                System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  default [System::Int32 ] {
                LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  get(System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void AddEmployerRow(LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  AddEmployerRow(System::String^  First_Name, System::String^  Last_Name, 
                        System::Int32 Telephone_Number, System::String^  Address);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  FindByID(System::Int32 ID);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  NewEmployerRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Data::DataRow^  NewRowFromBuilder(System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowChanged(System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowChanging(System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowDeleted(System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowDeleting(System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void RemoveEmployerRow(LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            static System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0"), 
        System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class Grade_PointDataTable : public System::Data::DataTable, public System::Collections::IEnumerable {
            
            private: System::Data::DataColumn^  columnID;
            
            private: System::Data::DataColumn^  columnGrade;
            
            private: System::Data::DataColumn^  columnUpper_Range;
            
            private: System::Data::DataColumn^  columnLower_Range;
            
            private: System::Data::DataColumn^  columnGrade_Point;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRowChangeEventHandler^  Grade_PointRowChanging;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRowChangeEventHandler^  Grade_PointRowChanged;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRowChangeEventHandler^  Grade_PointRowDeleting;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRowChangeEventHandler^  Grade_PointRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            Grade_PointDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            Grade_PointDataTable(System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            Grade_PointDataTable(System::Runtime::Serialization::SerializationInfo^  info, System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  IDColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  GradeColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Upper_RangeColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Lower_RangeColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Grade_PointColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::ComponentModel::Browsable(false)]
             property System::Int32 Count {
                System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  default [System::Int32 ] {
                LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  get(System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void AddGrade_PointRow(LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  AddGrade_PointRow(System::String^  Grade, System::Int32 Upper_Range, 
                        System::Int32 Lower_Range, System::Int32 Grade_Point);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  FindByID(System::Int32 ID);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  NewGrade_PointRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Data::DataRow^  NewRowFromBuilder(System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowChanged(System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowChanging(System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowDeleted(System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowDeleting(System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void RemoveGrade_PointRow(LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            static System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0"), 
        System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class Parent_or_GuardianDataTable : public System::Data::DataTable, public System::Collections::IEnumerable {
            
            private: System::Data::DataColumn^  columnID;
            
            private: System::Data::DataColumn^  columnFirst_Name;
            
            private: System::Data::DataColumn^  columnLast_Name;
            
            private: System::Data::DataColumn^  columnAddress;
            
            private: System::Data::DataColumn^  columnOccupation;
            
            private: System::Data::DataColumn^  columnTelephone_Number;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRowChangeEventHandler^  Parent_or_GuardianRowChanging;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRowChangeEventHandler^  Parent_or_GuardianRowChanged;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRowChangeEventHandler^  Parent_or_GuardianRowDeleting;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRowChangeEventHandler^  Parent_or_GuardianRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            Parent_or_GuardianDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            Parent_or_GuardianDataTable(System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            Parent_or_GuardianDataTable(System::Runtime::Serialization::SerializationInfo^  info, System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  IDColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  First_NameColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Last_NameColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  AddressColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  OccupationColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Telephone_NumberColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::ComponentModel::Browsable(false)]
             property System::Int32 Count {
                System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  default [System::Int32 ] {
                LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  get(System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void AddParent_or_GuardianRow(LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  AddParent_or_GuardianRow(System::String^  First_Name, 
                        System::String^  Last_Name, System::String^  Address, System::String^  Occupation, System::Int32 Telephone_Number);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  FindByID(System::Int32 ID);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  NewParent_or_GuardianRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Data::DataRow^  NewRowFromBuilder(System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowChanged(System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowChanging(System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowDeleted(System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowDeleting(System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void RemoveParent_or_GuardianRow(LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            static System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0"), 
        System::Serializable, 
        System::Xml::Serialization::XmlSchemaProviderAttribute(L"GetTypedTableSchema")]
        ref class StudentDataTable : public System::Data::DataTable, public System::Collections::IEnumerable {
            
            private: System::Data::DataColumn^  columnID;
            
            private: System::Data::DataColumn^  columnFirst_Name;
            
            private: System::Data::DataColumn^  columnMiddle_Names;
            
            private: System::Data::DataColumn^  columnLast_Name;
            
            private: System::Data::DataColumn^  columnAddress;
            
            private: System::Data::DataColumn^  columnSex;
            
            private: System::Data::DataColumn^  columnApplication_Date;
            
            private: System::Data::DataColumn^  columnDate_of_Birth;
            
            private: System::Data::DataColumn^  columnPlace_of_Birth;
            
            private: System::Data::DataColumn^  _columnParent_Guardian;
            
            private: System::Data::DataColumn^  columnYounger_Siblings;
            
            private: System::Data::DataColumn^  columnOlder_Siblings;
            
            private: System::Data::DataColumn^  columnBaptised;
            
            private: System::Data::DataColumn^  columnDate_of_Baptism;
            
            private: System::Data::DataColumn^  columnAttended_High_School;
            
            private: System::Data::DataColumn^  columnName_of_High_School;
            
            private: System::Data::DataColumn^  columnAddress_of_High_School;
            
            private: System::Data::DataColumn^  columnMinisters_Name;
            
            private: System::Data::DataColumn^  columnMinisters_Address;
            
            private: System::Data::DataColumn^  columnChristian_Work_Performed;
            
            private: System::Data::DataColumn^  columnElder_1;
            
            private: System::Data::DataColumn^  columnElder_2;
            
            private: System::Data::DataColumn^  columnEmployer_1;
            
            private: System::Data::DataColumn^  columnEmployer_2;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::StudentRowChangeEventHandler^  StudentRowChanging;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::StudentRowChangeEventHandler^  StudentRowChanged;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::StudentRowChangeEventHandler^  StudentRowDeleting;
            
            public: event LCBCAdminRegistrationSystem::projectDataSet::StudentRowChangeEventHandler^  StudentRowDeleted;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            StudentDataTable();
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            StudentDataTable(System::Data::DataTable^  table);
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            StudentDataTable(System::Runtime::Serialization::SerializationInfo^  info, System::Runtime::Serialization::StreamingContext context);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  IDColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  First_NameColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Middle_NamesColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Last_NameColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  AddressColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  SexColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Application_DateColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Date_of_BirthColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Place_of_BirthColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  _Parent_GuardianColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Younger_SiblingsColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Older_SiblingsColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  BaptisedColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Date_of_BaptismColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Attended_High_SchoolColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Name_of_High_SchoolColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Address_of_High_SchoolColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Ministers_NameColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Ministers_AddressColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Christian_Work_PerformedColumn {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Elder_1Column {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Elder_2Column {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Employer_1Column {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataColumn^  Employer_2Column {
                System::Data::DataColumn^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute, 
            System::ComponentModel::Browsable(false)]
             property System::Int32 Count {
                System::Int32 get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  default [System::Int32 ] {
                LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  get(System::Int32 index);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void AddStudentRow(LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  AddStudentRow(
                        System::String^  First_Name, 
                        System::String^  Middle_Names, 
                        System::String^  Last_Name, 
                        System::String^  Address, 
                        System::String^  Sex, 
                        System::DateTime Application_Date, 
                        System::DateTime Date_of_Birth, 
                        System::String^  Place_of_Birth, 
                        LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  parentParent_or_GuardianRowByReference, 
                        System::Int32 Younger_Siblings, 
                        System::Int32 Older_Siblings, 
                        System::Boolean Baptised, 
                        System::DateTime Date_of_Baptism, 
                        System::Boolean Attended_High_School, 
                        System::String^  Name_of_High_School, 
                        System::String^  Address_of_High_School, 
                        System::String^  Ministers_Name, 
                        System::String^  Ministers_Address, 
                        System::String^  Christian_Work_Performed, 
                        LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  parentElderRowByReference1, 
                        System::Int32 Elder_2, 
                        System::Int32 Employer_1, 
                        LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  parentEmployerRowByReference2);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  FindByID(System::Int32 ID);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Collections::IEnumerator^  GetEnumerator();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Data::DataTable^  Clone() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Data::DataTable^  CreateInstance() override;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void InitVars();
            
            private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void InitClass();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  NewStudentRow();
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Data::DataRow^  NewRowFromBuilder(System::Data::DataRowBuilder^  builder) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Type^  GetRowType() override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowChanged(System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowChanging(System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowDeleted(System::Data::DataRowChangeEventArgs^  e) override;
            
            protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            virtual System::Void OnRowDeleting(System::Data::DataRowChangeEventArgs^  e) override;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void RemoveStudentRow(LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  row);
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            static System::Xml::Schema::XmlSchemaComplexType^  GetTypedTableSchema(System::Xml::Schema::XmlSchemaSet^  xs);
        };
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0")]
        ref class ElderRow : public System::Data::DataRow {
            
            private: LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  tableElder;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            ElderRow(System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 ID {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Address {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 Telephone_Number {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Church {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Position {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsNameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetNameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsAddressNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetAddressNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsTelephone_NumberNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetTelephone_NumberNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsChurchNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetChurchNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsPositionNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetPositionNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            cli::array< LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >^  GetStudentRows();
        };
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0")]
        ref class EmployerRow : public System::Data::DataRow {
            
            private: LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  tableEmployer;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            EmployerRow(System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 ID {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  First_Name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Last_Name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 Telephone_Number {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Address {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsFirst_NameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetFirst_NameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsLast_NameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetLast_NameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsTelephone_NumberNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetTelephone_NumberNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsAddressNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetAddressNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            cli::array< LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >^  GetStudentRows();
        };
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0")]
        ref class Grade_PointRow : public System::Data::DataRow {
            
            private: LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  tableGrade_Point;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            Grade_PointRow(System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 ID {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Grade {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 Upper_Range {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 Lower_Range {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 Grade_Point {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsGradeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetGradeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsUpper_RangeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetUpper_RangeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsLower_RangeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetLower_RangeNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsGrade_PointNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetGrade_PointNull();
        };
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0")]
        ref class Parent_or_GuardianRow : public System::Data::DataRow {
            
            private: LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  tableParent_or_Guardian;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            Parent_or_GuardianRow(System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 ID {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  First_Name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Last_Name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Address {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Occupation {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 Telephone_Number {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsFirst_NameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetFirst_NameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsLast_NameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetLast_NameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsAddressNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetAddressNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsOccupationNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetOccupationNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsTelephone_NumberNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetTelephone_NumberNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            cli::array< LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >^  GetStudentRows();
        };
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0")]
        ref class StudentRow : public System::Data::DataRow {
            
            private: LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  tableStudent;
            
            internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            StudentRow(System::Data::DataRowBuilder^  rb);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 ID {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  First_Name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Middle_Names {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Last_Name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Address {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Sex {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::DateTime Application_Date {
                System::DateTime get();
                System::Void set(System::DateTime value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::DateTime Date_of_Birth {
                System::DateTime get();
                System::Void set(System::DateTime value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Place_of_Birth {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 _Parent_Guardian {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 Younger_Siblings {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 Older_Siblings {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Boolean Baptised {
                System::Boolean get();
                System::Void set(System::Boolean value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::DateTime Date_of_Baptism {
                System::DateTime get();
                System::Void set(System::DateTime value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Boolean Attended_High_School {
                System::Boolean get();
                System::Void set(System::Boolean value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Name_of_High_School {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Address_of_High_School {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Ministers_Name {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Ministers_Address {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::String^  Christian_Work_Performed {
                System::String^  get();
                System::Void set(System::String^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 Elder_1 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 Elder_2 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 Employer_1 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Int32 Employer_2 {
                System::Int32 get();
                System::Void set(System::Int32 value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  Parent_or_GuardianRow {
                LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  get();
                System::Void set(LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  ElderRow {
                LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  get();
                System::Void set(LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  EmployerRow {
                LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  get();
                System::Void set(LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  value);
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsFirst_NameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetFirst_NameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsMiddle_NamesNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetMiddle_NamesNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsLast_NameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetLast_NameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsAddressNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetAddressNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsSexNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetSexNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsApplication_DateNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetApplication_DateNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsDate_of_BirthNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetDate_of_BirthNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsPlace_of_BirthNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetPlace_of_BirthNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean Is_Parent_GuardianNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void Set_Parent_GuardianNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsYounger_SiblingsNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetYounger_SiblingsNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsOlder_SiblingsNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetOlder_SiblingsNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsBaptisedNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetBaptisedNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsDate_of_BaptismNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetDate_of_BaptismNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsAttended_High_SchoolNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetAttended_High_SchoolNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsName_of_High_SchoolNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetName_of_High_SchoolNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsAddress_of_High_SchoolNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetAddress_of_High_SchoolNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsMinisters_NameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetMinisters_NameNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsMinisters_AddressNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetMinisters_AddressNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsChristian_Work_PerformedNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetChristian_Work_PerformedNull();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsElder_1Null();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetElder_1Null();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsElder_2Null();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetElder_2Null();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsEmployer_1Null();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetEmployer_1Null();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Boolean IsEmployer_2Null();
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            System::Void SetEmployer_2Null();
        };
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0")]
        ref class ElderRowChangeEvent : public System::EventArgs {
            
            private: LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  eventRow;
            
            private: System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            ElderRowChangeEvent(LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  row, System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  Row {
                LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataRowAction Action {
                System::Data::DataRowAction get();
            }
        };
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0")]
        ref class EmployerRowChangeEvent : public System::EventArgs {
            
            private: LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  eventRow;
            
            private: System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            EmployerRowChangeEvent(LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  row, System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  Row {
                LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataRowAction Action {
                System::Data::DataRowAction get();
            }
        };
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0")]
        ref class Grade_PointRowChangeEvent : public System::EventArgs {
            
            private: LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  eventRow;
            
            private: System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            Grade_PointRowChangeEvent(LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  row, System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  Row {
                LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataRowAction Action {
                System::Data::DataRowAction get();
            }
        };
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0")]
        ref class Parent_or_GuardianRowChangeEvent : public System::EventArgs {
            
            private: LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  eventRow;
            
            private: System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            Parent_or_GuardianRowChangeEvent(LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  row, System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  Row {
                LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataRowAction Action {
                System::Data::DataRowAction get();
            }
        };
        
        public : [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0")]
        ref class StudentRowChangeEvent : public System::EventArgs {
            
            private: LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  eventRow;
            
            private: System::Data::DataRowAction eventAction;
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
            StudentRowChangeEvent(LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  row, System::Data::DataRowAction action);
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  Row {
                LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  get();
            }
            
            public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
             property System::Data::DataRowAction Action {
                System::Data::DataRowAction get();
            }
        };
    };
}
namespace LCBCAdminRegistrationSystem {
    
    
    inline projectDataSet::projectDataSet() {
        this->BeginInit();
        this->InitClass();
        System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler = gcnew System::ComponentModel::CollectionChangeEventHandler(this, &LCBCAdminRegistrationSystem::projectDataSet::SchemaChanged);
        __super::Tables->CollectionChanged += schemaChangedHandler;
        __super::Relations->CollectionChanged += schemaChangedHandler;
        this->EndInit();
    }
    
    inline projectDataSet::projectDataSet(System::Runtime::Serialization::SerializationInfo^  info, System::Runtime::Serialization::StreamingContext context) : 
            System::Data::DataSet(info, context, false) {
        if (this->IsBinarySerialized(info, context) == true) {
            this->InitVars(false);
            System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler1 = gcnew System::ComponentModel::CollectionChangeEventHandler(this, &LCBCAdminRegistrationSystem::projectDataSet::SchemaChanged);
            this->Tables->CollectionChanged += schemaChangedHandler1;
            this->Relations->CollectionChanged += schemaChangedHandler1;
            return;
        }
        System::String^  strSchema = (cli::safe_cast<System::String^  >(info->GetValue(L"XmlSchema", System::String::typeid)));
        if (this->DetermineSchemaSerializationMode(info, context) == System::Data::SchemaSerializationMode::IncludeSchema) {
            System::Data::DataSet^  ds = (gcnew System::Data::DataSet());
            ds->ReadXmlSchema((gcnew System::Xml::XmlTextReader((gcnew System::IO::StringReader(strSchema)))));
            if (ds->Tables[L"Elder"] != nullptr) {
                __super::Tables->Add((gcnew LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable(ds->Tables[L"Elder"])));
            }
            if (ds->Tables[L"Employer"] != nullptr) {
                __super::Tables->Add((gcnew LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable(ds->Tables[L"Employer"])));
            }
            if (ds->Tables[L"Grade Point"] != nullptr) {
                __super::Tables->Add((gcnew LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable(ds->Tables[L"Grade Point"])));
            }
            if (ds->Tables[L"Parent or Guardian"] != nullptr) {
                __super::Tables->Add((gcnew LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable(ds->Tables[L"Parent or Guardian"])));
            }
            if (ds->Tables[L"Student"] != nullptr) {
                __super::Tables->Add((gcnew LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable(ds->Tables[L"Student"])));
            }
            this->DataSetName = ds->DataSetName;
            this->Prefix = ds->Prefix;
            this->Namespace = ds->Namespace;
            this->Locale = ds->Locale;
            this->CaseSensitive = ds->CaseSensitive;
            this->EnforceConstraints = ds->EnforceConstraints;
            this->Merge(ds, false, System::Data::MissingSchemaAction::Add);
            this->InitVars();
        }
        else {
            this->ReadXmlSchema((gcnew System::Xml::XmlTextReader((gcnew System::IO::StringReader(strSchema)))));
        }
        this->GetSerializationData(info, context);
        System::ComponentModel::CollectionChangeEventHandler^  schemaChangedHandler = gcnew System::ComponentModel::CollectionChangeEventHandler(this, &LCBCAdminRegistrationSystem::projectDataSet::SchemaChanged);
        __super::Tables->CollectionChanged += schemaChangedHandler;
        this->Relations->CollectionChanged += schemaChangedHandler;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  projectDataSet::Elder::get() {
        return this->tableElder;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  projectDataSet::Employer::get() {
        return this->tableEmployer;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  projectDataSet::Grade_Point::get() {
        return this->tableGrade_Point;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  projectDataSet::Parent_or_Guardian::get() {
        return this->tableParent_or_Guardian;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  projectDataSet::Student::get() {
        return this->tableStudent;
    }
    
    inline System::Data::SchemaSerializationMode projectDataSet::SchemaSerializationMode::get() {
        return this->_schemaSerializationMode;
    }
    inline System::Void projectDataSet::SchemaSerializationMode::set(System::Data::SchemaSerializationMode value) {
        this->_schemaSerializationMode = __identifier(value);
    }
    
    inline System::Data::DataTableCollection^  projectDataSet::Tables::get() {
        return __super::Tables;
    }
    
    inline System::Data::DataRelationCollection^  projectDataSet::Relations::get() {
        return __super::Relations;
    }
    
    inline System::Void projectDataSet::InitializeDerivedDataSet() {
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline System::Data::DataSet^  projectDataSet::Clone() {
        LCBCAdminRegistrationSystem::projectDataSet^  cln = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet^  >(__super::Clone()));
        cln->InitVars();
        cln->SchemaSerializationMode = this->SchemaSerializationMode;
        return cln;
    }
    
    inline System::Boolean projectDataSet::ShouldSerializeTables() {
        return false;
    }
    
    inline System::Boolean projectDataSet::ShouldSerializeRelations() {
        return false;
    }
    
    inline System::Void projectDataSet::ReadXmlSerializable(System::Xml::XmlReader^  reader) {
        if (this->DetermineSchemaSerializationMode(reader) == System::Data::SchemaSerializationMode::IncludeSchema) {
            this->Reset();
            System::Data::DataSet^  ds = (gcnew System::Data::DataSet());
            ds->ReadXml(reader);
            if (ds->Tables[L"Elder"] != nullptr) {
                __super::Tables->Add((gcnew LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable(ds->Tables[L"Elder"])));
            }
            if (ds->Tables[L"Employer"] != nullptr) {
                __super::Tables->Add((gcnew LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable(ds->Tables[L"Employer"])));
            }
            if (ds->Tables[L"Grade Point"] != nullptr) {
                __super::Tables->Add((gcnew LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable(ds->Tables[L"Grade Point"])));
            }
            if (ds->Tables[L"Parent or Guardian"] != nullptr) {
                __super::Tables->Add((gcnew LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable(ds->Tables[L"Parent or Guardian"])));
            }
            if (ds->Tables[L"Student"] != nullptr) {
                __super::Tables->Add((gcnew LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable(ds->Tables[L"Student"])));
            }
            this->DataSetName = ds->DataSetName;
            this->Prefix = ds->Prefix;
            this->Namespace = ds->Namespace;
            this->Locale = ds->Locale;
            this->CaseSensitive = ds->CaseSensitive;
            this->EnforceConstraints = ds->EnforceConstraints;
            this->Merge(ds, false, System::Data::MissingSchemaAction::Add);
            this->InitVars();
        }
        else {
            this->ReadXml(reader);
            this->InitVars();
        }
    }
    
    inline System::Xml::Schema::XmlSchema^  projectDataSet::GetSchemaSerializable() {
        System::IO::MemoryStream^  stream = (gcnew System::IO::MemoryStream());
        this->WriteXmlSchema((gcnew System::Xml::XmlTextWriter(stream, nullptr)));
        stream->Position = 0;
        return System::Xml::Schema::XmlSchema::Read((gcnew System::Xml::XmlTextReader(stream)), nullptr);
    }
    
    inline System::Void projectDataSet::InitVars() {
        this->InitVars(true);
    }
    
    inline System::Void projectDataSet::InitVars(System::Boolean initTable) {
        this->tableElder = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  >(__super::Tables[L"Elder"]));
        if (initTable == true) {
            if (this->tableElder != nullptr) {
                this->tableElder->InitVars();
            }
        }
        this->tableEmployer = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  >(__super::Tables[L"Employer"]));
        if (initTable == true) {
            if (this->tableEmployer != nullptr) {
                this->tableEmployer->InitVars();
            }
        }
        this->tableGrade_Point = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  >(__super::Tables[L"Grade Point"]));
        if (initTable == true) {
            if (this->tableGrade_Point != nullptr) {
                this->tableGrade_Point->InitVars();
            }
        }
        this->tableParent_or_Guardian = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  >(__super::Tables[L"Parent or Guardian"]));
        if (initTable == true) {
            if (this->tableParent_or_Guardian != nullptr) {
                this->tableParent_or_Guardian->InitVars();
            }
        }
        this->tableStudent = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  >(__super::Tables[L"Student"]));
        if (initTable == true) {
            if (this->tableStudent != nullptr) {
                this->tableStudent->InitVars();
            }
        }
        this->relationReference = this->Relations[L"Reference"];
        this->relationReference1 = this->Relations[L"Reference1"];
        this->relationReference2 = this->Relations[L"Reference2"];
    }
    
    inline System::Void projectDataSet::InitClass() {
        this->DataSetName = L"projectDataSet";
        this->Prefix = L"";
        this->Namespace = L"http://tempuri.org/projectDataSet.xsd";
        this->EnforceConstraints = true;
        this->SchemaSerializationMode = System::Data::SchemaSerializationMode::IncludeSchema;
        this->tableElder = (gcnew LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable());
        __super::Tables->Add(this->tableElder);
        this->tableEmployer = (gcnew LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable());
        __super::Tables->Add(this->tableEmployer);
        this->tableGrade_Point = (gcnew LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable());
        __super::Tables->Add(this->tableGrade_Point);
        this->tableParent_or_Guardian = (gcnew LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable());
        __super::Tables->Add(this->tableParent_or_Guardian);
        this->tableStudent = (gcnew LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable());
        __super::Tables->Add(this->tableStudent);
        this->relationReference = (gcnew System::Data::DataRelation(L"Reference", gcnew cli::array< System::Data::DataColumn^  >(1) {this->tableParent_or_Guardian->IDColumn}, 
            gcnew cli::array< System::Data::DataColumn^  >(1) {this->tableStudent->_Parent_GuardianColumn}, false));
        this->Relations->Add(this->relationReference);
        this->relationReference1 = (gcnew System::Data::DataRelation(L"Reference1", gcnew cli::array< System::Data::DataColumn^  >(1) {this->tableElder->IDColumn}, 
            gcnew cli::array< System::Data::DataColumn^  >(1) {this->tableStudent->Elder_1Column}, false));
        this->Relations->Add(this->relationReference1);
        this->relationReference2 = (gcnew System::Data::DataRelation(L"Reference2", gcnew cli::array< System::Data::DataColumn^  >(1) {this->tableEmployer->IDColumn}, 
            gcnew cli::array< System::Data::DataColumn^  >(1) {this->tableStudent->Employer_2Column}, false));
        this->Relations->Add(this->relationReference2);
    }
    
    inline System::Boolean projectDataSet::ShouldSerializeElder() {
        return false;
    }
    
    inline System::Boolean projectDataSet::ShouldSerializeEmployer() {
        return false;
    }
    
    inline System::Boolean projectDataSet::ShouldSerializeGrade_Point() {
        return false;
    }
    
    inline System::Boolean projectDataSet::ShouldSerializeParent_or_Guardian() {
        return false;
    }
    
    inline System::Boolean projectDataSet::ShouldSerializeStudent() {
        return false;
    }
    
    inline System::Void projectDataSet::SchemaChanged(System::Object^  sender, System::ComponentModel::CollectionChangeEventArgs^  e) {
        if (e->Action == System::ComponentModel::CollectionChangeAction::Remove) {
            this->InitVars();
        }
    }
    
    inline System::Xml::Schema::XmlSchemaComplexType^  projectDataSet::GetTypedDataSetSchema(System::Xml::Schema::XmlSchemaSet^  xs) {
        LCBCAdminRegistrationSystem::projectDataSet^  ds = (gcnew LCBCAdminRegistrationSystem::projectDataSet());
        System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew System::Xml::Schema::XmlSchemaComplexType());
        System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew System::Xml::Schema::XmlSchemaSequence());
        xs->Add(ds->GetSchemaSerializable());
        System::Xml::Schema::XmlSchemaAny^  any = (gcnew System::Xml::Schema::XmlSchemaAny());
        any->Namespace = ds->Namespace;
        sequence->Items->Add(any);
        type->Particle = sequence;
        return type;
    }
    
    
    inline projectDataSet::ElderDataTable::ElderDataTable() {
        this->TableName = L"Elder";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline projectDataSet::ElderDataTable::ElderDataTable(System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline projectDataSet::ElderDataTable::ElderDataTable(System::Runtime::Serialization::SerializationInfo^  info, System::Runtime::Serialization::StreamingContext context) : 
            System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline System::Data::DataColumn^  projectDataSet::ElderDataTable::IDColumn::get() {
        return this->columnID;
    }
    
    inline System::Data::DataColumn^  projectDataSet::ElderDataTable::NameColumn::get() {
        return this->columnName;
    }
    
    inline System::Data::DataColumn^  projectDataSet::ElderDataTable::AddressColumn::get() {
        return this->columnAddress;
    }
    
    inline System::Data::DataColumn^  projectDataSet::ElderDataTable::Telephone_NumberColumn::get() {
        return this->columnTelephone_Number;
    }
    
    inline System::Data::DataColumn^  projectDataSet::ElderDataTable::ChurchColumn::get() {
        return this->columnChurch;
    }
    
    inline System::Data::DataColumn^  projectDataSet::ElderDataTable::PositionColumn::get() {
        return this->columnPosition;
    }
    
    inline System::Int32 projectDataSet::ElderDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  projectDataSet::ElderDataTable::default::get(System::Int32 index) {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  >(this->Rows[index]));
    }
    
    inline System::Void projectDataSet::ElderDataTable::AddElderRow(LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  row) {
        this->Rows->Add(row);
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  projectDataSet::ElderDataTable::AddElderRow(System::String^  Name, 
                System::String^  Address, System::Int32 Telephone_Number, System::String^  Church, System::String^  Position) {
        LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  rowElderRow = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  >(this->NewRow()));
        rowElderRow->ItemArray = gcnew cli::array< System::Object^  >(6) {nullptr, Name, Address, Telephone_Number, Church, Position};
        this->Rows->Add(rowElderRow);
        return rowElderRow;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  projectDataSet::ElderDataTable::FindByID(System::Int32 ID) {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  >(this->Rows->Find(gcnew cli::array< System::Object^  >(1) {ID})));
    }
    
    inline System::Collections::IEnumerator^  projectDataSet::ElderDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline System::Data::DataTable^  projectDataSet::ElderDataTable::Clone() {
        LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  cln = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline System::Data::DataTable^  projectDataSet::ElderDataTable::CreateInstance() {
        return (gcnew LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable());
    }
    
    inline System::Void projectDataSet::ElderDataTable::InitVars() {
        this->columnID = __super::Columns[L"ID"];
        this->columnName = __super::Columns[L"Name"];
        this->columnAddress = __super::Columns[L"Address"];
        this->columnTelephone_Number = __super::Columns[L"Telephone Number"];
        this->columnChurch = __super::Columns[L"Church"];
        this->columnPosition = __super::Columns[L"Position"];
    }
    
    inline System::Void projectDataSet::ElderDataTable::InitClass() {
        this->columnID = (gcnew System::Data::DataColumn(L"ID", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnID);
        this->columnName = (gcnew System::Data::DataColumn(L"Name", System::String::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnName);
        this->columnAddress = (gcnew System::Data::DataColumn(L"Address", System::String::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnAddress);
        this->columnTelephone_Number = (gcnew System::Data::DataColumn(L"Telephone Number", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        this->columnTelephone_Number->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Telephone_Number");
        this->columnTelephone_Number->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Telephone_NumberColumn");
        this->columnTelephone_Number->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnTelephone_Number");
        this->columnTelephone_Number->ExtendedProperties->Add(L"Generator_UserColumnName", L"Telephone Number");
        __super::Columns->Add(this->columnTelephone_Number);
        this->columnChurch = (gcnew System::Data::DataColumn(L"Church", System::String::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnChurch);
        this->columnPosition = (gcnew System::Data::DataColumn(L"Position", System::String::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnPosition);
        this->Constraints->Add((gcnew System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< System::Data::DataColumn^  >(1) {this->columnID}, 
                true)));
        this->columnID->AutoIncrement = true;
        this->columnID->AllowDBNull = false;
        this->columnID->Unique = true;
        this->columnName->MaxLength = 50;
        this->columnAddress->MaxLength = 50;
        this->columnChurch->MaxLength = 50;
        this->columnPosition->MaxLength = 50;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  projectDataSet::ElderDataTable::NewElderRow() {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  >(this->NewRow()));
    }
    
    inline System::Data::DataRow^  projectDataSet::ElderDataTable::NewRowFromBuilder(System::Data::DataRowBuilder^  builder) {
        return (gcnew LCBCAdminRegistrationSystem::projectDataSet::ElderRow(builder));
    }
    
    inline System::Type^  projectDataSet::ElderDataTable::GetRowType() {
        return LCBCAdminRegistrationSystem::projectDataSet::ElderRow::typeid;
    }
    
    inline System::Void projectDataSet::ElderDataTable::OnRowChanged(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->ElderRowChanged(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::ElderRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::ElderDataTable::OnRowChanging(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->ElderRowChanging(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::ElderRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::ElderDataTable::OnRowDeleted(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->ElderRowDeleted(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::ElderRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::ElderDataTable::OnRowDeleting(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->ElderRowDeleting(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::ElderRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::ElderDataTable::RemoveElderRow(LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline System::Xml::Schema::XmlSchemaComplexType^  projectDataSet::ElderDataTable::GetTypedTableSchema(System::Xml::Schema::XmlSchemaSet^  xs) {
        System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew System::Xml::Schema::XmlSchemaComplexType());
        System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew System::Xml::Schema::XmlSchemaSequence());
        LCBCAdminRegistrationSystem::projectDataSet^  ds = (gcnew LCBCAdminRegistrationSystem::projectDataSet());
        xs->Add(ds->GetSchemaSerializable());
        System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = System::Decimal(0);
        any1->MaxOccurs = System::Decimal::MaxValue;
        any1->ProcessContents = System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = System::Decimal(1);
        any2->ProcessContents = System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"ElderDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        return type;
    }
    
    
    inline projectDataSet::EmployerDataTable::EmployerDataTable() {
        this->TableName = L"Employer";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline projectDataSet::EmployerDataTable::EmployerDataTable(System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline projectDataSet::EmployerDataTable::EmployerDataTable(System::Runtime::Serialization::SerializationInfo^  info, 
                System::Runtime::Serialization::StreamingContext context) : 
            System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline System::Data::DataColumn^  projectDataSet::EmployerDataTable::IDColumn::get() {
        return this->columnID;
    }
    
    inline System::Data::DataColumn^  projectDataSet::EmployerDataTable::First_NameColumn::get() {
        return this->columnFirst_Name;
    }
    
    inline System::Data::DataColumn^  projectDataSet::EmployerDataTable::Last_NameColumn::get() {
        return this->columnLast_Name;
    }
    
    inline System::Data::DataColumn^  projectDataSet::EmployerDataTable::Telephone_NumberColumn::get() {
        return this->columnTelephone_Number;
    }
    
    inline System::Data::DataColumn^  projectDataSet::EmployerDataTable::AddressColumn::get() {
        return this->columnAddress;
    }
    
    inline System::Int32 projectDataSet::EmployerDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  projectDataSet::EmployerDataTable::default::get(System::Int32 index) {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  >(this->Rows[index]));
    }
    
    inline System::Void projectDataSet::EmployerDataTable::AddEmployerRow(LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  row) {
        this->Rows->Add(row);
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  projectDataSet::EmployerDataTable::AddEmployerRow(System::String^  First_Name, 
                System::String^  Last_Name, System::Int32 Telephone_Number, System::String^  Address) {
        LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  rowEmployerRow = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  >(this->NewRow()));
        rowEmployerRow->ItemArray = gcnew cli::array< System::Object^  >(5) {nullptr, First_Name, Last_Name, Telephone_Number, 
            Address};
        this->Rows->Add(rowEmployerRow);
        return rowEmployerRow;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  projectDataSet::EmployerDataTable::FindByID(System::Int32 ID) {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  >(this->Rows->Find(gcnew cli::array< System::Object^  >(1) {ID})));
    }
    
    inline System::Collections::IEnumerator^  projectDataSet::EmployerDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline System::Data::DataTable^  projectDataSet::EmployerDataTable::Clone() {
        LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  cln = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline System::Data::DataTable^  projectDataSet::EmployerDataTable::CreateInstance() {
        return (gcnew LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable());
    }
    
    inline System::Void projectDataSet::EmployerDataTable::InitVars() {
        this->columnID = __super::Columns[L"ID"];
        this->columnFirst_Name = __super::Columns[L"First Name"];
        this->columnLast_Name = __super::Columns[L"Last Name"];
        this->columnTelephone_Number = __super::Columns[L"Telephone Number"];
        this->columnAddress = __super::Columns[L"Address"];
    }
    
    inline System::Void projectDataSet::EmployerDataTable::InitClass() {
        this->columnID = (gcnew System::Data::DataColumn(L"ID", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnID);
        this->columnFirst_Name = (gcnew System::Data::DataColumn(L"First Name", System::String::typeid, nullptr, System::Data::MappingType::Element));
        this->columnFirst_Name->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"First_Name");
        this->columnFirst_Name->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"First_NameColumn");
        this->columnFirst_Name->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnFirst_Name");
        this->columnFirst_Name->ExtendedProperties->Add(L"Generator_UserColumnName", L"First Name");
        __super::Columns->Add(this->columnFirst_Name);
        this->columnLast_Name = (gcnew System::Data::DataColumn(L"Last Name", System::String::typeid, nullptr, System::Data::MappingType::Element));
        this->columnLast_Name->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Last_Name");
        this->columnLast_Name->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Last_NameColumn");
        this->columnLast_Name->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnLast_Name");
        this->columnLast_Name->ExtendedProperties->Add(L"Generator_UserColumnName", L"Last Name");
        __super::Columns->Add(this->columnLast_Name);
        this->columnTelephone_Number = (gcnew System::Data::DataColumn(L"Telephone Number", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        this->columnTelephone_Number->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Telephone_Number");
        this->columnTelephone_Number->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Telephone_NumberColumn");
        this->columnTelephone_Number->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnTelephone_Number");
        this->columnTelephone_Number->ExtendedProperties->Add(L"Generator_UserColumnName", L"Telephone Number");
        __super::Columns->Add(this->columnTelephone_Number);
        this->columnAddress = (gcnew System::Data::DataColumn(L"Address", System::String::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnAddress);
        this->Constraints->Add((gcnew System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< System::Data::DataColumn^  >(1) {this->columnID}, 
                true)));
        this->columnID->AutoIncrement = true;
        this->columnID->AllowDBNull = false;
        this->columnID->Unique = true;
        this->columnFirst_Name->MaxLength = 50;
        this->columnLast_Name->MaxLength = 50;
        this->columnAddress->MaxLength = 50;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  projectDataSet::EmployerDataTable::NewEmployerRow() {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  >(this->NewRow()));
    }
    
    inline System::Data::DataRow^  projectDataSet::EmployerDataTable::NewRowFromBuilder(System::Data::DataRowBuilder^  builder) {
        return (gcnew LCBCAdminRegistrationSystem::projectDataSet::EmployerRow(builder));
    }
    
    inline System::Type^  projectDataSet::EmployerDataTable::GetRowType() {
        return LCBCAdminRegistrationSystem::projectDataSet::EmployerRow::typeid;
    }
    
    inline System::Void projectDataSet::EmployerDataTable::OnRowChanged(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->EmployerRowChanged(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::EmployerRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::EmployerDataTable::OnRowChanging(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->EmployerRowChanging(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::EmployerRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::EmployerDataTable::OnRowDeleted(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->EmployerRowDeleted(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::EmployerRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::EmployerDataTable::OnRowDeleting(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->EmployerRowDeleting(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::EmployerRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::EmployerDataTable::RemoveEmployerRow(LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline System::Xml::Schema::XmlSchemaComplexType^  projectDataSet::EmployerDataTable::GetTypedTableSchema(System::Xml::Schema::XmlSchemaSet^  xs) {
        System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew System::Xml::Schema::XmlSchemaComplexType());
        System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew System::Xml::Schema::XmlSchemaSequence());
        LCBCAdminRegistrationSystem::projectDataSet^  ds = (gcnew LCBCAdminRegistrationSystem::projectDataSet());
        xs->Add(ds->GetSchemaSerializable());
        System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = System::Decimal(0);
        any1->MaxOccurs = System::Decimal::MaxValue;
        any1->ProcessContents = System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = System::Decimal(1);
        any2->ProcessContents = System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"EmployerDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        return type;
    }
    
    
    inline projectDataSet::Grade_PointDataTable::Grade_PointDataTable() {
        this->TableName = L"Grade Point";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline projectDataSet::Grade_PointDataTable::Grade_PointDataTable(System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline projectDataSet::Grade_PointDataTable::Grade_PointDataTable(System::Runtime::Serialization::SerializationInfo^  info, 
                System::Runtime::Serialization::StreamingContext context) : 
            System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline System::Data::DataColumn^  projectDataSet::Grade_PointDataTable::IDColumn::get() {
        return this->columnID;
    }
    
    inline System::Data::DataColumn^  projectDataSet::Grade_PointDataTable::GradeColumn::get() {
        return this->columnGrade;
    }
    
    inline System::Data::DataColumn^  projectDataSet::Grade_PointDataTable::Upper_RangeColumn::get() {
        return this->columnUpper_Range;
    }
    
    inline System::Data::DataColumn^  projectDataSet::Grade_PointDataTable::Lower_RangeColumn::get() {
        return this->columnLower_Range;
    }
    
    inline System::Data::DataColumn^  projectDataSet::Grade_PointDataTable::Grade_PointColumn::get() {
        return this->columnGrade_Point;
    }
    
    inline System::Int32 projectDataSet::Grade_PointDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  projectDataSet::Grade_PointDataTable::default::get(
                System::Int32 index) {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  >(this->Rows[index]));
    }
    
    inline System::Void projectDataSet::Grade_PointDataTable::AddGrade_PointRow(LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  row) {
        this->Rows->Add(row);
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  projectDataSet::Grade_PointDataTable::AddGrade_PointRow(
                System::String^  Grade, System::Int32 Upper_Range, System::Int32 Lower_Range, System::Int32 Grade_Point) {
        LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  rowGrade_PointRow = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  >(this->NewRow()));
        rowGrade_PointRow->ItemArray = gcnew cli::array< System::Object^  >(5) {nullptr, Grade, Upper_Range, Lower_Range, Grade_Point};
        this->Rows->Add(rowGrade_PointRow);
        return rowGrade_PointRow;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  projectDataSet::Grade_PointDataTable::FindByID(System::Int32 ID) {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  >(this->Rows->Find(gcnew cli::array< System::Object^  >(1) {ID})));
    }
    
    inline System::Collections::IEnumerator^  projectDataSet::Grade_PointDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline System::Data::DataTable^  projectDataSet::Grade_PointDataTable::Clone() {
        LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  cln = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline System::Data::DataTable^  projectDataSet::Grade_PointDataTable::CreateInstance() {
        return (gcnew LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable());
    }
    
    inline System::Void projectDataSet::Grade_PointDataTable::InitVars() {
        this->columnID = __super::Columns[L"ID"];
        this->columnGrade = __super::Columns[L"Grade"];
        this->columnUpper_Range = __super::Columns[L"Upper Range"];
        this->columnLower_Range = __super::Columns[L"Lower Range"];
        this->columnGrade_Point = __super::Columns[L"Grade Point"];
    }
    
    inline System::Void projectDataSet::Grade_PointDataTable::InitClass() {
        this->columnID = (gcnew System::Data::DataColumn(L"ID", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnID);
        this->columnGrade = (gcnew System::Data::DataColumn(L"Grade", System::String::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnGrade);
        this->columnUpper_Range = (gcnew System::Data::DataColumn(L"Upper Range", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        this->columnUpper_Range->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Upper_Range");
        this->columnUpper_Range->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Upper_RangeColumn");
        this->columnUpper_Range->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnUpper_Range");
        this->columnUpper_Range->ExtendedProperties->Add(L"Generator_UserColumnName", L"Upper Range");
        __super::Columns->Add(this->columnUpper_Range);
        this->columnLower_Range = (gcnew System::Data::DataColumn(L"Lower Range", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        this->columnLower_Range->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Lower_Range");
        this->columnLower_Range->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Lower_RangeColumn");
        this->columnLower_Range->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnLower_Range");
        this->columnLower_Range->ExtendedProperties->Add(L"Generator_UserColumnName", L"Lower Range");
        __super::Columns->Add(this->columnLower_Range);
        this->columnGrade_Point = (gcnew System::Data::DataColumn(L"Grade Point", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        this->columnGrade_Point->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Grade_Point");
        this->columnGrade_Point->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Grade_PointColumn");
        this->columnGrade_Point->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnGrade_Point");
        this->columnGrade_Point->ExtendedProperties->Add(L"Generator_UserColumnName", L"Grade Point");
        __super::Columns->Add(this->columnGrade_Point);
        this->Constraints->Add((gcnew System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< System::Data::DataColumn^  >(1) {this->columnID}, 
                true)));
        this->columnID->AutoIncrement = true;
        this->columnID->AllowDBNull = false;
        this->columnID->Unique = true;
        this->columnGrade->MaxLength = 50;
        this->ExtendedProperties->Add(L"Generator_RowClassName", L"Grade_PointRow");
        this->ExtendedProperties->Add(L"Generator_RowEvArgName", L"Grade_PointRowChangeEvent");
        this->ExtendedProperties->Add(L"Generator_RowEvHandlerName", L"Grade_PointRowChangeEventHandler");
        this->ExtendedProperties->Add(L"Generator_TableClassName", L"Grade_PointDataTable");
        this->ExtendedProperties->Add(L"Generator_TablePropName", L"Grade_Point");
        this->ExtendedProperties->Add(L"Generator_TableVarName", L"tableGrade_Point");
        this->ExtendedProperties->Add(L"Generator_UserTableName", L"Grade Point");
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  projectDataSet::Grade_PointDataTable::NewGrade_PointRow() {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  >(this->NewRow()));
    }
    
    inline System::Data::DataRow^  projectDataSet::Grade_PointDataTable::NewRowFromBuilder(System::Data::DataRowBuilder^  builder) {
        return (gcnew LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow(builder));
    }
    
    inline System::Type^  projectDataSet::Grade_PointDataTable::GetRowType() {
        return LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow::typeid;
    }
    
    inline System::Void projectDataSet::Grade_PointDataTable::OnRowChanged(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->Grade_PointRowChanged(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::Grade_PointDataTable::OnRowChanging(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->Grade_PointRowChanging(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::Grade_PointDataTable::OnRowDeleted(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->Grade_PointRowDeleted(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::Grade_PointDataTable::OnRowDeleting(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->Grade_PointRowDeleting(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::Grade_PointDataTable::RemoveGrade_PointRow(LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline System::Xml::Schema::XmlSchemaComplexType^  projectDataSet::Grade_PointDataTable::GetTypedTableSchema(System::Xml::Schema::XmlSchemaSet^  xs) {
        System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew System::Xml::Schema::XmlSchemaComplexType());
        System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew System::Xml::Schema::XmlSchemaSequence());
        LCBCAdminRegistrationSystem::projectDataSet^  ds = (gcnew LCBCAdminRegistrationSystem::projectDataSet());
        xs->Add(ds->GetSchemaSerializable());
        System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = System::Decimal(0);
        any1->MaxOccurs = System::Decimal::MaxValue;
        any1->ProcessContents = System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = System::Decimal(1);
        any2->ProcessContents = System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"Grade_PointDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        return type;
    }
    
    
    inline projectDataSet::Parent_or_GuardianDataTable::Parent_or_GuardianDataTable() {
        this->TableName = L"Parent or Guardian";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline projectDataSet::Parent_or_GuardianDataTable::Parent_or_GuardianDataTable(System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline projectDataSet::Parent_or_GuardianDataTable::Parent_or_GuardianDataTable(System::Runtime::Serialization::SerializationInfo^  info, 
                System::Runtime::Serialization::StreamingContext context) : 
            System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline System::Data::DataColumn^  projectDataSet::Parent_or_GuardianDataTable::IDColumn::get() {
        return this->columnID;
    }
    
    inline System::Data::DataColumn^  projectDataSet::Parent_or_GuardianDataTable::First_NameColumn::get() {
        return this->columnFirst_Name;
    }
    
    inline System::Data::DataColumn^  projectDataSet::Parent_or_GuardianDataTable::Last_NameColumn::get() {
        return this->columnLast_Name;
    }
    
    inline System::Data::DataColumn^  projectDataSet::Parent_or_GuardianDataTable::AddressColumn::get() {
        return this->columnAddress;
    }
    
    inline System::Data::DataColumn^  projectDataSet::Parent_or_GuardianDataTable::OccupationColumn::get() {
        return this->columnOccupation;
    }
    
    inline System::Data::DataColumn^  projectDataSet::Parent_or_GuardianDataTable::Telephone_NumberColumn::get() {
        return this->columnTelephone_Number;
    }
    
    inline System::Int32 projectDataSet::Parent_or_GuardianDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  projectDataSet::Parent_or_GuardianDataTable::default::get(
                System::Int32 index) {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  >(this->Rows[index]));
    }
    
    inline System::Void projectDataSet::Parent_or_GuardianDataTable::AddParent_or_GuardianRow(LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  row) {
        this->Rows->Add(row);
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  projectDataSet::Parent_or_GuardianDataTable::AddParent_or_GuardianRow(
                System::String^  First_Name, System::String^  Last_Name, System::String^  Address, System::String^  Occupation, System::Int32 Telephone_Number) {
        LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  rowParent_or_GuardianRow = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  >(this->NewRow()));
        rowParent_or_GuardianRow->ItemArray = gcnew cli::array< System::Object^  >(6) {nullptr, First_Name, Last_Name, Address, 
            Occupation, Telephone_Number};
        this->Rows->Add(rowParent_or_GuardianRow);
        return rowParent_or_GuardianRow;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  projectDataSet::Parent_or_GuardianDataTable::FindByID(
                System::Int32 ID) {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  >(this->Rows->Find(gcnew cli::array< System::Object^  >(1) {ID})));
    }
    
    inline System::Collections::IEnumerator^  projectDataSet::Parent_or_GuardianDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline System::Data::DataTable^  projectDataSet::Parent_or_GuardianDataTable::Clone() {
        LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  cln = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline System::Data::DataTable^  projectDataSet::Parent_or_GuardianDataTable::CreateInstance() {
        return (gcnew LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable());
    }
    
    inline System::Void projectDataSet::Parent_or_GuardianDataTable::InitVars() {
        this->columnID = __super::Columns[L"ID"];
        this->columnFirst_Name = __super::Columns[L"First Name"];
        this->columnLast_Name = __super::Columns[L"Last Name"];
        this->columnAddress = __super::Columns[L"Address"];
        this->columnOccupation = __super::Columns[L"Occupation"];
        this->columnTelephone_Number = __super::Columns[L"Telephone Number"];
    }
    
    inline System::Void projectDataSet::Parent_or_GuardianDataTable::InitClass() {
        this->columnID = (gcnew System::Data::DataColumn(L"ID", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnID);
        this->columnFirst_Name = (gcnew System::Data::DataColumn(L"First Name", System::String::typeid, nullptr, System::Data::MappingType::Element));
        this->columnFirst_Name->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"First_Name");
        this->columnFirst_Name->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"First_NameColumn");
        this->columnFirst_Name->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnFirst_Name");
        this->columnFirst_Name->ExtendedProperties->Add(L"Generator_UserColumnName", L"First Name");
        __super::Columns->Add(this->columnFirst_Name);
        this->columnLast_Name = (gcnew System::Data::DataColumn(L"Last Name", System::String::typeid, nullptr, System::Data::MappingType::Element));
        this->columnLast_Name->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Last_Name");
        this->columnLast_Name->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Last_NameColumn");
        this->columnLast_Name->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnLast_Name");
        this->columnLast_Name->ExtendedProperties->Add(L"Generator_UserColumnName", L"Last Name");
        __super::Columns->Add(this->columnLast_Name);
        this->columnAddress = (gcnew System::Data::DataColumn(L"Address", System::String::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnAddress);
        this->columnOccupation = (gcnew System::Data::DataColumn(L"Occupation", System::String::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnOccupation);
        this->columnTelephone_Number = (gcnew System::Data::DataColumn(L"Telephone Number", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        this->columnTelephone_Number->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Telephone_Number");
        this->columnTelephone_Number->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Telephone_NumberColumn");
        this->columnTelephone_Number->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnTelephone_Number");
        this->columnTelephone_Number->ExtendedProperties->Add(L"Generator_UserColumnName", L"Telephone Number");
        __super::Columns->Add(this->columnTelephone_Number);
        this->Constraints->Add((gcnew System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< System::Data::DataColumn^  >(1) {this->columnID}, 
                true)));
        this->columnID->AutoIncrement = true;
        this->columnID->AllowDBNull = false;
        this->columnID->Unique = true;
        this->columnFirst_Name->MaxLength = 50;
        this->columnLast_Name->MaxLength = 50;
        this->columnAddress->MaxLength = 50;
        this->columnOccupation->MaxLength = 50;
        this->ExtendedProperties->Add(L"Generator_RowClassName", L"Parent_or_GuardianRow");
        this->ExtendedProperties->Add(L"Generator_RowEvArgName", L"Parent_or_GuardianRowChangeEvent");
        this->ExtendedProperties->Add(L"Generator_RowEvHandlerName", L"Parent_or_GuardianRowChangeEventHandler");
        this->ExtendedProperties->Add(L"Generator_TableClassName", L"Parent_or_GuardianDataTable");
        this->ExtendedProperties->Add(L"Generator_TablePropName", L"Parent_or_Guardian");
        this->ExtendedProperties->Add(L"Generator_TableVarName", L"tableParent_or_Guardian");
        this->ExtendedProperties->Add(L"Generator_UserTableName", L"Parent or Guardian");
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  projectDataSet::Parent_or_GuardianDataTable::NewParent_or_GuardianRow() {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  >(this->NewRow()));
    }
    
    inline System::Data::DataRow^  projectDataSet::Parent_or_GuardianDataTable::NewRowFromBuilder(System::Data::DataRowBuilder^  builder) {
        return (gcnew LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow(builder));
    }
    
    inline System::Type^  projectDataSet::Parent_or_GuardianDataTable::GetRowType() {
        return LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow::typeid;
    }
    
    inline System::Void projectDataSet::Parent_or_GuardianDataTable::OnRowChanged(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->Parent_or_GuardianRowChanged(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::Parent_or_GuardianDataTable::OnRowChanging(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->Parent_or_GuardianRowChanging(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::Parent_or_GuardianDataTable::OnRowDeleted(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->Parent_or_GuardianRowDeleted(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::Parent_or_GuardianDataTable::OnRowDeleting(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->Parent_or_GuardianRowDeleting(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::Parent_or_GuardianDataTable::RemoveParent_or_GuardianRow(LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline System::Xml::Schema::XmlSchemaComplexType^  projectDataSet::Parent_or_GuardianDataTable::GetTypedTableSchema(System::Xml::Schema::XmlSchemaSet^  xs) {
        System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew System::Xml::Schema::XmlSchemaComplexType());
        System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew System::Xml::Schema::XmlSchemaSequence());
        LCBCAdminRegistrationSystem::projectDataSet^  ds = (gcnew LCBCAdminRegistrationSystem::projectDataSet());
        xs->Add(ds->GetSchemaSerializable());
        System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = System::Decimal(0);
        any1->MaxOccurs = System::Decimal::MaxValue;
        any1->ProcessContents = System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = System::Decimal(1);
        any2->ProcessContents = System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"Parent_or_GuardianDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        return type;
    }
    
    
    inline projectDataSet::StudentDataTable::StudentDataTable() {
        this->TableName = L"Student";
        this->BeginInit();
        this->InitClass();
        this->EndInit();
    }
    
    inline projectDataSet::StudentDataTable::StudentDataTable(System::Data::DataTable^  table) {
        this->TableName = table->TableName;
        if (table->CaseSensitive != table->DataSet->CaseSensitive) {
            this->CaseSensitive = table->CaseSensitive;
        }
        if (table->Locale->ToString() != table->DataSet->Locale->ToString()) {
            this->Locale = table->Locale;
        }
        if (table->Namespace != table->DataSet->Namespace) {
            this->Namespace = table->Namespace;
        }
        this->Prefix = table->Prefix;
        this->MinimumCapacity = table->MinimumCapacity;
    }
    
    inline projectDataSet::StudentDataTable::StudentDataTable(System::Runtime::Serialization::SerializationInfo^  info, System::Runtime::Serialization::StreamingContext context) : 
            System::Data::DataTable(info, context) {
        this->InitVars();
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::IDColumn::get() {
        return this->columnID;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::First_NameColumn::get() {
        return this->columnFirst_Name;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Middle_NamesColumn::get() {
        return this->columnMiddle_Names;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Last_NameColumn::get() {
        return this->columnLast_Name;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::AddressColumn::get() {
        return this->columnAddress;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::SexColumn::get() {
        return this->columnSex;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Application_DateColumn::get() {
        return this->columnApplication_Date;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Date_of_BirthColumn::get() {
        return this->columnDate_of_Birth;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Place_of_BirthColumn::get() {
        return this->columnPlace_of_Birth;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::_Parent_GuardianColumn::get() {
        return this->_columnParent_Guardian;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Younger_SiblingsColumn::get() {
        return this->columnYounger_Siblings;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Older_SiblingsColumn::get() {
        return this->columnOlder_Siblings;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::BaptisedColumn::get() {
        return this->columnBaptised;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Date_of_BaptismColumn::get() {
        return this->columnDate_of_Baptism;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Attended_High_SchoolColumn::get() {
        return this->columnAttended_High_School;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Name_of_High_SchoolColumn::get() {
        return this->columnName_of_High_School;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Address_of_High_SchoolColumn::get() {
        return this->columnAddress_of_High_School;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Ministers_NameColumn::get() {
        return this->columnMinisters_Name;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Ministers_AddressColumn::get() {
        return this->columnMinisters_Address;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Christian_Work_PerformedColumn::get() {
        return this->columnChristian_Work_Performed;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Elder_1Column::get() {
        return this->columnElder_1;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Elder_2Column::get() {
        return this->columnElder_2;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Employer_1Column::get() {
        return this->columnEmployer_1;
    }
    
    inline System::Data::DataColumn^  projectDataSet::StudentDataTable::Employer_2Column::get() {
        return this->columnEmployer_2;
    }
    
    inline System::Int32 projectDataSet::StudentDataTable::Count::get() {
        return this->Rows->Count;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  projectDataSet::StudentDataTable::default::get(System::Int32 index) {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >(this->Rows[index]));
    }
    
    inline System::Void projectDataSet::StudentDataTable::AddStudentRow(LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  row) {
        this->Rows->Add(row);
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  projectDataSet::StudentDataTable::AddStudentRow(
                System::String^  First_Name, 
                System::String^  Middle_Names, 
                System::String^  Last_Name, 
                System::String^  Address, 
                System::String^  Sex, 
                System::DateTime Application_Date, 
                System::DateTime Date_of_Birth, 
                System::String^  Place_of_Birth, 
                LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  parentParent_or_GuardianRowByReference, 
                System::Int32 Younger_Siblings, 
                System::Int32 Older_Siblings, 
                System::Boolean Baptised, 
                System::DateTime Date_of_Baptism, 
                System::Boolean Attended_High_School, 
                System::String^  Name_of_High_School, 
                System::String^  Address_of_High_School, 
                System::String^  Ministers_Name, 
                System::String^  Ministers_Address, 
                System::String^  Christian_Work_Performed, 
                LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  parentElderRowByReference1, 
                System::Int32 Elder_2, 
                System::Int32 Employer_1, 
                LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  parentEmployerRowByReference2) {
        LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  rowStudentRow = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >(this->NewRow()));
        rowStudentRow->ItemArray = gcnew cli::array< System::Object^  >(24) {nullptr, First_Name, Middle_Names, Last_Name, Address, 
            Sex, Application_Date, Date_of_Birth, Place_of_Birth, parentParent_or_GuardianRowByReference[0], Younger_Siblings, Older_Siblings, 
            Baptised, Date_of_Baptism, Attended_High_School, Name_of_High_School, Address_of_High_School, Ministers_Name, Ministers_Address, 
            Christian_Work_Performed, parentElderRowByReference1[0], Elder_2, Employer_1, parentEmployerRowByReference2[0]};
        this->Rows->Add(rowStudentRow);
        return rowStudentRow;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  projectDataSet::StudentDataTable::FindByID(System::Int32 ID) {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >(this->Rows->Find(gcnew cli::array< System::Object^  >(1) {ID})));
    }
    
    inline System::Collections::IEnumerator^  projectDataSet::StudentDataTable::GetEnumerator() {
        return this->Rows->GetEnumerator();
    }
    
    inline System::Data::DataTable^  projectDataSet::StudentDataTable::Clone() {
        LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  cln = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  >(__super::Clone()));
        cln->InitVars();
        return cln;
    }
    
    inline System::Data::DataTable^  projectDataSet::StudentDataTable::CreateInstance() {
        return (gcnew LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable());
    }
    
    inline System::Void projectDataSet::StudentDataTable::InitVars() {
        this->columnID = __super::Columns[L"ID"];
        this->columnFirst_Name = __super::Columns[L"First Name"];
        this->columnMiddle_Names = __super::Columns[L"Middle Names"];
        this->columnLast_Name = __super::Columns[L"Last Name"];
        this->columnAddress = __super::Columns[L"Address"];
        this->columnSex = __super::Columns[L"Sex"];
        this->columnApplication_Date = __super::Columns[L"Application Date"];
        this->columnDate_of_Birth = __super::Columns[L"Date of Birth"];
        this->columnPlace_of_Birth = __super::Columns[L"Place of Birth"];
        this->_columnParent_Guardian = __super::Columns[L"Parent/Guardian"];
        this->columnYounger_Siblings = __super::Columns[L"Younger Siblings"];
        this->columnOlder_Siblings = __super::Columns[L"Older Siblings"];
        this->columnBaptised = __super::Columns[L"Baptised"];
        this->columnDate_of_Baptism = __super::Columns[L"Date of Baptism"];
        this->columnAttended_High_School = __super::Columns[L"Attended High School"];
        this->columnName_of_High_School = __super::Columns[L"Name of High School"];
        this->columnAddress_of_High_School = __super::Columns[L"Address of High School"];
        this->columnMinisters_Name = __super::Columns[L"Ministers Name"];
        this->columnMinisters_Address = __super::Columns[L"Ministers Address"];
        this->columnChristian_Work_Performed = __super::Columns[L"Christian Work Performed"];
        this->columnElder_1 = __super::Columns[L"Elder 1"];
        this->columnElder_2 = __super::Columns[L"Elder 2"];
        this->columnEmployer_1 = __super::Columns[L"Employer 1"];
        this->columnEmployer_2 = __super::Columns[L"Employer 2"];
    }
    
    inline System::Void projectDataSet::StudentDataTable::InitClass() {
        this->columnID = (gcnew System::Data::DataColumn(L"ID", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnID);
        this->columnFirst_Name = (gcnew System::Data::DataColumn(L"First Name", System::String::typeid, nullptr, System::Data::MappingType::Element));
        this->columnFirst_Name->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"First_Name");
        this->columnFirst_Name->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"First_NameColumn");
        this->columnFirst_Name->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnFirst_Name");
        this->columnFirst_Name->ExtendedProperties->Add(L"Generator_UserColumnName", L"First Name");
        __super::Columns->Add(this->columnFirst_Name);
        this->columnMiddle_Names = (gcnew System::Data::DataColumn(L"Middle Names", System::String::typeid, nullptr, System::Data::MappingType::Element));
        this->columnMiddle_Names->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Middle_Names");
        this->columnMiddle_Names->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Middle_NamesColumn");
        this->columnMiddle_Names->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnMiddle_Names");
        this->columnMiddle_Names->ExtendedProperties->Add(L"Generator_UserColumnName", L"Middle Names");
        __super::Columns->Add(this->columnMiddle_Names);
        this->columnLast_Name = (gcnew System::Data::DataColumn(L"Last Name", System::String::typeid, nullptr, System::Data::MappingType::Element));
        this->columnLast_Name->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Last_Name");
        this->columnLast_Name->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Last_NameColumn");
        this->columnLast_Name->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnLast_Name");
        this->columnLast_Name->ExtendedProperties->Add(L"Generator_UserColumnName", L"Last Name");
        __super::Columns->Add(this->columnLast_Name);
        this->columnAddress = (gcnew System::Data::DataColumn(L"Address", System::String::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnAddress);
        this->columnSex = (gcnew System::Data::DataColumn(L"Sex", System::String::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnSex);
        this->columnApplication_Date = (gcnew System::Data::DataColumn(L"Application Date", System::DateTime::typeid, nullptr, System::Data::MappingType::Element));
        this->columnApplication_Date->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Application_Date");
        this->columnApplication_Date->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Application_DateColumn");
        this->columnApplication_Date->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnApplication_Date");
        this->columnApplication_Date->ExtendedProperties->Add(L"Generator_UserColumnName", L"Application Date");
        __super::Columns->Add(this->columnApplication_Date);
        this->columnDate_of_Birth = (gcnew System::Data::DataColumn(L"Date of Birth", System::DateTime::typeid, nullptr, System::Data::MappingType::Element));
        this->columnDate_of_Birth->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Date_of_Birth");
        this->columnDate_of_Birth->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Date_of_BirthColumn");
        this->columnDate_of_Birth->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnDate_of_Birth");
        this->columnDate_of_Birth->ExtendedProperties->Add(L"Generator_UserColumnName", L"Date of Birth");
        __super::Columns->Add(this->columnDate_of_Birth);
        this->columnPlace_of_Birth = (gcnew System::Data::DataColumn(L"Place of Birth", System::String::typeid, nullptr, System::Data::MappingType::Element));
        this->columnPlace_of_Birth->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Place_of_Birth");
        this->columnPlace_of_Birth->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Place_of_BirthColumn");
        this->columnPlace_of_Birth->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnPlace_of_Birth");
        this->columnPlace_of_Birth->ExtendedProperties->Add(L"Generator_UserColumnName", L"Place of Birth");
        __super::Columns->Add(this->columnPlace_of_Birth);
        this->_columnParent_Guardian = (gcnew System::Data::DataColumn(L"Parent/Guardian", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        this->_columnParent_Guardian->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"_Parent_Guardian");
        this->_columnParent_Guardian->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"_Parent_GuardianColumn");
        this->_columnParent_Guardian->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"_columnParent_Guardian");
        this->_columnParent_Guardian->ExtendedProperties->Add(L"Generator_UserColumnName", L"Parent/Guardian");
        __super::Columns->Add(this->_columnParent_Guardian);
        this->columnYounger_Siblings = (gcnew System::Data::DataColumn(L"Younger Siblings", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        this->columnYounger_Siblings->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Younger_Siblings");
        this->columnYounger_Siblings->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Younger_SiblingsColumn");
        this->columnYounger_Siblings->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnYounger_Siblings");
        this->columnYounger_Siblings->ExtendedProperties->Add(L"Generator_UserColumnName", L"Younger Siblings");
        __super::Columns->Add(this->columnYounger_Siblings);
        this->columnOlder_Siblings = (gcnew System::Data::DataColumn(L"Older Siblings", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        this->columnOlder_Siblings->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Older_Siblings");
        this->columnOlder_Siblings->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Older_SiblingsColumn");
        this->columnOlder_Siblings->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnOlder_Siblings");
        this->columnOlder_Siblings->ExtendedProperties->Add(L"Generator_UserColumnName", L"Older Siblings");
        __super::Columns->Add(this->columnOlder_Siblings);
        this->columnBaptised = (gcnew System::Data::DataColumn(L"Baptised", System::Boolean::typeid, nullptr, System::Data::MappingType::Element));
        __super::Columns->Add(this->columnBaptised);
        this->columnDate_of_Baptism = (gcnew System::Data::DataColumn(L"Date of Baptism", System::DateTime::typeid, nullptr, System::Data::MappingType::Element));
        this->columnDate_of_Baptism->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Date_of_Baptism");
        this->columnDate_of_Baptism->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Date_of_BaptismColumn");
        this->columnDate_of_Baptism->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnDate_of_Baptism");
        this->columnDate_of_Baptism->ExtendedProperties->Add(L"Generator_UserColumnName", L"Date of Baptism");
        __super::Columns->Add(this->columnDate_of_Baptism);
        this->columnAttended_High_School = (gcnew System::Data::DataColumn(L"Attended High School", System::Boolean::typeid, nullptr, 
            System::Data::MappingType::Element));
        this->columnAttended_High_School->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Attended_High_School");
        this->columnAttended_High_School->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Attended_High_SchoolColumn");
        this->columnAttended_High_School->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnAttended_High_School");
        this->columnAttended_High_School->ExtendedProperties->Add(L"Generator_UserColumnName", L"Attended High School");
        __super::Columns->Add(this->columnAttended_High_School);
        this->columnName_of_High_School = (gcnew System::Data::DataColumn(L"Name of High School", System::String::typeid, nullptr, 
            System::Data::MappingType::Element));
        this->columnName_of_High_School->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Name_of_High_School");
        this->columnName_of_High_School->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Name_of_High_SchoolColumn");
        this->columnName_of_High_School->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnName_of_High_School");
        this->columnName_of_High_School->ExtendedProperties->Add(L"Generator_UserColumnName", L"Name of High School");
        __super::Columns->Add(this->columnName_of_High_School);
        this->columnAddress_of_High_School = (gcnew System::Data::DataColumn(L"Address of High School", System::String::typeid, nullptr, 
            System::Data::MappingType::Element));
        this->columnAddress_of_High_School->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Address_of_High_School");
        this->columnAddress_of_High_School->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Address_of_High_SchoolColumn");
        this->columnAddress_of_High_School->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnAddress_of_High_School");
        this->columnAddress_of_High_School->ExtendedProperties->Add(L"Generator_UserColumnName", L"Address of High School");
        __super::Columns->Add(this->columnAddress_of_High_School);
        this->columnMinisters_Name = (gcnew System::Data::DataColumn(L"Ministers Name", System::String::typeid, nullptr, System::Data::MappingType::Element));
        this->columnMinisters_Name->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Ministers_Name");
        this->columnMinisters_Name->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Ministers_NameColumn");
        this->columnMinisters_Name->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnMinisters_Name");
        this->columnMinisters_Name->ExtendedProperties->Add(L"Generator_UserColumnName", L"Ministers Name");
        __super::Columns->Add(this->columnMinisters_Name);
        this->columnMinisters_Address = (gcnew System::Data::DataColumn(L"Ministers Address", System::String::typeid, nullptr, System::Data::MappingType::Element));
        this->columnMinisters_Address->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Ministers_Address");
        this->columnMinisters_Address->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Ministers_AddressColumn");
        this->columnMinisters_Address->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnMinisters_Address");
        this->columnMinisters_Address->ExtendedProperties->Add(L"Generator_UserColumnName", L"Ministers Address");
        __super::Columns->Add(this->columnMinisters_Address);
        this->columnChristian_Work_Performed = (gcnew System::Data::DataColumn(L"Christian Work Performed", System::String::typeid, 
            nullptr, System::Data::MappingType::Element));
        this->columnChristian_Work_Performed->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Christian_Work_Performed");
        this->columnChristian_Work_Performed->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Christian_Work_PerformedColumn");
        this->columnChristian_Work_Performed->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnChristian_Work_Performed");
        this->columnChristian_Work_Performed->ExtendedProperties->Add(L"Generator_UserColumnName", L"Christian Work Performed");
        __super::Columns->Add(this->columnChristian_Work_Performed);
        this->columnElder_1 = (gcnew System::Data::DataColumn(L"Elder 1", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        this->columnElder_1->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Elder_1");
        this->columnElder_1->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Elder_1Column");
        this->columnElder_1->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnElder_1");
        this->columnElder_1->ExtendedProperties->Add(L"Generator_UserColumnName", L"Elder 1");
        __super::Columns->Add(this->columnElder_1);
        this->columnElder_2 = (gcnew System::Data::DataColumn(L"Elder 2", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        this->columnElder_2->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Elder_2");
        this->columnElder_2->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Elder_2Column");
        this->columnElder_2->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnElder_2");
        this->columnElder_2->ExtendedProperties->Add(L"Generator_UserColumnName", L"Elder 2");
        __super::Columns->Add(this->columnElder_2);
        this->columnEmployer_1 = (gcnew System::Data::DataColumn(L"Employer 1", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        this->columnEmployer_1->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Employer_1");
        this->columnEmployer_1->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Employer_1Column");
        this->columnEmployer_1->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnEmployer_1");
        this->columnEmployer_1->ExtendedProperties->Add(L"Generator_UserColumnName", L"Employer 1");
        __super::Columns->Add(this->columnEmployer_1);
        this->columnEmployer_2 = (gcnew System::Data::DataColumn(L"Employer 2", System::Int32::typeid, nullptr, System::Data::MappingType::Element));
        this->columnEmployer_2->ExtendedProperties->Add(L"Generator_ColumnPropNameInRow", L"Employer_2");
        this->columnEmployer_2->ExtendedProperties->Add(L"Generator_ColumnPropNameInTable", L"Employer_2Column");
        this->columnEmployer_2->ExtendedProperties->Add(L"Generator_ColumnVarNameInTable", L"columnEmployer_2");
        this->columnEmployer_2->ExtendedProperties->Add(L"Generator_UserColumnName", L"Employer 2");
        __super::Columns->Add(this->columnEmployer_2);
        this->Constraints->Add((gcnew System::Data::UniqueConstraint(L"Constraint1", gcnew cli::array< System::Data::DataColumn^  >(1) {this->columnID}, 
                true)));
        this->columnID->AutoIncrement = true;
        this->columnID->AllowDBNull = false;
        this->columnID->Unique = true;
        this->columnFirst_Name->MaxLength = 50;
        this->columnMiddle_Names->MaxLength = 50;
        this->columnLast_Name->MaxLength = 50;
        this->columnAddress->MaxLength = 50;
        this->columnSex->MaxLength = 50;
        this->columnPlace_of_Birth->MaxLength = 50;
        this->columnName_of_High_School->MaxLength = 50;
        this->columnAddress_of_High_School->MaxLength = 50;
        this->columnMinisters_Name->MaxLength = 50;
        this->columnMinisters_Address->MaxLength = 50;
        this->columnChristian_Work_Performed->MaxLength = 50;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  projectDataSet::StudentDataTable::NewStudentRow() {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >(this->NewRow()));
    }
    
    inline System::Data::DataRow^  projectDataSet::StudentDataTable::NewRowFromBuilder(System::Data::DataRowBuilder^  builder) {
        return (gcnew LCBCAdminRegistrationSystem::projectDataSet::StudentRow(builder));
    }
    
    inline System::Type^  projectDataSet::StudentDataTable::GetRowType() {
        return LCBCAdminRegistrationSystem::projectDataSet::StudentRow::typeid;
    }
    
    inline System::Void projectDataSet::StudentDataTable::OnRowChanged(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanged(e);
        {
            this->StudentRowChanged(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::StudentRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::StudentDataTable::OnRowChanging(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowChanging(e);
        {
            this->StudentRowChanging(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::StudentRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::StudentDataTable::OnRowDeleted(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleted(e);
        {
            this->StudentRowDeleted(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::StudentRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::StudentDataTable::OnRowDeleting(System::Data::DataRowChangeEventArgs^  e) {
        __super::OnRowDeleting(e);
        {
            this->StudentRowDeleting(this, (gcnew LCBCAdminRegistrationSystem::projectDataSet::StudentRowChangeEvent((cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >(e->Row)), 
                    e->Action)));
        }
    }
    
    inline System::Void projectDataSet::StudentDataTable::RemoveStudentRow(LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  row) {
        this->Rows->Remove(row);
    }
    
    inline System::Xml::Schema::XmlSchemaComplexType^  projectDataSet::StudentDataTable::GetTypedTableSchema(System::Xml::Schema::XmlSchemaSet^  xs) {
        System::Xml::Schema::XmlSchemaComplexType^  type = (gcnew System::Xml::Schema::XmlSchemaComplexType());
        System::Xml::Schema::XmlSchemaSequence^  sequence = (gcnew System::Xml::Schema::XmlSchemaSequence());
        LCBCAdminRegistrationSystem::projectDataSet^  ds = (gcnew LCBCAdminRegistrationSystem::projectDataSet());
        xs->Add(ds->GetSchemaSerializable());
        System::Xml::Schema::XmlSchemaAny^  any1 = (gcnew System::Xml::Schema::XmlSchemaAny());
        any1->Namespace = L"http://www.w3.org/2001/XMLSchema";
        any1->MinOccurs = System::Decimal(0);
        any1->MaxOccurs = System::Decimal::MaxValue;
        any1->ProcessContents = System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any1);
        System::Xml::Schema::XmlSchemaAny^  any2 = (gcnew System::Xml::Schema::XmlSchemaAny());
        any2->Namespace = L"urn:schemas-microsoft-com:xml-diffgram-v1";
        any2->MinOccurs = System::Decimal(1);
        any2->ProcessContents = System::Xml::Schema::XmlSchemaContentProcessing::Lax;
        sequence->Items->Add(any2);
        System::Xml::Schema::XmlSchemaAttribute^  attribute1 = (gcnew System::Xml::Schema::XmlSchemaAttribute());
        attribute1->Name = L"namespace";
        attribute1->FixedValue = ds->Namespace;
        type->Attributes->Add(attribute1);
        System::Xml::Schema::XmlSchemaAttribute^  attribute2 = (gcnew System::Xml::Schema::XmlSchemaAttribute());
        attribute2->Name = L"tableTypeName";
        attribute2->FixedValue = L"StudentDataTable";
        type->Attributes->Add(attribute2);
        type->Particle = sequence;
        return type;
    }
    
    
    inline projectDataSet::ElderRow::ElderRow(System::Data::DataRowBuilder^  rb) : 
            System::Data::DataRow(rb) {
        this->tableElder = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  >(this->Table));
    }
    
    inline System::Int32 projectDataSet::ElderRow::ID::get() {
        return (*cli::safe_cast<System::Int32^>(this[this->tableElder->IDColumn]));
    }
    inline System::Void projectDataSet::ElderRow::ID::set(System::Int32 value) {
        this[this->tableElder->IDColumn] = value;
    }
    
    inline System::String^  projectDataSet::ElderRow::Name::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableElder->NameColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Name\' in table \'Elder\' is DBNull.", e));
        }
    }
    inline System::Void projectDataSet::ElderRow::Name::set(System::String^  value) {
        this[this->tableElder->NameColumn] = value;
    }
    
    inline System::String^  projectDataSet::ElderRow::Address::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableElder->AddressColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Address\' in table \'Elder\' is DBNull.", e));
        }
    }
    inline System::Void projectDataSet::ElderRow::Address::set(System::String^  value) {
        this[this->tableElder->AddressColumn] = value;
    }
    
    inline System::Int32 projectDataSet::ElderRow::Telephone_Number::get() {
        try {
            return (*cli::safe_cast<System::Int32^>(this[this->tableElder->Telephone_NumberColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Telephone Number\' in table \'Elder\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::ElderRow::Telephone_Number::set(System::Int32 value) {
        this[this->tableElder->Telephone_NumberColumn] = value;
    }
    
    inline System::String^  projectDataSet::ElderRow::Church::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableElder->ChurchColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Church\' in table \'Elder\' is DBNull.", e));
        }
    }
    inline System::Void projectDataSet::ElderRow::Church::set(System::String^  value) {
        this[this->tableElder->ChurchColumn] = value;
    }
    
    inline System::String^  projectDataSet::ElderRow::Position::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableElder->PositionColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Position\' in table \'Elder\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::ElderRow::Position::set(System::String^  value) {
        this[this->tableElder->PositionColumn] = value;
    }
    
    inline System::Boolean projectDataSet::ElderRow::IsNameNull() {
        return this->IsNull(this->tableElder->NameColumn);
    }
    
    inline System::Void projectDataSet::ElderRow::SetNameNull() {
        this[this->tableElder->NameColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::ElderRow::IsAddressNull() {
        return this->IsNull(this->tableElder->AddressColumn);
    }
    
    inline System::Void projectDataSet::ElderRow::SetAddressNull() {
        this[this->tableElder->AddressColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::ElderRow::IsTelephone_NumberNull() {
        return this->IsNull(this->tableElder->Telephone_NumberColumn);
    }
    
    inline System::Void projectDataSet::ElderRow::SetTelephone_NumberNull() {
        this[this->tableElder->Telephone_NumberColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::ElderRow::IsChurchNull() {
        return this->IsNull(this->tableElder->ChurchColumn);
    }
    
    inline System::Void projectDataSet::ElderRow::SetChurchNull() {
        this[this->tableElder->ChurchColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::ElderRow::IsPositionNull() {
        return this->IsNull(this->tableElder->PositionColumn);
    }
    
    inline System::Void projectDataSet::ElderRow::SetPositionNull() {
        this[this->tableElder->PositionColumn] = System::Convert::DBNull;
    }
    
    inline cli::array< LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >^  projectDataSet::ElderRow::GetStudentRows() {
        return (cli::safe_cast<cli::array< LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Reference1"])));
    }
    
    
    inline projectDataSet::EmployerRow::EmployerRow(System::Data::DataRowBuilder^  rb) : 
            System::Data::DataRow(rb) {
        this->tableEmployer = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  >(this->Table));
    }
    
    inline System::Int32 projectDataSet::EmployerRow::ID::get() {
        return (*cli::safe_cast<System::Int32^>(this[this->tableEmployer->IDColumn]));
    }
    inline System::Void projectDataSet::EmployerRow::ID::set(System::Int32 value) {
        this[this->tableEmployer->IDColumn] = value;
    }
    
    inline System::String^  projectDataSet::EmployerRow::First_Name::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableEmployer->First_NameColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'First Name\' in table \'Employer\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::EmployerRow::First_Name::set(System::String^  value) {
        this[this->tableEmployer->First_NameColumn] = value;
    }
    
    inline System::String^  projectDataSet::EmployerRow::Last_Name::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableEmployer->Last_NameColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Last Name\' in table \'Employer\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::EmployerRow::Last_Name::set(System::String^  value) {
        this[this->tableEmployer->Last_NameColumn] = value;
    }
    
    inline System::Int32 projectDataSet::EmployerRow::Telephone_Number::get() {
        try {
            return (*cli::safe_cast<System::Int32^>(this[this->tableEmployer->Telephone_NumberColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Telephone Number\' in table \'Employer\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::EmployerRow::Telephone_Number::set(System::Int32 value) {
        this[this->tableEmployer->Telephone_NumberColumn] = value;
    }
    
    inline System::String^  projectDataSet::EmployerRow::Address::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableEmployer->AddressColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Address\' in table \'Employer\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::EmployerRow::Address::set(System::String^  value) {
        this[this->tableEmployer->AddressColumn] = value;
    }
    
    inline System::Boolean projectDataSet::EmployerRow::IsFirst_NameNull() {
        return this->IsNull(this->tableEmployer->First_NameColumn);
    }
    
    inline System::Void projectDataSet::EmployerRow::SetFirst_NameNull() {
        this[this->tableEmployer->First_NameColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::EmployerRow::IsLast_NameNull() {
        return this->IsNull(this->tableEmployer->Last_NameColumn);
    }
    
    inline System::Void projectDataSet::EmployerRow::SetLast_NameNull() {
        this[this->tableEmployer->Last_NameColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::EmployerRow::IsTelephone_NumberNull() {
        return this->IsNull(this->tableEmployer->Telephone_NumberColumn);
    }
    
    inline System::Void projectDataSet::EmployerRow::SetTelephone_NumberNull() {
        this[this->tableEmployer->Telephone_NumberColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::EmployerRow::IsAddressNull() {
        return this->IsNull(this->tableEmployer->AddressColumn);
    }
    
    inline System::Void projectDataSet::EmployerRow::SetAddressNull() {
        this[this->tableEmployer->AddressColumn] = System::Convert::DBNull;
    }
    
    inline cli::array< LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >^  projectDataSet::EmployerRow::GetStudentRows() {
        return (cli::safe_cast<cli::array< LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Reference2"])));
    }
    
    
    inline projectDataSet::Grade_PointRow::Grade_PointRow(System::Data::DataRowBuilder^  rb) : 
            System::Data::DataRow(rb) {
        this->tableGrade_Point = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  >(this->Table));
    }
    
    inline System::Int32 projectDataSet::Grade_PointRow::ID::get() {
        return (*cli::safe_cast<System::Int32^>(this[this->tableGrade_Point->IDColumn]));
    }
    inline System::Void projectDataSet::Grade_PointRow::ID::set(System::Int32 value) {
        this[this->tableGrade_Point->IDColumn] = value;
    }
    
    inline System::String^  projectDataSet::Grade_PointRow::Grade::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableGrade_Point->GradeColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Grade\' in table \'Grade Point\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::Grade_PointRow::Grade::set(System::String^  value) {
        this[this->tableGrade_Point->GradeColumn] = value;
    }
    
    inline System::Int32 projectDataSet::Grade_PointRow::Upper_Range::get() {
        try {
            return (*cli::safe_cast<System::Int32^>(this[this->tableGrade_Point->Upper_RangeColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Upper Range\' in table \'Grade Point\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::Grade_PointRow::Upper_Range::set(System::Int32 value) {
        this[this->tableGrade_Point->Upper_RangeColumn] = value;
    }
    
    inline System::Int32 projectDataSet::Grade_PointRow::Lower_Range::get() {
        try {
            return (*cli::safe_cast<System::Int32^>(this[this->tableGrade_Point->Lower_RangeColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Lower Range\' in table \'Grade Point\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::Grade_PointRow::Lower_Range::set(System::Int32 value) {
        this[this->tableGrade_Point->Lower_RangeColumn] = value;
    }
    
    inline System::Int32 projectDataSet::Grade_PointRow::Grade_Point::get() {
        try {
            return (*cli::safe_cast<System::Int32^>(this[this->tableGrade_Point->Grade_PointColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Grade Point\' in table \'Grade Point\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::Grade_PointRow::Grade_Point::set(System::Int32 value) {
        this[this->tableGrade_Point->Grade_PointColumn] = value;
    }
    
    inline System::Boolean projectDataSet::Grade_PointRow::IsGradeNull() {
        return this->IsNull(this->tableGrade_Point->GradeColumn);
    }
    
    inline System::Void projectDataSet::Grade_PointRow::SetGradeNull() {
        this[this->tableGrade_Point->GradeColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::Grade_PointRow::IsUpper_RangeNull() {
        return this->IsNull(this->tableGrade_Point->Upper_RangeColumn);
    }
    
    inline System::Void projectDataSet::Grade_PointRow::SetUpper_RangeNull() {
        this[this->tableGrade_Point->Upper_RangeColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::Grade_PointRow::IsLower_RangeNull() {
        return this->IsNull(this->tableGrade_Point->Lower_RangeColumn);
    }
    
    inline System::Void projectDataSet::Grade_PointRow::SetLower_RangeNull() {
        this[this->tableGrade_Point->Lower_RangeColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::Grade_PointRow::IsGrade_PointNull() {
        return this->IsNull(this->tableGrade_Point->Grade_PointColumn);
    }
    
    inline System::Void projectDataSet::Grade_PointRow::SetGrade_PointNull() {
        this[this->tableGrade_Point->Grade_PointColumn] = System::Convert::DBNull;
    }
    
    
    inline projectDataSet::Parent_or_GuardianRow::Parent_or_GuardianRow(System::Data::DataRowBuilder^  rb) : 
            System::Data::DataRow(rb) {
        this->tableParent_or_Guardian = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  >(this->Table));
    }
    
    inline System::Int32 projectDataSet::Parent_or_GuardianRow::ID::get() {
        return (*cli::safe_cast<System::Int32^>(this[this->tableParent_or_Guardian->IDColumn]));
    }
    inline System::Void projectDataSet::Parent_or_GuardianRow::ID::set(System::Int32 value) {
        this[this->tableParent_or_Guardian->IDColumn] = value;
    }
    
    inline System::String^  projectDataSet::Parent_or_GuardianRow::First_Name::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableParent_or_Guardian->First_NameColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'First Name\' in table \'Parent or Guardian\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::Parent_or_GuardianRow::First_Name::set(System::String^  value) {
        this[this->tableParent_or_Guardian->First_NameColumn] = value;
    }
    
    inline System::String^  projectDataSet::Parent_or_GuardianRow::Last_Name::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableParent_or_Guardian->Last_NameColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Last Name\' in table \'Parent or Guardian\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::Parent_or_GuardianRow::Last_Name::set(System::String^  value) {
        this[this->tableParent_or_Guardian->Last_NameColumn] = value;
    }
    
    inline System::String^  projectDataSet::Parent_or_GuardianRow::Address::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableParent_or_Guardian->AddressColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Address\' in table \'Parent or Guardian\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::Parent_or_GuardianRow::Address::set(System::String^  value) {
        this[this->tableParent_or_Guardian->AddressColumn] = value;
    }
    
    inline System::String^  projectDataSet::Parent_or_GuardianRow::Occupation::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableParent_or_Guardian->OccupationColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Occupation\' in table \'Parent or Guardian\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::Parent_or_GuardianRow::Occupation::set(System::String^  value) {
        this[this->tableParent_or_Guardian->OccupationColumn] = value;
    }
    
    inline System::Int32 projectDataSet::Parent_or_GuardianRow::Telephone_Number::get() {
        try {
            return (*cli::safe_cast<System::Int32^>(this[this->tableParent_or_Guardian->Telephone_NumberColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Telephone Number\' in table \'Parent or Guardian\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::Parent_or_GuardianRow::Telephone_Number::set(System::Int32 value) {
        this[this->tableParent_or_Guardian->Telephone_NumberColumn] = value;
    }
    
    inline System::Boolean projectDataSet::Parent_or_GuardianRow::IsFirst_NameNull() {
        return this->IsNull(this->tableParent_or_Guardian->First_NameColumn);
    }
    
    inline System::Void projectDataSet::Parent_or_GuardianRow::SetFirst_NameNull() {
        this[this->tableParent_or_Guardian->First_NameColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::Parent_or_GuardianRow::IsLast_NameNull() {
        return this->IsNull(this->tableParent_or_Guardian->Last_NameColumn);
    }
    
    inline System::Void projectDataSet::Parent_or_GuardianRow::SetLast_NameNull() {
        this[this->tableParent_or_Guardian->Last_NameColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::Parent_or_GuardianRow::IsAddressNull() {
        return this->IsNull(this->tableParent_or_Guardian->AddressColumn);
    }
    
    inline System::Void projectDataSet::Parent_or_GuardianRow::SetAddressNull() {
        this[this->tableParent_or_Guardian->AddressColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::Parent_or_GuardianRow::IsOccupationNull() {
        return this->IsNull(this->tableParent_or_Guardian->OccupationColumn);
    }
    
    inline System::Void projectDataSet::Parent_or_GuardianRow::SetOccupationNull() {
        this[this->tableParent_or_Guardian->OccupationColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::Parent_or_GuardianRow::IsTelephone_NumberNull() {
        return this->IsNull(this->tableParent_or_Guardian->Telephone_NumberColumn);
    }
    
    inline System::Void projectDataSet::Parent_or_GuardianRow::SetTelephone_NumberNull() {
        this[this->tableParent_or_Guardian->Telephone_NumberColumn] = System::Convert::DBNull;
    }
    
    inline cli::array< LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >^  projectDataSet::Parent_or_GuardianRow::GetStudentRows() {
        return (cli::safe_cast<cli::array< LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  >^  >(__super::GetChildRows(this->Table->ChildRelations[L"Reference"])));
    }
    
    
    inline projectDataSet::StudentRow::StudentRow(System::Data::DataRowBuilder^  rb) : 
            System::Data::DataRow(rb) {
        this->tableStudent = (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  >(this->Table));
    }
    
    inline System::Int32 projectDataSet::StudentRow::ID::get() {
        return (*cli::safe_cast<System::Int32^>(this[this->tableStudent->IDColumn]));
    }
    inline System::Void projectDataSet::StudentRow::ID::set(System::Int32 value) {
        this[this->tableStudent->IDColumn] = value;
    }
    
    inline System::String^  projectDataSet::StudentRow::First_Name::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableStudent->First_NameColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'First Name\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::First_Name::set(System::String^  value) {
        this[this->tableStudent->First_NameColumn] = value;
    }
    
    inline System::String^  projectDataSet::StudentRow::Middle_Names::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableStudent->Middle_NamesColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Middle Names\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Middle_Names::set(System::String^  value) {
        this[this->tableStudent->Middle_NamesColumn] = value;
    }
    
    inline System::String^  projectDataSet::StudentRow::Last_Name::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableStudent->Last_NameColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Last Name\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Last_Name::set(System::String^  value) {
        this[this->tableStudent->Last_NameColumn] = value;
    }
    
    inline System::String^  projectDataSet::StudentRow::Address::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableStudent->AddressColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Address\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Address::set(System::String^  value) {
        this[this->tableStudent->AddressColumn] = value;
    }
    
    inline System::String^  projectDataSet::StudentRow::Sex::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableStudent->SexColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Sex\' in table \'Student\' is DBNull.", e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Sex::set(System::String^  value) {
        this[this->tableStudent->SexColumn] = value;
    }
    
    inline System::DateTime projectDataSet::StudentRow::Application_Date::get() {
        try {
            return (*cli::safe_cast<System::DateTime^>(this[this->tableStudent->Application_DateColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Application Date\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Application_Date::set(System::DateTime value) {
        this[this->tableStudent->Application_DateColumn] = value;
    }
    
    inline System::DateTime projectDataSet::StudentRow::Date_of_Birth::get() {
        try {
            return (*cli::safe_cast<System::DateTime^>(this[this->tableStudent->Date_of_BirthColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Date of Birth\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Date_of_Birth::set(System::DateTime value) {
        this[this->tableStudent->Date_of_BirthColumn] = value;
    }
    
    inline System::String^  projectDataSet::StudentRow::Place_of_Birth::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableStudent->Place_of_BirthColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Place of Birth\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Place_of_Birth::set(System::String^  value) {
        this[this->tableStudent->Place_of_BirthColumn] = value;
    }
    
    inline System::Int32 projectDataSet::StudentRow::_Parent_Guardian::get() {
        try {
            return (*cli::safe_cast<System::Int32^>(this[this->tableStudent->_Parent_GuardianColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Parent/Guardian\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::_Parent_Guardian::set(System::Int32 value) {
        this[this->tableStudent->_Parent_GuardianColumn] = value;
    }
    
    inline System::Int32 projectDataSet::StudentRow::Younger_Siblings::get() {
        try {
            return (*cli::safe_cast<System::Int32^>(this[this->tableStudent->Younger_SiblingsColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Younger Siblings\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Younger_Siblings::set(System::Int32 value) {
        this[this->tableStudent->Younger_SiblingsColumn] = value;
    }
    
    inline System::Int32 projectDataSet::StudentRow::Older_Siblings::get() {
        try {
            return (*cli::safe_cast<System::Int32^>(this[this->tableStudent->Older_SiblingsColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Older Siblings\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Older_Siblings::set(System::Int32 value) {
        this[this->tableStudent->Older_SiblingsColumn] = value;
    }
    
    inline System::Boolean projectDataSet::StudentRow::Baptised::get() {
        try {
            return (*cli::safe_cast<System::Boolean^>(this[this->tableStudent->BaptisedColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Baptised\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Baptised::set(System::Boolean value) {
        this[this->tableStudent->BaptisedColumn] = value;
    }
    
    inline System::DateTime projectDataSet::StudentRow::Date_of_Baptism::get() {
        try {
            return (*cli::safe_cast<System::DateTime^>(this[this->tableStudent->Date_of_BaptismColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Date of Baptism\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Date_of_Baptism::set(System::DateTime value) {
        this[this->tableStudent->Date_of_BaptismColumn] = value;
    }
    
    inline System::Boolean projectDataSet::StudentRow::Attended_High_School::get() {
        try {
            return (*cli::safe_cast<System::Boolean^>(this[this->tableStudent->Attended_High_SchoolColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Attended High School\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Attended_High_School::set(System::Boolean value) {
        this[this->tableStudent->Attended_High_SchoolColumn] = value;
    }
    
    inline System::String^  projectDataSet::StudentRow::Name_of_High_School::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableStudent->Name_of_High_SchoolColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Name of High School\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Name_of_High_School::set(System::String^  value) {
        this[this->tableStudent->Name_of_High_SchoolColumn] = value;
    }
    
    inline System::String^  projectDataSet::StudentRow::Address_of_High_School::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableStudent->Address_of_High_SchoolColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Address of High School\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Address_of_High_School::set(System::String^  value) {
        this[this->tableStudent->Address_of_High_SchoolColumn] = value;
    }
    
    inline System::String^  projectDataSet::StudentRow::Ministers_Name::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableStudent->Ministers_NameColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Ministers Name\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Ministers_Name::set(System::String^  value) {
        this[this->tableStudent->Ministers_NameColumn] = value;
    }
    
    inline System::String^  projectDataSet::StudentRow::Ministers_Address::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableStudent->Ministers_AddressColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Ministers Address\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Ministers_Address::set(System::String^  value) {
        this[this->tableStudent->Ministers_AddressColumn] = value;
    }
    
    inline System::String^  projectDataSet::StudentRow::Christian_Work_Performed::get() {
        try {
            return (cli::safe_cast<System::String^  >(this[this->tableStudent->Christian_Work_PerformedColumn]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Christian Work Performed\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Christian_Work_Performed::set(System::String^  value) {
        this[this->tableStudent->Christian_Work_PerformedColumn] = value;
    }
    
    inline System::Int32 projectDataSet::StudentRow::Elder_1::get() {
        try {
            return (*cli::safe_cast<System::Int32^>(this[this->tableStudent->Elder_1Column]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Elder 1\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Elder_1::set(System::Int32 value) {
        this[this->tableStudent->Elder_1Column] = value;
    }
    
    inline System::Int32 projectDataSet::StudentRow::Elder_2::get() {
        try {
            return (*cli::safe_cast<System::Int32^>(this[this->tableStudent->Elder_2Column]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Elder 2\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Elder_2::set(System::Int32 value) {
        this[this->tableStudent->Elder_2Column] = value;
    }
    
    inline System::Int32 projectDataSet::StudentRow::Employer_1::get() {
        try {
            return (*cli::safe_cast<System::Int32^>(this[this->tableStudent->Employer_1Column]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Employer 1\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Employer_1::set(System::Int32 value) {
        this[this->tableStudent->Employer_1Column] = value;
    }
    
    inline System::Int32 projectDataSet::StudentRow::Employer_2::get() {
        try {
            return (*cli::safe_cast<System::Int32^>(this[this->tableStudent->Employer_2Column]));
        }
        catch (System::InvalidCastException^ e) {
            throw (gcnew System::Data::StrongTypingException(L"The value for column \'Employer 2\' in table \'Student\' is DBNull.", 
                e));
        }
    }
    inline System::Void projectDataSet::StudentRow::Employer_2::set(System::Int32 value) {
        this[this->tableStudent->Employer_2Column] = value;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  projectDataSet::StudentRow::Parent_or_GuardianRow::get() {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Reference"])));
    }
    inline System::Void projectDataSet::StudentRow::Parent_or_GuardianRow::set(LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Reference"]);
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  projectDataSet::StudentRow::ElderRow::get() {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Reference1"])));
    }
    inline System::Void projectDataSet::StudentRow::ElderRow::set(LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Reference1"]);
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  projectDataSet::StudentRow::EmployerRow::get() {
        return (cli::safe_cast<LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  >(this->GetParentRow(this->Table->ParentRelations[L"Reference2"])));
    }
    inline System::Void projectDataSet::StudentRow::EmployerRow::set(LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  value) {
        this->SetParentRow(value, this->Table->ParentRelations[L"Reference2"]);
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsFirst_NameNull() {
        return this->IsNull(this->tableStudent->First_NameColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetFirst_NameNull() {
        this[this->tableStudent->First_NameColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsMiddle_NamesNull() {
        return this->IsNull(this->tableStudent->Middle_NamesColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetMiddle_NamesNull() {
        this[this->tableStudent->Middle_NamesColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsLast_NameNull() {
        return this->IsNull(this->tableStudent->Last_NameColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetLast_NameNull() {
        this[this->tableStudent->Last_NameColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsAddressNull() {
        return this->IsNull(this->tableStudent->AddressColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetAddressNull() {
        this[this->tableStudent->AddressColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsSexNull() {
        return this->IsNull(this->tableStudent->SexColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetSexNull() {
        this[this->tableStudent->SexColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsApplication_DateNull() {
        return this->IsNull(this->tableStudent->Application_DateColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetApplication_DateNull() {
        this[this->tableStudent->Application_DateColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsDate_of_BirthNull() {
        return this->IsNull(this->tableStudent->Date_of_BirthColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetDate_of_BirthNull() {
        this[this->tableStudent->Date_of_BirthColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsPlace_of_BirthNull() {
        return this->IsNull(this->tableStudent->Place_of_BirthColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetPlace_of_BirthNull() {
        this[this->tableStudent->Place_of_BirthColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::Is_Parent_GuardianNull() {
        return this->IsNull(this->tableStudent->_Parent_GuardianColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::Set_Parent_GuardianNull() {
        this[this->tableStudent->_Parent_GuardianColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsYounger_SiblingsNull() {
        return this->IsNull(this->tableStudent->Younger_SiblingsColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetYounger_SiblingsNull() {
        this[this->tableStudent->Younger_SiblingsColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsOlder_SiblingsNull() {
        return this->IsNull(this->tableStudent->Older_SiblingsColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetOlder_SiblingsNull() {
        this[this->tableStudent->Older_SiblingsColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsBaptisedNull() {
        return this->IsNull(this->tableStudent->BaptisedColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetBaptisedNull() {
        this[this->tableStudent->BaptisedColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsDate_of_BaptismNull() {
        return this->IsNull(this->tableStudent->Date_of_BaptismColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetDate_of_BaptismNull() {
        this[this->tableStudent->Date_of_BaptismColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsAttended_High_SchoolNull() {
        return this->IsNull(this->tableStudent->Attended_High_SchoolColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetAttended_High_SchoolNull() {
        this[this->tableStudent->Attended_High_SchoolColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsName_of_High_SchoolNull() {
        return this->IsNull(this->tableStudent->Name_of_High_SchoolColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetName_of_High_SchoolNull() {
        this[this->tableStudent->Name_of_High_SchoolColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsAddress_of_High_SchoolNull() {
        return this->IsNull(this->tableStudent->Address_of_High_SchoolColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetAddress_of_High_SchoolNull() {
        this[this->tableStudent->Address_of_High_SchoolColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsMinisters_NameNull() {
        return this->IsNull(this->tableStudent->Ministers_NameColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetMinisters_NameNull() {
        this[this->tableStudent->Ministers_NameColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsMinisters_AddressNull() {
        return this->IsNull(this->tableStudent->Ministers_AddressColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetMinisters_AddressNull() {
        this[this->tableStudent->Ministers_AddressColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsChristian_Work_PerformedNull() {
        return this->IsNull(this->tableStudent->Christian_Work_PerformedColumn);
    }
    
    inline System::Void projectDataSet::StudentRow::SetChristian_Work_PerformedNull() {
        this[this->tableStudent->Christian_Work_PerformedColumn] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsElder_1Null() {
        return this->IsNull(this->tableStudent->Elder_1Column);
    }
    
    inline System::Void projectDataSet::StudentRow::SetElder_1Null() {
        this[this->tableStudent->Elder_1Column] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsElder_2Null() {
        return this->IsNull(this->tableStudent->Elder_2Column);
    }
    
    inline System::Void projectDataSet::StudentRow::SetElder_2Null() {
        this[this->tableStudent->Elder_2Column] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsEmployer_1Null() {
        return this->IsNull(this->tableStudent->Employer_1Column);
    }
    
    inline System::Void projectDataSet::StudentRow::SetEmployer_1Null() {
        this[this->tableStudent->Employer_1Column] = System::Convert::DBNull;
    }
    
    inline System::Boolean projectDataSet::StudentRow::IsEmployer_2Null() {
        return this->IsNull(this->tableStudent->Employer_2Column);
    }
    
    inline System::Void projectDataSet::StudentRow::SetEmployer_2Null() {
        this[this->tableStudent->Employer_2Column] = System::Convert::DBNull;
    }
    
    
    inline projectDataSet::ElderRowChangeEvent::ElderRowChangeEvent(LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  row, 
                System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::ElderRow^  projectDataSet::ElderRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline System::Data::DataRowAction projectDataSet::ElderRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline projectDataSet::EmployerRowChangeEvent::EmployerRowChangeEvent(LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  row, 
                System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::EmployerRow^  projectDataSet::EmployerRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline System::Data::DataRowAction projectDataSet::EmployerRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline projectDataSet::Grade_PointRowChangeEvent::Grade_PointRowChangeEvent(LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  row, 
                System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::Grade_PointRow^  projectDataSet::Grade_PointRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline System::Data::DataRowAction projectDataSet::Grade_PointRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline projectDataSet::Parent_or_GuardianRowChangeEvent::Parent_or_GuardianRowChangeEvent(LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  row, 
                System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianRow^  projectDataSet::Parent_or_GuardianRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline System::Data::DataRowAction projectDataSet::Parent_or_GuardianRowChangeEvent::Action::get() {
        return this->eventAction;
    }
    
    
    inline projectDataSet::StudentRowChangeEvent::StudentRowChangeEvent(LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  row, 
                System::Data::DataRowAction action) {
        this->eventRow = row;
        this->eventAction = action;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::StudentRow^  projectDataSet::StudentRowChangeEvent::Row::get() {
        return this->eventRow;
    }
    
    inline System::Data::DataRowAction projectDataSet::StudentRowChangeEvent::Action::get() {
        return this->eventAction;
    }
}
namespace LCBCAdminRegistrationSystem {
    namespace projectDataSetTableAdapters {
    
    using namespace System;
    ref class ElderTableAdapter;
    ref class EmployerTableAdapter;
    ref class Grade_PointTableAdapter;
    ref class Parent_or_GuardianTableAdapter;
    ref class StudentTableAdapter;
    
    
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0"), 
    System::ComponentModel::DesignerCategoryAttribute(L"code"), 
    System::ComponentModel::ToolboxItem(true), 
    System::ComponentModel::DataObjectAttribute(true), 
    System::ComponentModel::DesignerAttribute(L"Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" 
L", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
    System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
    public ref class ElderTableAdapter : public System::ComponentModel::Component {
        
        private: System::Data::OleDb::OleDbDataAdapter^  _adapter;
        
        private: System::Data::OleDb::OleDbConnection^  _connection;
        
        private: cli::array< System::Data::OleDb::OleDbCommand^  >^  _commandCollection;
        
        private: System::Boolean _clearBeforeFill;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        ElderTableAdapter();
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property System::Data::OleDb::OleDbDataAdapter^  Adapter {
            System::Data::OleDb::OleDbDataAdapter^  get();
        }
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property System::Data::OleDb::OleDbConnection^  Connection {
            System::Data::OleDb::OleDbConnection^  get();
            System::Void set(System::Data::OleDb::OleDbConnection^  value);
        }
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property cli::array< System::Data::OleDb::OleDbCommand^  >^  CommandCollection {
            cli::array< System::Data::OleDb::OleDbCommand^  >^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property System::Boolean ClearBeforeFill {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitAdapter();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitConnection();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitCommandCollection();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Fill, true)]
        virtual System::Int32 Fill(LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  dataTable);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Select, true)]
        virtual LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  GetData();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  dataTable);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(LCBCAdminRegistrationSystem::projectDataSet^  dataSet);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(System::Data::DataRow^  dataRow);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(cli::array< System::Data::DataRow^  >^  dataRows);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Delete, true)]
        virtual System::Int32 Delete(
                    System::Int32 Original_ID, 
                    System::String^  Original_Name, 
                    System::String^  Original_Address, 
                    System::Nullable<System::Int32 > Original_Telephone_Number, 
                    System::String^  Original_Church, 
                    System::String^  Original_Position);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Insert, true)]
        virtual System::Int32 Insert(System::String^  Name, System::String^  Address, System::Nullable<System::Int32 > Telephone_Number, 
                    System::String^  Church, System::String^  Position);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Update, true)]
        virtual System::Int32 Update(
                    System::String^  Name, 
                    System::String^  Address, 
                    System::Nullable<System::Int32 > Telephone_Number, 
                    System::String^  Church, 
                    System::String^  Position, 
                    System::Int32 Original_ID, 
                    System::String^  Original_Name, 
                    System::String^  Original_Address, 
                    System::Nullable<System::Int32 > Original_Telephone_Number, 
                    System::String^  Original_Church, 
                    System::String^  Original_Position);
    };
    
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0"), 
    System::ComponentModel::DesignerCategoryAttribute(L"code"), 
    System::ComponentModel::ToolboxItem(true), 
    System::ComponentModel::DataObjectAttribute(true), 
    System::ComponentModel::DesignerAttribute(L"Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" 
L", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
    System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
    public ref class EmployerTableAdapter : public System::ComponentModel::Component {
        
        private: System::Data::OleDb::OleDbDataAdapter^  _adapter;
        
        private: System::Data::OleDb::OleDbConnection^  _connection;
        
        private: cli::array< System::Data::OleDb::OleDbCommand^  >^  _commandCollection;
        
        private: System::Boolean _clearBeforeFill;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        EmployerTableAdapter();
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property System::Data::OleDb::OleDbDataAdapter^  Adapter {
            System::Data::OleDb::OleDbDataAdapter^  get();
        }
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property System::Data::OleDb::OleDbConnection^  Connection {
            System::Data::OleDb::OleDbConnection^  get();
            System::Void set(System::Data::OleDb::OleDbConnection^  value);
        }
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property cli::array< System::Data::OleDb::OleDbCommand^  >^  CommandCollection {
            cli::array< System::Data::OleDb::OleDbCommand^  >^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property System::Boolean ClearBeforeFill {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitAdapter();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitConnection();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitCommandCollection();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Fill, true)]
        virtual System::Int32 Fill(LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  dataTable);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Select, true)]
        virtual LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  GetData();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  dataTable);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(LCBCAdminRegistrationSystem::projectDataSet^  dataSet);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(System::Data::DataRow^  dataRow);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(cli::array< System::Data::DataRow^  >^  dataRows);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Delete, true)]
        virtual System::Int32 Delete(System::Int32 Original_ID, System::String^  Original_First_Name, System::String^  Original_Last_Name, 
                    System::Nullable<System::Int32 > Original_Telephone_Number, System::String^  Original_Address);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Insert, true)]
        virtual System::Int32 Insert(System::String^  First_Name, System::String^  Last_Name, System::Nullable<System::Int32 > Telephone_Number, 
                    System::String^  Address);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Update, true)]
        virtual System::Int32 Update(
                    System::String^  First_Name, 
                    System::String^  Last_Name, 
                    System::Nullable<System::Int32 > Telephone_Number, 
                    System::String^  Address, 
                    System::Int32 Original_ID, 
                    System::String^  Original_First_Name, 
                    System::String^  Original_Last_Name, 
                    System::Nullable<System::Int32 > Original_Telephone_Number, 
                    System::String^  Original_Address);
    };
    
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0"), 
    System::ComponentModel::DesignerCategoryAttribute(L"code"), 
    System::ComponentModel::ToolboxItem(true), 
    System::ComponentModel::DataObjectAttribute(true), 
    System::ComponentModel::DesignerAttribute(L"Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" 
L", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
    System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
    public ref class Grade_PointTableAdapter : public System::ComponentModel::Component {
        
        private: System::Data::OleDb::OleDbDataAdapter^  _adapter;
        
        private: System::Data::OleDb::OleDbConnection^  _connection;
        
        private: cli::array< System::Data::OleDb::OleDbCommand^  >^  _commandCollection;
        
        private: System::Boolean _clearBeforeFill;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        Grade_PointTableAdapter();
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property System::Data::OleDb::OleDbDataAdapter^  Adapter {
            System::Data::OleDb::OleDbDataAdapter^  get();
        }
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property System::Data::OleDb::OleDbConnection^  Connection {
            System::Data::OleDb::OleDbConnection^  get();
            System::Void set(System::Data::OleDb::OleDbConnection^  value);
        }
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property cli::array< System::Data::OleDb::OleDbCommand^  >^  CommandCollection {
            cli::array< System::Data::OleDb::OleDbCommand^  >^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property System::Boolean ClearBeforeFill {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitAdapter();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitConnection();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitCommandCollection();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Fill, true)]
        virtual System::Int32 Fill(LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  dataTable);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Select, true)]
        virtual LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  GetData();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  dataTable);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(LCBCAdminRegistrationSystem::projectDataSet^  dataSet);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(System::Data::DataRow^  dataRow);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(cli::array< System::Data::DataRow^  >^  dataRows);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Delete, true)]
        virtual System::Int32 Delete(System::Int32 Original_ID, System::String^  Original_Grade, System::Nullable<System::Int32 > Original_Upper_Range, 
                    System::Nullable<System::Int32 > Original_Lower_Range, System::Nullable<System::Int32 > Original_Grade_Point);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Insert, true)]
        virtual System::Int32 Insert(System::String^  Grade, System::Nullable<System::Int32 > Upper_Range, System::Nullable<System::Int32 > Lower_Range, 
                    System::Nullable<System::Int32 > Grade_Point);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Update, true)]
        virtual System::Int32 Update(
                    System::String^  Grade, 
                    System::Nullable<System::Int32 > Upper_Range, 
                    System::Nullable<System::Int32 > Lower_Range, 
                    System::Nullable<System::Int32 > Grade_Point, 
                    System::Int32 Original_ID, 
                    System::String^  Original_Grade, 
                    System::Nullable<System::Int32 > Original_Upper_Range, 
                    System::Nullable<System::Int32 > Original_Lower_Range, 
                    System::Nullable<System::Int32 > Original_Grade_Point);
    };
    
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0"), 
    System::ComponentModel::DesignerCategoryAttribute(L"code"), 
    System::ComponentModel::ToolboxItem(true), 
    System::ComponentModel::DataObjectAttribute(true), 
    System::ComponentModel::DesignerAttribute(L"Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" 
L", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
    System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
    public ref class Parent_or_GuardianTableAdapter : public System::ComponentModel::Component {
        
        private: System::Data::OleDb::OleDbDataAdapter^  _adapter;
        
        private: System::Data::OleDb::OleDbConnection^  _connection;
        
        private: cli::array< System::Data::OleDb::OleDbCommand^  >^  _commandCollection;
        
        private: System::Boolean _clearBeforeFill;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        Parent_or_GuardianTableAdapter();
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property System::Data::OleDb::OleDbDataAdapter^  Adapter {
            System::Data::OleDb::OleDbDataAdapter^  get();
        }
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property System::Data::OleDb::OleDbConnection^  Connection {
            System::Data::OleDb::OleDbConnection^  get();
            System::Void set(System::Data::OleDb::OleDbConnection^  value);
        }
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property cli::array< System::Data::OleDb::OleDbCommand^  >^  CommandCollection {
            cli::array< System::Data::OleDb::OleDbCommand^  >^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property System::Boolean ClearBeforeFill {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitAdapter();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitConnection();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitCommandCollection();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Fill, true)]
        virtual System::Int32 Fill(LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  dataTable);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Select, true)]
        virtual LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  GetData();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  dataTable);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(LCBCAdminRegistrationSystem::projectDataSet^  dataSet);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(System::Data::DataRow^  dataRow);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(cli::array< System::Data::DataRow^  >^  dataRows);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Delete, true)]
        virtual System::Int32 Delete(
                    System::Int32 Original_ID, 
                    System::String^  Original_First_Name, 
                    System::String^  Original_Last_Name, 
                    System::String^  Original_Address, 
                    System::String^  Original_Occupation, 
                    System::Nullable<System::Int32 > Original_Telephone_Number);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Insert, true)]
        virtual System::Int32 Insert(System::String^  First_Name, System::String^  Last_Name, System::String^  Address, System::String^  Occupation, 
                    System::Nullable<System::Int32 > Telephone_Number);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Update, true)]
        virtual System::Int32 Update(
                    System::String^  First_Name, 
                    System::String^  Last_Name, 
                    System::String^  Address, 
                    System::String^  Occupation, 
                    System::Nullable<System::Int32 > Telephone_Number, 
                    System::Int32 Original_ID, 
                    System::String^  Original_First_Name, 
                    System::String^  Original_Last_Name, 
                    System::String^  Original_Address, 
                    System::String^  Original_Occupation, 
                    System::Nullable<System::Int32 > Original_Telephone_Number);
    };
    
    [System::CodeDom::Compiler::GeneratedCodeAttribute(L"System.Data.Design.TypedDataSetGenerator", L"2.0.0.0"), 
    System::ComponentModel::DesignerCategoryAttribute(L"code"), 
    System::ComponentModel::ToolboxItem(true), 
    System::ComponentModel::DataObjectAttribute(true), 
    System::ComponentModel::DesignerAttribute(L"Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" 
L", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), 
    System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
    public ref class StudentTableAdapter : public System::ComponentModel::Component {
        
        private: System::Data::OleDb::OleDbDataAdapter^  _adapter;
        
        private: System::Data::OleDb::OleDbConnection^  _connection;
        
        private: cli::array< System::Data::OleDb::OleDbCommand^  >^  _commandCollection;
        
        private: System::Boolean _clearBeforeFill;
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        StudentTableAdapter();
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property System::Data::OleDb::OleDbDataAdapter^  Adapter {
            System::Data::OleDb::OleDbDataAdapter^  get();
        }
        
        internal: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property System::Data::OleDb::OleDbConnection^  Connection {
            System::Data::OleDb::OleDbConnection^  get();
            System::Void set(System::Data::OleDb::OleDbConnection^  value);
        }
        
        protected: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property cli::array< System::Data::OleDb::OleDbCommand^  >^  CommandCollection {
            cli::array< System::Data::OleDb::OleDbCommand^  >^  get();
        }
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
         property System::Boolean ClearBeforeFill {
            System::Boolean get();
            System::Void set(System::Boolean value);
        }
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitAdapter();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitConnection();
        
        private: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        System::Void InitCommandCollection();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Fill, true)]
        virtual System::Int32 Fill(LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  dataTable);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Select, true)]
        virtual LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  GetData();
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  dataTable);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(LCBCAdminRegistrationSystem::projectDataSet^  dataSet);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(System::Data::DataRow^  dataRow);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        virtual System::Int32 Update(cli::array< System::Data::DataRow^  >^  dataRows);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Delete, true)]
        virtual System::Int32 Delete(
                    System::Int32 Original_ID, 
                    System::String^  Original_First_Name, 
                    System::String^  Original_Middle_Names, 
                    System::String^  Original_Last_Name, 
                    System::String^  Original_Address, 
                    System::String^  Original_Sex, 
                    System::Nullable<System::DateTime > Original_Application_Date, 
                    System::Nullable<System::DateTime > Original_Date_of_Birth, 
                    System::String^  Original_Place_of_Birth, 
                    System::Nullable<System::Int32 > _Original_Parent_Guardian, 
                    System::Nullable<System::Int32 > Original_Younger_Siblings, 
                    System::Nullable<System::Int32 > Original_Older_Siblings, 
                    System::Boolean Original_Baptised, 
                    System::Nullable<System::DateTime > Original_Date_of_Baptism, 
                    System::Boolean Original_Attended_High_School, 
                    System::String^  Original_Name_of_High_School, 
                    System::String^  Original_Address_of_High_School, 
                    System::String^  Original_Ministers_Name, 
                    System::String^  Original_Ministers_Address, 
                    System::String^  Original_Christian_Work_Performed, 
                    System::Nullable<System::Int32 > Original_Elder_1, 
                    System::Nullable<System::Int32 > Original_Elder_2, 
                    System::Nullable<System::Int32 > Original_Employer_1, 
                    System::Nullable<System::Int32 > Original_Employer_2);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Insert, true)]
        virtual System::Int32 Insert(
                    System::String^  First_Name, 
                    System::String^  Middle_Names, 
                    System::String^  Last_Name, 
                    System::String^  Address, 
                    System::String^  Sex, 
                    System::Nullable<System::DateTime > Application_Date, 
                    System::Nullable<System::DateTime > Date_of_Birth, 
                    System::String^  Place_of_Birth, 
                    System::Nullable<System::Int32 > _Parent_Guardian, 
                    System::Nullable<System::Int32 > Younger_Siblings, 
                    System::Nullable<System::Int32 > Older_Siblings, 
                    System::Boolean Baptised, 
                    System::Nullable<System::DateTime > Date_of_Baptism, 
                    System::Boolean Attended_High_School, 
                    System::String^  Name_of_High_School, 
                    System::String^  Address_of_High_School, 
                    System::String^  Ministers_Name, 
                    System::String^  Ministers_Address, 
                    System::String^  Christian_Work_Performed, 
                    System::Nullable<System::Int32 > Elder_1, 
                    System::Nullable<System::Int32 > Elder_2, 
                    System::Nullable<System::Int32 > Employer_1, 
                    System::Nullable<System::Int32 > Employer_2);
        
        public: [System::Diagnostics::DebuggerNonUserCodeAttribute]
        [System::ComponentModel::Design::HelpKeywordAttribute(L"vs.data.TableAdapter")]
        [System::ComponentModel::DataObjectMethodAttribute(System::ComponentModel::DataObjectMethodType::Update, true)]
        virtual System::Int32 Update(
                    System::String^  First_Name, 
                    System::String^  Middle_Names, 
                    System::String^  Last_Name, 
                    System::String^  Address, 
                    System::String^  Sex, 
                    System::Nullable<System::DateTime > Application_Date, 
                    System::Nullable<System::DateTime > Date_of_Birth, 
                    System::String^  Place_of_Birth, 
                    System::Nullable<System::Int32 > _Parent_Guardian, 
                    System::Nullable<System::Int32 > Younger_Siblings, 
                    System::Nullable<System::Int32 > Older_Siblings, 
                    System::Boolean Baptised, 
                    System::Nullable<System::DateTime > Date_of_Baptism, 
                    System::Boolean Attended_High_School, 
                    System::String^  Name_of_High_School, 
                    System::String^  Address_of_High_School, 
                    System::String^  Ministers_Name, 
                    System::String^  Ministers_Address, 
                    System::String^  Christian_Work_Performed, 
                    System::Nullable<System::Int32 > Elder_1, 
                    System::Nullable<System::Int32 > Elder_2, 
                    System::Nullable<System::Int32 > Employer_1, 
                    System::Nullable<System::Int32 > Employer_2, 
                    System::Int32 Original_ID, 
                    System::String^  Original_First_Name, 
                    System::String^  Original_Middle_Names, 
                    System::String^  Original_Last_Name, 
                    System::String^  Original_Address, 
                    System::String^  Original_Sex, 
                    System::Nullable<System::DateTime > Original_Application_Date, 
                    System::Nullable<System::DateTime > Original_Date_of_Birth, 
                    System::String^  Original_Place_of_Birth, 
                    System::Nullable<System::Int32 > _Original_Parent_Guardian, 
                    System::Nullable<System::Int32 > Original_Younger_Siblings, 
                    System::Nullable<System::Int32 > Original_Older_Siblings, 
                    System::Boolean Original_Baptised, 
                    System::Nullable<System::DateTime > Original_Date_of_Baptism, 
                    System::Boolean Original_Attended_High_School, 
                    System::String^  Original_Name_of_High_School, 
                    System::String^  Original_Address_of_High_School, 
                    System::String^  Original_Ministers_Name, 
                    System::String^  Original_Ministers_Address, 
                    System::String^  Original_Christian_Work_Performed, 
                    System::Nullable<System::Int32 > Original_Elder_1, 
                    System::Nullable<System::Int32 > Original_Elder_2, 
                    System::Nullable<System::Int32 > Original_Employer_1, 
                    System::Nullable<System::Int32 > Original_Employer_2);
    };
    }
}
namespace LCBCAdminRegistrationSystem {
    namespace projectDataSetTableAdapters {
    
    
    inline ElderTableAdapter::ElderTableAdapter() {
        this->ClearBeforeFill = true;
    }
    
    inline System::Data::OleDb::OleDbDataAdapter^  ElderTableAdapter::Adapter::get() {
        if (this->_adapter == nullptr) {
            this->InitAdapter();
        }
        return this->_adapter;
    }
    
    inline System::Data::OleDb::OleDbConnection^  ElderTableAdapter::Connection::get() {
        if (this->_connection == nullptr) {
            this->InitConnection();
        }
        return this->_connection;
    }
    inline System::Void ElderTableAdapter::Connection::set(System::Data::OleDb::OleDbConnection^  value) {
        this->_connection = __identifier(value);
        if (this->Adapter->InsertCommand != nullptr) {
            this->Adapter->InsertCommand->Connection = __identifier(value);
        }
        if (this->Adapter->DeleteCommand != nullptr) {
            this->Adapter->DeleteCommand->Connection = __identifier(value);
        }
        if (this->Adapter->UpdateCommand != nullptr) {
            this->Adapter->UpdateCommand->Connection = __identifier(value);
        }
        for (        System::Int32 i = 0; (i < this->CommandCollection->Length);         i = (i + 1)) {
            if (this->CommandCollection[i] != nullptr) {
                (cli::safe_cast<System::Data::OleDb::OleDbCommand^  >(this->CommandCollection[i]))->Connection = __identifier(value);
            }
        }
    }
    
    inline cli::array< System::Data::OleDb::OleDbCommand^  >^  ElderTableAdapter::CommandCollection::get() {
        if (this->_commandCollection == nullptr) {
            this->InitCommandCollection();
        }
        return this->_commandCollection;
    }
    
    inline System::Boolean ElderTableAdapter::ClearBeforeFill::get() {
        return this->_clearBeforeFill;
    }
    inline System::Void ElderTableAdapter::ClearBeforeFill::set(System::Boolean value) {
        this->_clearBeforeFill = __identifier(value);
    }
    
    inline System::Void ElderTableAdapter::InitAdapter() {
        this->_adapter = (gcnew System::Data::OleDb::OleDbDataAdapter());
        System::Data::Common::DataTableMapping^  tableMapping = (gcnew System::Data::Common::DataTableMapping());
        tableMapping->SourceTable = L"Table";
        tableMapping->DataSetTable = L"Elder";
        tableMapping->ColumnMappings->Add(L"ID", L"ID");
        tableMapping->ColumnMappings->Add(L"Name", L"Name");
        tableMapping->ColumnMappings->Add(L"Address", L"Address");
        tableMapping->ColumnMappings->Add(L"Telephone Number", L"Telephone Number");
        tableMapping->ColumnMappings->Add(L"Church", L"Church");
        tableMapping->ColumnMappings->Add(L"Position", L"Position");
        this->_adapter->TableMappings->Add(tableMapping);
        this->_adapter->DeleteCommand = (gcnew System::Data::OleDb::OleDbCommand());
        this->_adapter->DeleteCommand->Connection = this->Connection;
        this->_adapter->DeleteCommand->CommandText = L"DELETE FROM `Elder` WHERE ((`ID` = \?) AND ((\? = 1 AND `Name` IS NULL) OR (`Name` " 
L"= \?)) AND ((\? = 1 AND `Address` IS NULL) OR (`Address` = \?)) AND ((\? = 1 AND `Te" 
L"lephone Number` IS NULL) OR (`Telephone Number` = \?)) AND ((\? = 1 AND `Church` I" 
L"S NULL) OR (`Church` = \?)) AND ((\? = 1 AND `Position` IS NULL) OR (`Position` = " 
L"\?)))";
        this->_adapter->DeleteCommand->CommandType = System::Data::CommandType::Text;
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_ID", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"ID", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Name", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Name", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Address", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Telephone_Number", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Telephone Number", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Telephone_Number", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Telephone Number", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Church", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Church", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Church", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Church", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Position", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Position", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Position", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Position", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->InsertCommand = (gcnew System::Data::OleDb::OleDbCommand());
        this->_adapter->InsertCommand->Connection = this->Connection;
        this->_adapter->InsertCommand->CommandText = L"INSERT INTO `Elder` (`Name`, `Address`, `Telephone Number`, `Church`, `Position`)" 
L" VALUES (\?, \?, \?, \?, \?)";
        this->_adapter->InsertCommand->CommandType = System::Data::CommandType::Text;
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Name", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Telephone_Number", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Telephone Number", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Church", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Church", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Position", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Position", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand = (gcnew System::Data::OleDb::OleDbCommand());
        this->_adapter->UpdateCommand->Connection = this->Connection;
        this->_adapter->UpdateCommand->CommandText = L"UPDATE `Elder` SET `Name` = \?, `Address` = \?, `Telephone Number` = \?, `Church` = " 
L"\?, `Position` = \? WHERE ((`ID` = \?) AND ((\? = 1 AND `Name` IS NULL) OR (`Name` =" 
L" \?)) AND ((\? = 1 AND `Address` IS NULL) OR (`Address` = \?)) AND ((\? = 1 AND `Tel" 
L"ephone Number` IS NULL) OR (`Telephone Number` = \?)) AND ((\? = 1 AND `Church` IS" 
L" NULL) OR (`Church` = \?)) AND ((\? = 1 AND `Position` IS NULL) OR (`Position` = \?" 
L")))";
        this->_adapter->UpdateCommand->CommandType = System::Data::CommandType::Text;
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Name", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Telephone_Number", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Telephone Number", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Church", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Church", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Position", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Position", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_ID", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"ID", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Name", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Name", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Address", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Telephone_Number", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Telephone Number", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Telephone_Number", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Telephone Number", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Church", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Church", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Church", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Church", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Position", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Position", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Position", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Position", 
                System::Data::DataRowVersion::Original, false, nullptr)));
    }
    
    inline System::Void ElderTableAdapter::InitConnection() {
        this->_connection = (gcnew System::Data::OleDb::OleDbConnection());
        this->_connection->ConnectionString = L"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\\LCBC-AdminRegistrationSystem\\LCBC" 
L"-AdminRegistrationSystem\\release\\project.mdb";
    }
    
    inline System::Void ElderTableAdapter::InitCommandCollection() {
        this->_commandCollection = gcnew cli::array< System::Data::OleDb::OleDbCommand^  >(1);
        this->_commandCollection[0] = (gcnew System::Data::OleDb::OleDbCommand());
        this->_commandCollection[0]->Connection = this->Connection;
        this->_commandCollection[0]->CommandText = L"SELECT ID, Name, Address, [Telephone Number], Church, [Position] FROM Elder";
        this->_commandCollection[0]->CommandType = System::Data::CommandType::Text;
    }
    
    inline System::Int32 ElderTableAdapter::Fill(LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  dataTable) {
        this->Adapter->SelectCommand = this->CommandCollection[0];
        if (this->ClearBeforeFill == true) {
            dataTable->Clear();
        }
        System::Int32 returnValue = this->Adapter->Fill(dataTable);
        return returnValue;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  ElderTableAdapter::GetData() {
        this->Adapter->SelectCommand = this->CommandCollection[0];
        LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  dataTable = (gcnew LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable());
        this->Adapter->Fill(dataTable);
        return dataTable;
    }
    
    inline System::Int32 ElderTableAdapter::Update(LCBCAdminRegistrationSystem::projectDataSet::ElderDataTable^  dataTable) {
        return this->Adapter->Update(dataTable);
    }
    
    inline System::Int32 ElderTableAdapter::Update(LCBCAdminRegistrationSystem::projectDataSet^  dataSet) {
        return this->Adapter->Update(dataSet, L"Elder");
    }
    
    inline System::Int32 ElderTableAdapter::Update(System::Data::DataRow^  dataRow) {
        return this->Adapter->Update(gcnew cli::array< System::Data::DataRow^  >(1) {dataRow});
    }
    
    inline System::Int32 ElderTableAdapter::Update(cli::array< System::Data::DataRow^  >^  dataRows) {
        return this->Adapter->Update(dataRows);
    }
    
    inline System::Int32 ElderTableAdapter::Delete(
                System::Int32 Original_ID, 
                System::String^  Original_Name, 
                System::String^  Original_Address, 
                System::Nullable<System::Int32 > Original_Telephone_Number, 
                System::String^  Original_Church, 
                System::String^  Original_Position) {
        this->Adapter->DeleteCommand->Parameters[0]->Value = static_cast<System::Int32>(Original_ID);
        if (Original_Name == nullptr) {
            this->Adapter->DeleteCommand->Parameters[1]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[2]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[1]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[2]->Value = (cli::safe_cast<System::String^  >(Original_Name));
        }
        if (Original_Address == nullptr) {
            this->Adapter->DeleteCommand->Parameters[3]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[4]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[3]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[4]->Value = (cli::safe_cast<System::String^  >(Original_Address));
        }
        if (Original_Telephone_Number.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[5]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[6]->Value = static_cast<System::Int32>(Original_Telephone_Number.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[5]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[6]->Value = System::DBNull::Value;
        }
        if (Original_Church == nullptr) {
            this->Adapter->DeleteCommand->Parameters[7]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[8]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[7]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[8]->Value = (cli::safe_cast<System::String^  >(Original_Church));
        }
        if (Original_Position == nullptr) {
            this->Adapter->DeleteCommand->Parameters[9]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[10]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[9]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[10]->Value = (cli::safe_cast<System::String^  >(Original_Position));
        }
        System::Data::ConnectionState previousConnectionState = this->Adapter->DeleteCommand->Connection->State;
        if ((this->Adapter->DeleteCommand->Connection->State & System::Data::ConnectionState::Open) 
                    != System::Data::ConnectionState::Open) {
            this->Adapter->DeleteCommand->Connection->Open();
        }
        try {
            System::Int32 returnValue = this->Adapter->DeleteCommand->ExecuteNonQuery();
            return returnValue;
        }
        finally {
            if (previousConnectionState == System::Data::ConnectionState::Closed) {
                this->Adapter->DeleteCommand->Connection->Close();
            }
        }
    }
    
    inline System::Int32 ElderTableAdapter::Insert(System::String^  Name, System::String^  Address, System::Nullable<System::Int32 > Telephone_Number, 
                System::String^  Church, System::String^  Position) {
        if (Name == nullptr) {
            this->Adapter->InsertCommand->Parameters[0]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[0]->Value = (cli::safe_cast<System::String^  >(Name));
        }
        if (Address == nullptr) {
            this->Adapter->InsertCommand->Parameters[1]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[1]->Value = (cli::safe_cast<System::String^  >(Address));
        }
        if (Telephone_Number.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[2]->Value = static_cast<System::Int32>(Telephone_Number.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[2]->Value = System::DBNull::Value;
        }
        if (Church == nullptr) {
            this->Adapter->InsertCommand->Parameters[3]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[3]->Value = (cli::safe_cast<System::String^  >(Church));
        }
        if (Position == nullptr) {
            this->Adapter->InsertCommand->Parameters[4]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[4]->Value = (cli::safe_cast<System::String^  >(Position));
        }
        System::Data::ConnectionState previousConnectionState = this->Adapter->InsertCommand->Connection->State;
        if ((this->Adapter->InsertCommand->Connection->State & System::Data::ConnectionState::Open) 
                    != System::Data::ConnectionState::Open) {
            this->Adapter->InsertCommand->Connection->Open();
        }
        try {
            System::Int32 returnValue = this->Adapter->InsertCommand->ExecuteNonQuery();
            return returnValue;
        }
        finally {
            if (previousConnectionState == System::Data::ConnectionState::Closed) {
                this->Adapter->InsertCommand->Connection->Close();
            }
        }
    }
    
    inline System::Int32 ElderTableAdapter::Update(
                System::String^  Name, 
                System::String^  Address, 
                System::Nullable<System::Int32 > Telephone_Number, 
                System::String^  Church, 
                System::String^  Position, 
                System::Int32 Original_ID, 
                System::String^  Original_Name, 
                System::String^  Original_Address, 
                System::Nullable<System::Int32 > Original_Telephone_Number, 
                System::String^  Original_Church, 
                System::String^  Original_Position) {
        if (Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[0]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[0]->Value = (cli::safe_cast<System::String^  >(Name));
        }
        if (Address == nullptr) {
            this->Adapter->UpdateCommand->Parameters[1]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[1]->Value = (cli::safe_cast<System::String^  >(Address));
        }
        if (Telephone_Number.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[2]->Value = static_cast<System::Int32>(Telephone_Number.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[2]->Value = System::DBNull::Value;
        }
        if (Church == nullptr) {
            this->Adapter->UpdateCommand->Parameters[3]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[3]->Value = (cli::safe_cast<System::String^  >(Church));
        }
        if (Position == nullptr) {
            this->Adapter->UpdateCommand->Parameters[4]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[4]->Value = (cli::safe_cast<System::String^  >(Position));
        }
        this->Adapter->UpdateCommand->Parameters[5]->Value = static_cast<System::Int32>(Original_ID);
        if (Original_Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[6]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[7]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[6]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[7]->Value = (cli::safe_cast<System::String^  >(Original_Name));
        }
        if (Original_Address == nullptr) {
            this->Adapter->UpdateCommand->Parameters[8]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[9]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[8]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[9]->Value = (cli::safe_cast<System::String^  >(Original_Address));
        }
        if (Original_Telephone_Number.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[10]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[11]->Value = static_cast<System::Int32>(Original_Telephone_Number.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[10]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[11]->Value = System::DBNull::Value;
        }
        if (Original_Church == nullptr) {
            this->Adapter->UpdateCommand->Parameters[12]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[13]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[12]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[13]->Value = (cli::safe_cast<System::String^  >(Original_Church));
        }
        if (Original_Position == nullptr) {
            this->Adapter->UpdateCommand->Parameters[14]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[15]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[14]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[15]->Value = (cli::safe_cast<System::String^  >(Original_Position));
        }
        System::Data::ConnectionState previousConnectionState = this->Adapter->UpdateCommand->Connection->State;
        if ((this->Adapter->UpdateCommand->Connection->State & System::Data::ConnectionState::Open) 
                    != System::Data::ConnectionState::Open) {
            this->Adapter->UpdateCommand->Connection->Open();
        }
        try {
            System::Int32 returnValue = this->Adapter->UpdateCommand->ExecuteNonQuery();
            return returnValue;
        }
        finally {
            if (previousConnectionState == System::Data::ConnectionState::Closed) {
                this->Adapter->UpdateCommand->Connection->Close();
            }
        }
    }
    
    
    inline EmployerTableAdapter::EmployerTableAdapter() {
        this->ClearBeforeFill = true;
    }
    
    inline System::Data::OleDb::OleDbDataAdapter^  EmployerTableAdapter::Adapter::get() {
        if (this->_adapter == nullptr) {
            this->InitAdapter();
        }
        return this->_adapter;
    }
    
    inline System::Data::OleDb::OleDbConnection^  EmployerTableAdapter::Connection::get() {
        if (this->_connection == nullptr) {
            this->InitConnection();
        }
        return this->_connection;
    }
    inline System::Void EmployerTableAdapter::Connection::set(System::Data::OleDb::OleDbConnection^  value) {
        this->_connection = __identifier(value);
        if (this->Adapter->InsertCommand != nullptr) {
            this->Adapter->InsertCommand->Connection = __identifier(value);
        }
        if (this->Adapter->DeleteCommand != nullptr) {
            this->Adapter->DeleteCommand->Connection = __identifier(value);
        }
        if (this->Adapter->UpdateCommand != nullptr) {
            this->Adapter->UpdateCommand->Connection = __identifier(value);
        }
        for (        System::Int32 i = 0; (i < this->CommandCollection->Length);         i = (i + 1)) {
            if (this->CommandCollection[i] != nullptr) {
                (cli::safe_cast<System::Data::OleDb::OleDbCommand^  >(this->CommandCollection[i]))->Connection = __identifier(value);
            }
        }
    }
    
    inline cli::array< System::Data::OleDb::OleDbCommand^  >^  EmployerTableAdapter::CommandCollection::get() {
        if (this->_commandCollection == nullptr) {
            this->InitCommandCollection();
        }
        return this->_commandCollection;
    }
    
    inline System::Boolean EmployerTableAdapter::ClearBeforeFill::get() {
        return this->_clearBeforeFill;
    }
    inline System::Void EmployerTableAdapter::ClearBeforeFill::set(System::Boolean value) {
        this->_clearBeforeFill = __identifier(value);
    }
    
    inline System::Void EmployerTableAdapter::InitAdapter() {
        this->_adapter = (gcnew System::Data::OleDb::OleDbDataAdapter());
        System::Data::Common::DataTableMapping^  tableMapping = (gcnew System::Data::Common::DataTableMapping());
        tableMapping->SourceTable = L"Table";
        tableMapping->DataSetTable = L"Employer";
        tableMapping->ColumnMappings->Add(L"ID", L"ID");
        tableMapping->ColumnMappings->Add(L"First Name", L"First Name");
        tableMapping->ColumnMappings->Add(L"Last Name", L"Last Name");
        tableMapping->ColumnMappings->Add(L"Telephone Number", L"Telephone Number");
        tableMapping->ColumnMappings->Add(L"Address", L"Address");
        this->_adapter->TableMappings->Add(tableMapping);
        this->_adapter->DeleteCommand = (gcnew System::Data::OleDb::OleDbCommand());
        this->_adapter->DeleteCommand->Connection = this->Connection;
        this->_adapter->DeleteCommand->CommandText = L"DELETE FROM `Employer` WHERE ((`ID` = \?) AND ((\? = 1 AND `First Name` IS NULL) OR" 
L" (`First Name` = \?)) AND ((\? = 1 AND `Last Name` IS NULL) OR (`Last Name` = \?)) " 
L"AND ((\? = 1 AND `Telephone Number` IS NULL) OR (`Telephone Number` = \?)) AND ((\?" 
L" = 1 AND `Address` IS NULL) OR (`Address` = \?)))";
        this->_adapter->DeleteCommand->CommandType = System::Data::CommandType::Text;
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_ID", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"ID", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_First_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_First_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Last_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Last_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Telephone_Number", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Telephone Number", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Telephone_Number", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Telephone Number", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Address", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->InsertCommand = (gcnew System::Data::OleDb::OleDbCommand());
        this->_adapter->InsertCommand->Connection = this->Connection;
        this->_adapter->InsertCommand->CommandText = L"INSERT INTO `Employer` (`First Name`, `Last Name`, `Telephone Number`, `Address`)" 
L" VALUES (\?, \?, \?, \?)";
        this->_adapter->InsertCommand->CommandType = System::Data::CommandType::Text;
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"First_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Last_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Telephone_Number", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Telephone Number", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->UpdateCommand = (gcnew System::Data::OleDb::OleDbCommand());
        this->_adapter->UpdateCommand->Connection = this->Connection;
        this->_adapter->UpdateCommand->CommandText = L"UPDATE `Employer` SET `First Name` = \?, `Last Name` = \?, `Telephone Number` = \?, " 
L"`Address` = \? WHERE ((`ID` = \?) AND ((\? = 1 AND `First Name` IS NULL) OR (`First" 
L" Name` = \?)) AND ((\? = 1 AND `Last Name` IS NULL) OR (`Last Name` = \?)) AND ((\? " 
L"= 1 AND `Telephone Number` IS NULL) OR (`Telephone Number` = \?)) AND ((\? = 1 AND" 
L" `Address` IS NULL) OR (`Address` = \?)))";
        this->_adapter->UpdateCommand->CommandType = System::Data::CommandType::Text;
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"First_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Last_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Telephone_Number", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Telephone Number", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_ID", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"ID", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_First_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_First_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Last_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Last_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Telephone_Number", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Telephone Number", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Telephone_Number", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Telephone Number", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Address", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                false, nullptr)));
    }
    
    inline System::Void EmployerTableAdapter::InitConnection() {
        this->_connection = (gcnew System::Data::OleDb::OleDbConnection());
        this->_connection->ConnectionString = L"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\\LCBC-AdminRegistrationSystem\\LCBC" 
L"-AdminRegistrationSystem\\release\\project.mdb";
    }
    
    inline System::Void EmployerTableAdapter::InitCommandCollection() {
        this->_commandCollection = gcnew cli::array< System::Data::OleDb::OleDbCommand^  >(1);
        this->_commandCollection[0] = (gcnew System::Data::OleDb::OleDbCommand());
        this->_commandCollection[0]->Connection = this->Connection;
        this->_commandCollection[0]->CommandText = L"SELECT ID, [First Name], [Last Name], [Telephone Number], Address FROM Employer";
        this->_commandCollection[0]->CommandType = System::Data::CommandType::Text;
    }
    
    inline System::Int32 EmployerTableAdapter::Fill(LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  dataTable) {
        this->Adapter->SelectCommand = this->CommandCollection[0];
        if (this->ClearBeforeFill == true) {
            dataTable->Clear();
        }
        System::Int32 returnValue = this->Adapter->Fill(dataTable);
        return returnValue;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  EmployerTableAdapter::GetData() {
        this->Adapter->SelectCommand = this->CommandCollection[0];
        LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  dataTable = (gcnew LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable());
        this->Adapter->Fill(dataTable);
        return dataTable;
    }
    
    inline System::Int32 EmployerTableAdapter::Update(LCBCAdminRegistrationSystem::projectDataSet::EmployerDataTable^  dataTable) {
        return this->Adapter->Update(dataTable);
    }
    
    inline System::Int32 EmployerTableAdapter::Update(LCBCAdminRegistrationSystem::projectDataSet^  dataSet) {
        return this->Adapter->Update(dataSet, L"Employer");
    }
    
    inline System::Int32 EmployerTableAdapter::Update(System::Data::DataRow^  dataRow) {
        return this->Adapter->Update(gcnew cli::array< System::Data::DataRow^  >(1) {dataRow});
    }
    
    inline System::Int32 EmployerTableAdapter::Update(cli::array< System::Data::DataRow^  >^  dataRows) {
        return this->Adapter->Update(dataRows);
    }
    
    inline System::Int32 EmployerTableAdapter::Delete(System::Int32 Original_ID, System::String^  Original_First_Name, System::String^  Original_Last_Name, 
                System::Nullable<System::Int32 > Original_Telephone_Number, System::String^  Original_Address) {
        this->Adapter->DeleteCommand->Parameters[0]->Value = static_cast<System::Int32>(Original_ID);
        if (Original_First_Name == nullptr) {
            this->Adapter->DeleteCommand->Parameters[1]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[2]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[1]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[2]->Value = (cli::safe_cast<System::String^  >(Original_First_Name));
        }
        if (Original_Last_Name == nullptr) {
            this->Adapter->DeleteCommand->Parameters[3]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[4]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[3]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[4]->Value = (cli::safe_cast<System::String^  >(Original_Last_Name));
        }
        if (Original_Telephone_Number.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[5]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[6]->Value = static_cast<System::Int32>(Original_Telephone_Number.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[5]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[6]->Value = System::DBNull::Value;
        }
        if (Original_Address == nullptr) {
            this->Adapter->DeleteCommand->Parameters[7]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[8]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[7]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[8]->Value = (cli::safe_cast<System::String^  >(Original_Address));
        }
        System::Data::ConnectionState previousConnectionState = this->Adapter->DeleteCommand->Connection->State;
        if ((this->Adapter->DeleteCommand->Connection->State & System::Data::ConnectionState::Open) 
                    != System::Data::ConnectionState::Open) {
            this->Adapter->DeleteCommand->Connection->Open();
        }
        try {
            System::Int32 returnValue = this->Adapter->DeleteCommand->ExecuteNonQuery();
            return returnValue;
        }
        finally {
            if (previousConnectionState == System::Data::ConnectionState::Closed) {
                this->Adapter->DeleteCommand->Connection->Close();
            }
        }
    }
    
    inline System::Int32 EmployerTableAdapter::Insert(System::String^  First_Name, System::String^  Last_Name, System::Nullable<System::Int32 > Telephone_Number, 
                System::String^  Address) {
        if (First_Name == nullptr) {
            this->Adapter->InsertCommand->Parameters[0]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[0]->Value = (cli::safe_cast<System::String^  >(First_Name));
        }
        if (Last_Name == nullptr) {
            this->Adapter->InsertCommand->Parameters[1]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[1]->Value = (cli::safe_cast<System::String^  >(Last_Name));
        }
        if (Telephone_Number.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[2]->Value = static_cast<System::Int32>(Telephone_Number.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[2]->Value = System::DBNull::Value;
        }
        if (Address == nullptr) {
            this->Adapter->InsertCommand->Parameters[3]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[3]->Value = (cli::safe_cast<System::String^  >(Address));
        }
        System::Data::ConnectionState previousConnectionState = this->Adapter->InsertCommand->Connection->State;
        if ((this->Adapter->InsertCommand->Connection->State & System::Data::ConnectionState::Open) 
                    != System::Data::ConnectionState::Open) {
            this->Adapter->InsertCommand->Connection->Open();
        }
        try {
            System::Int32 returnValue = this->Adapter->InsertCommand->ExecuteNonQuery();
            return returnValue;
        }
        finally {
            if (previousConnectionState == System::Data::ConnectionState::Closed) {
                this->Adapter->InsertCommand->Connection->Close();
            }
        }
    }
    
    inline System::Int32 EmployerTableAdapter::Update(
                System::String^  First_Name, 
                System::String^  Last_Name, 
                System::Nullable<System::Int32 > Telephone_Number, 
                System::String^  Address, 
                System::Int32 Original_ID, 
                System::String^  Original_First_Name, 
                System::String^  Original_Last_Name, 
                System::Nullable<System::Int32 > Original_Telephone_Number, 
                System::String^  Original_Address) {
        if (First_Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[0]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[0]->Value = (cli::safe_cast<System::String^  >(First_Name));
        }
        if (Last_Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[1]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[1]->Value = (cli::safe_cast<System::String^  >(Last_Name));
        }
        if (Telephone_Number.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[2]->Value = static_cast<System::Int32>(Telephone_Number.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[2]->Value = System::DBNull::Value;
        }
        if (Address == nullptr) {
            this->Adapter->UpdateCommand->Parameters[3]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[3]->Value = (cli::safe_cast<System::String^  >(Address));
        }
        this->Adapter->UpdateCommand->Parameters[4]->Value = static_cast<System::Int32>(Original_ID);
        if (Original_First_Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[5]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[6]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[5]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[6]->Value = (cli::safe_cast<System::String^  >(Original_First_Name));
        }
        if (Original_Last_Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[7]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[8]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[7]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[8]->Value = (cli::safe_cast<System::String^  >(Original_Last_Name));
        }
        if (Original_Telephone_Number.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[9]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[10]->Value = static_cast<System::Int32>(Original_Telephone_Number.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[9]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[10]->Value = System::DBNull::Value;
        }
        if (Original_Address == nullptr) {
            this->Adapter->UpdateCommand->Parameters[11]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[12]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[11]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[12]->Value = (cli::safe_cast<System::String^  >(Original_Address));
        }
        System::Data::ConnectionState previousConnectionState = this->Adapter->UpdateCommand->Connection->State;
        if ((this->Adapter->UpdateCommand->Connection->State & System::Data::ConnectionState::Open) 
                    != System::Data::ConnectionState::Open) {
            this->Adapter->UpdateCommand->Connection->Open();
        }
        try {
            System::Int32 returnValue = this->Adapter->UpdateCommand->ExecuteNonQuery();
            return returnValue;
        }
        finally {
            if (previousConnectionState == System::Data::ConnectionState::Closed) {
                this->Adapter->UpdateCommand->Connection->Close();
            }
        }
    }
    
    
    inline Grade_PointTableAdapter::Grade_PointTableAdapter() {
        this->ClearBeforeFill = true;
    }
    
    inline System::Data::OleDb::OleDbDataAdapter^  Grade_PointTableAdapter::Adapter::get() {
        if (this->_adapter == nullptr) {
            this->InitAdapter();
        }
        return this->_adapter;
    }
    
    inline System::Data::OleDb::OleDbConnection^  Grade_PointTableAdapter::Connection::get() {
        if (this->_connection == nullptr) {
            this->InitConnection();
        }
        return this->_connection;
    }
    inline System::Void Grade_PointTableAdapter::Connection::set(System::Data::OleDb::OleDbConnection^  value) {
        this->_connection = __identifier(value);
        if (this->Adapter->InsertCommand != nullptr) {
            this->Adapter->InsertCommand->Connection = __identifier(value);
        }
        if (this->Adapter->DeleteCommand != nullptr) {
            this->Adapter->DeleteCommand->Connection = __identifier(value);
        }
        if (this->Adapter->UpdateCommand != nullptr) {
            this->Adapter->UpdateCommand->Connection = __identifier(value);
        }
        for (        System::Int32 i = 0; (i < this->CommandCollection->Length);         i = (i + 1)) {
            if (this->CommandCollection[i] != nullptr) {
                (cli::safe_cast<System::Data::OleDb::OleDbCommand^  >(this->CommandCollection[i]))->Connection = __identifier(value);
            }
        }
    }
    
    inline cli::array< System::Data::OleDb::OleDbCommand^  >^  Grade_PointTableAdapter::CommandCollection::get() {
        if (this->_commandCollection == nullptr) {
            this->InitCommandCollection();
        }
        return this->_commandCollection;
    }
    
    inline System::Boolean Grade_PointTableAdapter::ClearBeforeFill::get() {
        return this->_clearBeforeFill;
    }
    inline System::Void Grade_PointTableAdapter::ClearBeforeFill::set(System::Boolean value) {
        this->_clearBeforeFill = __identifier(value);
    }
    
    inline System::Void Grade_PointTableAdapter::InitAdapter() {
        this->_adapter = (gcnew System::Data::OleDb::OleDbDataAdapter());
        System::Data::Common::DataTableMapping^  tableMapping = (gcnew System::Data::Common::DataTableMapping());
        tableMapping->SourceTable = L"Table";
        tableMapping->DataSetTable = L"Grade Point";
        tableMapping->ColumnMappings->Add(L"ID", L"ID");
        tableMapping->ColumnMappings->Add(L"Grade", L"Grade");
        tableMapping->ColumnMappings->Add(L"Upper Range", L"Upper Range");
        tableMapping->ColumnMappings->Add(L"Lower Range", L"Lower Range");
        tableMapping->ColumnMappings->Add(L"Grade Point", L"Grade Point");
        this->_adapter->TableMappings->Add(tableMapping);
        this->_adapter->DeleteCommand = (gcnew System::Data::OleDb::OleDbCommand());
        this->_adapter->DeleteCommand->Connection = this->Connection;
        this->_adapter->DeleteCommand->CommandText = L"DELETE FROM `Grade Point` WHERE ((`ID` = \?) AND ((\? = 1 AND `Grade` IS NULL) OR (" 
L"`Grade` = \?)) AND ((\? = 1 AND `Upper Range` IS NULL) OR (`Upper Range` = \?)) AND" 
L" ((\? = 1 AND `Lower Range` IS NULL) OR (`Lower Range` = \?)) AND ((\? = 1 AND `Gra" 
L"de Point` IS NULL) OR (`Grade Point` = \?)))";
        this->_adapter->DeleteCommand->CommandType = System::Data::CommandType::Text;
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_ID", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"ID", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Grade", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Grade", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Grade", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Grade", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Upper_Range", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Upper Range", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Upper_Range", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Upper Range", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Lower_Range", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Lower Range", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Lower_Range", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Lower Range", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Grade_Point", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Grade Point", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Grade_Point", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Grade Point", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->InsertCommand = (gcnew System::Data::OleDb::OleDbCommand());
        this->_adapter->InsertCommand->Connection = this->Connection;
        this->_adapter->InsertCommand->CommandText = L"INSERT INTO `Grade Point` (`Grade`, `Upper Range`, `Lower Range`, `Grade Point`) " 
L"VALUES (\?, \?, \?, \?)";
        this->_adapter->InsertCommand->CommandType = System::Data::CommandType::Text;
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Grade", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Grade", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Upper_Range", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Upper Range", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Lower_Range", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Lower Range", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Grade_Point", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Grade Point", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand = (gcnew System::Data::OleDb::OleDbCommand());
        this->_adapter->UpdateCommand->Connection = this->Connection;
        this->_adapter->UpdateCommand->CommandText = L"UPDATE `Grade Point` SET `Grade` = \?, `Upper Range` = \?, `Lower Range` = \?, `Grad" 
L"e Point` = \? WHERE ((`ID` = \?) AND ((\? = 1 AND `Grade` IS NULL) OR (`Grade` = \?)" 
L") AND ((\? = 1 AND `Upper Range` IS NULL) OR (`Upper Range` = \?)) AND ((\? = 1 AND" 
L" `Lower Range` IS NULL) OR (`Lower Range` = \?)) AND ((\? = 1 AND `Grade Point` IS" 
L" NULL) OR (`Grade Point` = \?)))";
        this->_adapter->UpdateCommand->CommandType = System::Data::CommandType::Text;
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Grade", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Grade", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Upper_Range", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Upper Range", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Lower_Range", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Lower Range", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Grade_Point", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Grade Point", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_ID", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"ID", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Grade", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Grade", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Grade", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Grade", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Upper_Range", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Upper Range", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Upper_Range", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Upper Range", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Lower_Range", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Lower Range", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Lower_Range", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Lower Range", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Grade_Point", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Grade Point", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Grade_Point", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Grade Point", 
                System::Data::DataRowVersion::Original, false, nullptr)));
    }
    
    inline System::Void Grade_PointTableAdapter::InitConnection() {
        this->_connection = (gcnew System::Data::OleDb::OleDbConnection());
        this->_connection->ConnectionString = L"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\\LCBC-AdminRegistrationSystem\\LCBC" 
L"-AdminRegistrationSystem\\release\\project.mdb";
    }
    
    inline System::Void Grade_PointTableAdapter::InitCommandCollection() {
        this->_commandCollection = gcnew cli::array< System::Data::OleDb::OleDbCommand^  >(1);
        this->_commandCollection[0] = (gcnew System::Data::OleDb::OleDbCommand());
        this->_commandCollection[0]->Connection = this->Connection;
        this->_commandCollection[0]->CommandText = L"SELECT ID, Grade, [Upper Range], [Lower Range], [Grade Point] FROM [Grade Point]";
        this->_commandCollection[0]->CommandType = System::Data::CommandType::Text;
    }
    
    inline System::Int32 Grade_PointTableAdapter::Fill(LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  dataTable) {
        this->Adapter->SelectCommand = this->CommandCollection[0];
        if (this->ClearBeforeFill == true) {
            dataTable->Clear();
        }
        System::Int32 returnValue = this->Adapter->Fill(dataTable);
        return returnValue;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  Grade_PointTableAdapter::GetData() {
        this->Adapter->SelectCommand = this->CommandCollection[0];
        LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  dataTable = (gcnew LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable());
        this->Adapter->Fill(dataTable);
        return dataTable;
    }
    
    inline System::Int32 Grade_PointTableAdapter::Update(LCBCAdminRegistrationSystem::projectDataSet::Grade_PointDataTable^  dataTable) {
        return this->Adapter->Update(dataTable);
    }
    
    inline System::Int32 Grade_PointTableAdapter::Update(LCBCAdminRegistrationSystem::projectDataSet^  dataSet) {
        return this->Adapter->Update(dataSet, L"Grade Point");
    }
    
    inline System::Int32 Grade_PointTableAdapter::Update(System::Data::DataRow^  dataRow) {
        return this->Adapter->Update(gcnew cli::array< System::Data::DataRow^  >(1) {dataRow});
    }
    
    inline System::Int32 Grade_PointTableAdapter::Update(cli::array< System::Data::DataRow^  >^  dataRows) {
        return this->Adapter->Update(dataRows);
    }
    
    inline System::Int32 Grade_PointTableAdapter::Delete(System::Int32 Original_ID, System::String^  Original_Grade, System::Nullable<System::Int32 > Original_Upper_Range, 
                System::Nullable<System::Int32 > Original_Lower_Range, System::Nullable<System::Int32 > Original_Grade_Point) {
        this->Adapter->DeleteCommand->Parameters[0]->Value = static_cast<System::Int32>(Original_ID);
        if (Original_Grade == nullptr) {
            this->Adapter->DeleteCommand->Parameters[1]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[2]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[1]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[2]->Value = (cli::safe_cast<System::String^  >(Original_Grade));
        }
        if (Original_Upper_Range.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[3]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[4]->Value = static_cast<System::Int32>(Original_Upper_Range.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[3]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[4]->Value = System::DBNull::Value;
        }
        if (Original_Lower_Range.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[5]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[6]->Value = static_cast<System::Int32>(Original_Lower_Range.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[5]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[6]->Value = System::DBNull::Value;
        }
        if (Original_Grade_Point.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[7]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[8]->Value = static_cast<System::Int32>(Original_Grade_Point.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[7]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[8]->Value = System::DBNull::Value;
        }
        System::Data::ConnectionState previousConnectionState = this->Adapter->DeleteCommand->Connection->State;
        if ((this->Adapter->DeleteCommand->Connection->State & System::Data::ConnectionState::Open) 
                    != System::Data::ConnectionState::Open) {
            this->Adapter->DeleteCommand->Connection->Open();
        }
        try {
            System::Int32 returnValue = this->Adapter->DeleteCommand->ExecuteNonQuery();
            return returnValue;
        }
        finally {
            if (previousConnectionState == System::Data::ConnectionState::Closed) {
                this->Adapter->DeleteCommand->Connection->Close();
            }
        }
    }
    
    inline System::Int32 Grade_PointTableAdapter::Insert(System::String^  Grade, System::Nullable<System::Int32 > Upper_Range, 
                System::Nullable<System::Int32 > Lower_Range, System::Nullable<System::Int32 > Grade_Point) {
        if (Grade == nullptr) {
            this->Adapter->InsertCommand->Parameters[0]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[0]->Value = (cli::safe_cast<System::String^  >(Grade));
        }
        if (Upper_Range.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[1]->Value = static_cast<System::Int32>(Upper_Range.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[1]->Value = System::DBNull::Value;
        }
        if (Lower_Range.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[2]->Value = static_cast<System::Int32>(Lower_Range.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[2]->Value = System::DBNull::Value;
        }
        if (Grade_Point.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[3]->Value = static_cast<System::Int32>(Grade_Point.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[3]->Value = System::DBNull::Value;
        }
        System::Data::ConnectionState previousConnectionState = this->Adapter->InsertCommand->Connection->State;
        if ((this->Adapter->InsertCommand->Connection->State & System::Data::ConnectionState::Open) 
                    != System::Data::ConnectionState::Open) {
            this->Adapter->InsertCommand->Connection->Open();
        }
        try {
            System::Int32 returnValue = this->Adapter->InsertCommand->ExecuteNonQuery();
            return returnValue;
        }
        finally {
            if (previousConnectionState == System::Data::ConnectionState::Closed) {
                this->Adapter->InsertCommand->Connection->Close();
            }
        }
    }
    
    inline System::Int32 Grade_PointTableAdapter::Update(
                System::String^  Grade, 
                System::Nullable<System::Int32 > Upper_Range, 
                System::Nullable<System::Int32 > Lower_Range, 
                System::Nullable<System::Int32 > Grade_Point, 
                System::Int32 Original_ID, 
                System::String^  Original_Grade, 
                System::Nullable<System::Int32 > Original_Upper_Range, 
                System::Nullable<System::Int32 > Original_Lower_Range, 
                System::Nullable<System::Int32 > Original_Grade_Point) {
        if (Grade == nullptr) {
            this->Adapter->UpdateCommand->Parameters[0]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[0]->Value = (cli::safe_cast<System::String^  >(Grade));
        }
        if (Upper_Range.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[1]->Value = static_cast<System::Int32>(Upper_Range.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[1]->Value = System::DBNull::Value;
        }
        if (Lower_Range.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[2]->Value = static_cast<System::Int32>(Lower_Range.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[2]->Value = System::DBNull::Value;
        }
        if (Grade_Point.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[3]->Value = static_cast<System::Int32>(Grade_Point.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[3]->Value = System::DBNull::Value;
        }
        this->Adapter->UpdateCommand->Parameters[4]->Value = static_cast<System::Int32>(Original_ID);
        if (Original_Grade == nullptr) {
            this->Adapter->UpdateCommand->Parameters[5]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[6]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[5]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[6]->Value = (cli::safe_cast<System::String^  >(Original_Grade));
        }
        if (Original_Upper_Range.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[7]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[8]->Value = static_cast<System::Int32>(Original_Upper_Range.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[7]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[8]->Value = System::DBNull::Value;
        }
        if (Original_Lower_Range.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[9]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[10]->Value = static_cast<System::Int32>(Original_Lower_Range.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[9]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[10]->Value = System::DBNull::Value;
        }
        if (Original_Grade_Point.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[11]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[12]->Value = static_cast<System::Int32>(Original_Grade_Point.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[11]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[12]->Value = System::DBNull::Value;
        }
        System::Data::ConnectionState previousConnectionState = this->Adapter->UpdateCommand->Connection->State;
        if ((this->Adapter->UpdateCommand->Connection->State & System::Data::ConnectionState::Open) 
                    != System::Data::ConnectionState::Open) {
            this->Adapter->UpdateCommand->Connection->Open();
        }
        try {
            System::Int32 returnValue = this->Adapter->UpdateCommand->ExecuteNonQuery();
            return returnValue;
        }
        finally {
            if (previousConnectionState == System::Data::ConnectionState::Closed) {
                this->Adapter->UpdateCommand->Connection->Close();
            }
        }
    }
    
    
    inline Parent_or_GuardianTableAdapter::Parent_or_GuardianTableAdapter() {
        this->ClearBeforeFill = true;
    }
    
    inline System::Data::OleDb::OleDbDataAdapter^  Parent_or_GuardianTableAdapter::Adapter::get() {
        if (this->_adapter == nullptr) {
            this->InitAdapter();
        }
        return this->_adapter;
    }
    
    inline System::Data::OleDb::OleDbConnection^  Parent_or_GuardianTableAdapter::Connection::get() {
        if (this->_connection == nullptr) {
            this->InitConnection();
        }
        return this->_connection;
    }
    inline System::Void Parent_or_GuardianTableAdapter::Connection::set(System::Data::OleDb::OleDbConnection^  value) {
        this->_connection = __identifier(value);
        if (this->Adapter->InsertCommand != nullptr) {
            this->Adapter->InsertCommand->Connection = __identifier(value);
        }
        if (this->Adapter->DeleteCommand != nullptr) {
            this->Adapter->DeleteCommand->Connection = __identifier(value);
        }
        if (this->Adapter->UpdateCommand != nullptr) {
            this->Adapter->UpdateCommand->Connection = __identifier(value);
        }
        for (        System::Int32 i = 0; (i < this->CommandCollection->Length);         i = (i + 1)) {
            if (this->CommandCollection[i] != nullptr) {
                (cli::safe_cast<System::Data::OleDb::OleDbCommand^  >(this->CommandCollection[i]))->Connection = __identifier(value);
            }
        }
    }
    
    inline cli::array< System::Data::OleDb::OleDbCommand^  >^  Parent_or_GuardianTableAdapter::CommandCollection::get() {
        if (this->_commandCollection == nullptr) {
            this->InitCommandCollection();
        }
        return this->_commandCollection;
    }
    
    inline System::Boolean Parent_or_GuardianTableAdapter::ClearBeforeFill::get() {
        return this->_clearBeforeFill;
    }
    inline System::Void Parent_or_GuardianTableAdapter::ClearBeforeFill::set(System::Boolean value) {
        this->_clearBeforeFill = __identifier(value);
    }
    
    inline System::Void Parent_or_GuardianTableAdapter::InitAdapter() {
        this->_adapter = (gcnew System::Data::OleDb::OleDbDataAdapter());
        System::Data::Common::DataTableMapping^  tableMapping = (gcnew System::Data::Common::DataTableMapping());
        tableMapping->SourceTable = L"Table";
        tableMapping->DataSetTable = L"Parent or Guardian";
        tableMapping->ColumnMappings->Add(L"ID", L"ID");
        tableMapping->ColumnMappings->Add(L"First Name", L"First Name");
        tableMapping->ColumnMappings->Add(L"Last Name", L"Last Name");
        tableMapping->ColumnMappings->Add(L"Address", L"Address");
        tableMapping->ColumnMappings->Add(L"Occupation", L"Occupation");
        tableMapping->ColumnMappings->Add(L"Telephone Number", L"Telephone Number");
        this->_adapter->TableMappings->Add(tableMapping);
        this->_adapter->DeleteCommand = (gcnew System::Data::OleDb::OleDbCommand());
        this->_adapter->DeleteCommand->Connection = this->Connection;
        this->_adapter->DeleteCommand->CommandText = L"DELETE FROM `Parent or Guardian` WHERE ((`ID` = \?) AND ((\? = 1 AND `First Name` I" 
L"S NULL) OR (`First Name` = \?)) AND ((\? = 1 AND `Last Name` IS NULL) OR (`Last Na" 
L"me` = \?)) AND ((\? = 1 AND `Address` IS NULL) OR (`Address` = \?)) AND ((\? = 1 AND" 
L" `Occupation` IS NULL) OR (`Occupation` = \?)) AND ((\? = 1 AND `Telephone Number`" 
L" IS NULL) OR (`Telephone Number` = \?)))";
        this->_adapter->DeleteCommand->CommandType = System::Data::CommandType::Text;
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_ID", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"ID", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_First_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_First_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Last_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Last_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Address", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Occupation", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Occupation", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Occupation", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Occupation", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Telephone_Number", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Telephone Number", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Telephone_Number", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Telephone Number", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->InsertCommand = (gcnew System::Data::OleDb::OleDbCommand());
        this->_adapter->InsertCommand->Connection = this->Connection;
        this->_adapter->InsertCommand->CommandText = L"INSERT INTO `Parent or Guardian` (`First Name`, `Last Name`, `Address`, `Occupati" 
L"on`, `Telephone Number`) VALUES (\?, \?, \?, \?, \?)";
        this->_adapter->InsertCommand->CommandType = System::Data::CommandType::Text;
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"First_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Last_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Occupation", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Occupation", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Telephone_Number", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Telephone Number", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand = (gcnew System::Data::OleDb::OleDbCommand());
        this->_adapter->UpdateCommand->Connection = this->Connection;
        this->_adapter->UpdateCommand->CommandText = L"UPDATE `Parent or Guardian` SET `First Name` = \?, `Last Name` = \?, `Address` = \?," 
L" `Occupation` = \?, `Telephone Number` = \? WHERE ((`ID` = \?) AND ((\? = 1 AND `Fir" 
L"st Name` IS NULL) OR (`First Name` = \?)) AND ((\? = 1 AND `Last Name` IS NULL) OR" 
L" (`Last Name` = \?)) AND ((\? = 1 AND `Address` IS NULL) OR (`Address` = \?)) AND (" 
L"(\? = 1 AND `Occupation` IS NULL) OR (`Occupation` = \?)) AND ((\? = 1 AND `Telepho" 
L"ne Number` IS NULL) OR (`Telephone Number` = \?)))";
        this->_adapter->UpdateCommand->CommandType = System::Data::CommandType::Text;
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"First_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Last_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Occupation", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Occupation", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Telephone_Number", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Telephone Number", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_ID", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"ID", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_First_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_First_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Last_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Last_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Address", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Occupation", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Occupation", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Occupation", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Occupation", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Telephone_Number", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Telephone Number", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Telephone_Number", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Telephone Number", System::Data::DataRowVersion::Original, false, nullptr)));
    }
    
    inline System::Void Parent_or_GuardianTableAdapter::InitConnection() {
        this->_connection = (gcnew System::Data::OleDb::OleDbConnection());
        this->_connection->ConnectionString = L"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\\LCBC-AdminRegistrationSystem\\LCBC" 
L"-AdminRegistrationSystem\\release\\project.mdb";
    }
    
    inline System::Void Parent_or_GuardianTableAdapter::InitCommandCollection() {
        this->_commandCollection = gcnew cli::array< System::Data::OleDb::OleDbCommand^  >(1);
        this->_commandCollection[0] = (gcnew System::Data::OleDb::OleDbCommand());
        this->_commandCollection[0]->Connection = this->Connection;
        this->_commandCollection[0]->CommandText = L"SELECT ID, [First Name], [Last Name], Address, Occupation, [Telephone Number] FRO" 
L"M [Parent or Guardian]";
        this->_commandCollection[0]->CommandType = System::Data::CommandType::Text;
    }
    
    inline System::Int32 Parent_or_GuardianTableAdapter::Fill(LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  dataTable) {
        this->Adapter->SelectCommand = this->CommandCollection[0];
        if (this->ClearBeforeFill == true) {
            dataTable->Clear();
        }
        System::Int32 returnValue = this->Adapter->Fill(dataTable);
        return returnValue;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  Parent_or_GuardianTableAdapter::GetData() {
        this->Adapter->SelectCommand = this->CommandCollection[0];
        LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  dataTable = (gcnew LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable());
        this->Adapter->Fill(dataTable);
        return dataTable;
    }
    
    inline System::Int32 Parent_or_GuardianTableAdapter::Update(LCBCAdminRegistrationSystem::projectDataSet::Parent_or_GuardianDataTable^  dataTable) {
        return this->Adapter->Update(dataTable);
    }
    
    inline System::Int32 Parent_or_GuardianTableAdapter::Update(LCBCAdminRegistrationSystem::projectDataSet^  dataSet) {
        return this->Adapter->Update(dataSet, L"Parent or Guardian");
    }
    
    inline System::Int32 Parent_or_GuardianTableAdapter::Update(System::Data::DataRow^  dataRow) {
        return this->Adapter->Update(gcnew cli::array< System::Data::DataRow^  >(1) {dataRow});
    }
    
    inline System::Int32 Parent_or_GuardianTableAdapter::Update(cli::array< System::Data::DataRow^  >^  dataRows) {
        return this->Adapter->Update(dataRows);
    }
    
    inline System::Int32 Parent_or_GuardianTableAdapter::Delete(
                System::Int32 Original_ID, 
                System::String^  Original_First_Name, 
                System::String^  Original_Last_Name, 
                System::String^  Original_Address, 
                System::String^  Original_Occupation, 
                System::Nullable<System::Int32 > Original_Telephone_Number) {
        this->Adapter->DeleteCommand->Parameters[0]->Value = static_cast<System::Int32>(Original_ID);
        if (Original_First_Name == nullptr) {
            this->Adapter->DeleteCommand->Parameters[1]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[2]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[1]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[2]->Value = (cli::safe_cast<System::String^  >(Original_First_Name));
        }
        if (Original_Last_Name == nullptr) {
            this->Adapter->DeleteCommand->Parameters[3]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[4]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[3]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[4]->Value = (cli::safe_cast<System::String^  >(Original_Last_Name));
        }
        if (Original_Address == nullptr) {
            this->Adapter->DeleteCommand->Parameters[5]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[6]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[5]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[6]->Value = (cli::safe_cast<System::String^  >(Original_Address));
        }
        if (Original_Occupation == nullptr) {
            this->Adapter->DeleteCommand->Parameters[7]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[8]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[7]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[8]->Value = (cli::safe_cast<System::String^  >(Original_Occupation));
        }
        if (Original_Telephone_Number.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[9]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[10]->Value = static_cast<System::Int32>(Original_Telephone_Number.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[9]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[10]->Value = System::DBNull::Value;
        }
        System::Data::ConnectionState previousConnectionState = this->Adapter->DeleteCommand->Connection->State;
        if ((this->Adapter->DeleteCommand->Connection->State & System::Data::ConnectionState::Open) 
                    != System::Data::ConnectionState::Open) {
            this->Adapter->DeleteCommand->Connection->Open();
        }
        try {
            System::Int32 returnValue = this->Adapter->DeleteCommand->ExecuteNonQuery();
            return returnValue;
        }
        finally {
            if (previousConnectionState == System::Data::ConnectionState::Closed) {
                this->Adapter->DeleteCommand->Connection->Close();
            }
        }
    }
    
    inline System::Int32 Parent_or_GuardianTableAdapter::Insert(System::String^  First_Name, System::String^  Last_Name, 
                System::String^  Address, System::String^  Occupation, System::Nullable<System::Int32 > Telephone_Number) {
        if (First_Name == nullptr) {
            this->Adapter->InsertCommand->Parameters[0]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[0]->Value = (cli::safe_cast<System::String^  >(First_Name));
        }
        if (Last_Name == nullptr) {
            this->Adapter->InsertCommand->Parameters[1]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[1]->Value = (cli::safe_cast<System::String^  >(Last_Name));
        }
        if (Address == nullptr) {
            this->Adapter->InsertCommand->Parameters[2]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[2]->Value = (cli::safe_cast<System::String^  >(Address));
        }
        if (Occupation == nullptr) {
            this->Adapter->InsertCommand->Parameters[3]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[3]->Value = (cli::safe_cast<System::String^  >(Occupation));
        }
        if (Telephone_Number.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[4]->Value = static_cast<System::Int32>(Telephone_Number.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[4]->Value = System::DBNull::Value;
        }
        System::Data::ConnectionState previousConnectionState = this->Adapter->InsertCommand->Connection->State;
        if ((this->Adapter->InsertCommand->Connection->State & System::Data::ConnectionState::Open) 
                    != System::Data::ConnectionState::Open) {
            this->Adapter->InsertCommand->Connection->Open();
        }
        try {
            System::Int32 returnValue = this->Adapter->InsertCommand->ExecuteNonQuery();
            return returnValue;
        }
        finally {
            if (previousConnectionState == System::Data::ConnectionState::Closed) {
                this->Adapter->InsertCommand->Connection->Close();
            }
        }
    }
    
    inline System::Int32 Parent_or_GuardianTableAdapter::Update(
                System::String^  First_Name, 
                System::String^  Last_Name, 
                System::String^  Address, 
                System::String^  Occupation, 
                System::Nullable<System::Int32 > Telephone_Number, 
                System::Int32 Original_ID, 
                System::String^  Original_First_Name, 
                System::String^  Original_Last_Name, 
                System::String^  Original_Address, 
                System::String^  Original_Occupation, 
                System::Nullable<System::Int32 > Original_Telephone_Number) {
        if (First_Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[0]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[0]->Value = (cli::safe_cast<System::String^  >(First_Name));
        }
        if (Last_Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[1]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[1]->Value = (cli::safe_cast<System::String^  >(Last_Name));
        }
        if (Address == nullptr) {
            this->Adapter->UpdateCommand->Parameters[2]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[2]->Value = (cli::safe_cast<System::String^  >(Address));
        }
        if (Occupation == nullptr) {
            this->Adapter->UpdateCommand->Parameters[3]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[3]->Value = (cli::safe_cast<System::String^  >(Occupation));
        }
        if (Telephone_Number.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[4]->Value = static_cast<System::Int32>(Telephone_Number.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[4]->Value = System::DBNull::Value;
        }
        this->Adapter->UpdateCommand->Parameters[5]->Value = static_cast<System::Int32>(Original_ID);
        if (Original_First_Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[6]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[7]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[6]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[7]->Value = (cli::safe_cast<System::String^  >(Original_First_Name));
        }
        if (Original_Last_Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[8]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[9]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[8]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[9]->Value = (cli::safe_cast<System::String^  >(Original_Last_Name));
        }
        if (Original_Address == nullptr) {
            this->Adapter->UpdateCommand->Parameters[10]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[11]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[10]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[11]->Value = (cli::safe_cast<System::String^  >(Original_Address));
        }
        if (Original_Occupation == nullptr) {
            this->Adapter->UpdateCommand->Parameters[12]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[13]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[12]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[13]->Value = (cli::safe_cast<System::String^  >(Original_Occupation));
        }
        if (Original_Telephone_Number.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[14]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[15]->Value = static_cast<System::Int32>(Original_Telephone_Number.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[14]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[15]->Value = System::DBNull::Value;
        }
        System::Data::ConnectionState previousConnectionState = this->Adapter->UpdateCommand->Connection->State;
        if ((this->Adapter->UpdateCommand->Connection->State & System::Data::ConnectionState::Open) 
                    != System::Data::ConnectionState::Open) {
            this->Adapter->UpdateCommand->Connection->Open();
        }
        try {
            System::Int32 returnValue = this->Adapter->UpdateCommand->ExecuteNonQuery();
            return returnValue;
        }
        finally {
            if (previousConnectionState == System::Data::ConnectionState::Closed) {
                this->Adapter->UpdateCommand->Connection->Close();
            }
        }
    }
    
    
    inline StudentTableAdapter::StudentTableAdapter() {
        this->ClearBeforeFill = true;
    }
    
    inline System::Data::OleDb::OleDbDataAdapter^  StudentTableAdapter::Adapter::get() {
        if (this->_adapter == nullptr) {
            this->InitAdapter();
        }
        return this->_adapter;
    }
    
    inline System::Data::OleDb::OleDbConnection^  StudentTableAdapter::Connection::get() {
        if (this->_connection == nullptr) {
            this->InitConnection();
        }
        return this->_connection;
    }
    inline System::Void StudentTableAdapter::Connection::set(System::Data::OleDb::OleDbConnection^  value) {
        this->_connection = __identifier(value);
        if (this->Adapter->InsertCommand != nullptr) {
            this->Adapter->InsertCommand->Connection = __identifier(value);
        }
        if (this->Adapter->DeleteCommand != nullptr) {
            this->Adapter->DeleteCommand->Connection = __identifier(value);
        }
        if (this->Adapter->UpdateCommand != nullptr) {
            this->Adapter->UpdateCommand->Connection = __identifier(value);
        }
        for (        System::Int32 i = 0; (i < this->CommandCollection->Length);         i = (i + 1)) {
            if (this->CommandCollection[i] != nullptr) {
                (cli::safe_cast<System::Data::OleDb::OleDbCommand^  >(this->CommandCollection[i]))->Connection = __identifier(value);
            }
        }
    }
    
    inline cli::array< System::Data::OleDb::OleDbCommand^  >^  StudentTableAdapter::CommandCollection::get() {
        if (this->_commandCollection == nullptr) {
            this->InitCommandCollection();
        }
        return this->_commandCollection;
    }
    
    inline System::Boolean StudentTableAdapter::ClearBeforeFill::get() {
        return this->_clearBeforeFill;
    }
    inline System::Void StudentTableAdapter::ClearBeforeFill::set(System::Boolean value) {
        this->_clearBeforeFill = __identifier(value);
    }
    
    inline System::Void StudentTableAdapter::InitAdapter() {
        this->_adapter = (gcnew System::Data::OleDb::OleDbDataAdapter());
        System::Data::Common::DataTableMapping^  tableMapping = (gcnew System::Data::Common::DataTableMapping());
        tableMapping->SourceTable = L"Table";
        tableMapping->DataSetTable = L"Student";
        tableMapping->ColumnMappings->Add(L"ID", L"ID");
        tableMapping->ColumnMappings->Add(L"First Name", L"First Name");
        tableMapping->ColumnMappings->Add(L"Middle Names", L"Middle Names");
        tableMapping->ColumnMappings->Add(L"Last Name", L"Last Name");
        tableMapping->ColumnMappings->Add(L"Address", L"Address");
        tableMapping->ColumnMappings->Add(L"Sex", L"Sex");
        tableMapping->ColumnMappings->Add(L"Application Date", L"Application Date");
        tableMapping->ColumnMappings->Add(L"Date of Birth", L"Date of Birth");
        tableMapping->ColumnMappings->Add(L"Place of Birth", L"Place of Birth");
        tableMapping->ColumnMappings->Add(L"Parent/Guardian", L"Parent/Guardian");
        tableMapping->ColumnMappings->Add(L"Younger Siblings", L"Younger Siblings");
        tableMapping->ColumnMappings->Add(L"Older Siblings", L"Older Siblings");
        tableMapping->ColumnMappings->Add(L"Baptised", L"Baptised");
        tableMapping->ColumnMappings->Add(L"Date of Baptism", L"Date of Baptism");
        tableMapping->ColumnMappings->Add(L"Attended High School", L"Attended High School");
        tableMapping->ColumnMappings->Add(L"Name of High School", L"Name of High School");
        tableMapping->ColumnMappings->Add(L"Address of High School", L"Address of High School");
        tableMapping->ColumnMappings->Add(L"Ministers Name", L"Ministers Name");
        tableMapping->ColumnMappings->Add(L"Ministers Address", L"Ministers Address");
        tableMapping->ColumnMappings->Add(L"Christian Work Performed", L"Christian Work Performed");
        tableMapping->ColumnMappings->Add(L"Elder 1", L"Elder 1");
        tableMapping->ColumnMappings->Add(L"Elder 2", L"Elder 2");
        tableMapping->ColumnMappings->Add(L"Employer 1", L"Employer 1");
        tableMapping->ColumnMappings->Add(L"Employer 2", L"Employer 2");
        this->_adapter->TableMappings->Add(tableMapping);
        this->_adapter->DeleteCommand = (gcnew System::Data::OleDb::OleDbCommand());
        this->_adapter->DeleteCommand->Connection = this->Connection;
        this->_adapter->DeleteCommand->CommandText = L"DELETE FROM `Student` WHERE ((`ID` = \?) AND ((\? = 1 AND `First Name` IS NULL) OR " 
L"(`First Name` = \?)) AND ((\? = 1 AND `Middle Names` IS NULL) OR (`Middle Names` =" 
L" \?)) AND ((\? = 1 AND `Last Name` IS NULL) OR (`Last Name` = \?)) AND ((\? = 1 AND " 
L"`Address` IS NULL) OR (`Address` = \?)) AND ((\? = 1 AND `Sex` IS NULL) OR (`Sex` " 
L"= \?)) AND ((\? = 1 AND `Application Date` IS NULL) OR (`Application Date` = \?)) A" 
L"ND ((\? = 1 AND `Date of Birth` IS NULL) OR (`Date of Birth` = \?)) AND ((\? = 1 AN" 
L"D `Place of Birth` IS NULL) OR (`Place of Birth` = \?)) AND ((\? = 1 AND `Parent/G" 
L"uardian` IS NULL) OR (`Parent/Guardian` = \?)) AND ((\? = 1 AND `Younger Siblings`" 
L" IS NULL) OR (`Younger Siblings` = \?)) AND ((\? = 1 AND `Older Siblings` IS NULL)" 
L" OR (`Older Siblings` = \?)) AND ((\? = 1 AND `Baptised` IS NULL) OR (`Baptised` =" 
L" \?)) AND ((\? = 1 AND `Date of Baptism` IS NULL) OR (`Date of Baptism` = \?)) AND " 
L"((\? = 1 AND `Attended High School` IS NULL) OR (`Attended High School` = \?)) AND" 
L" ((\? = 1 AND `Name of High School` IS NULL) OR (`Name of High School` = \?)) AND " 
L"((\? = 1 AND `Address of High School` IS NULL) OR (`Address of High School` = \?))" 
L" AND ((\? = 1 AND `Ministers Name` IS NULL) OR (`Ministers Name` = \?)) AND ((\? = " 
L"1 AND `Ministers Address` IS NULL) OR (`Ministers Address` = \?)) AND ((\? = 1 AND" 
L" `Christian Work Performed` IS NULL) OR (`Christian Work Performed` = \?)) AND ((" 
L"\? = 1 AND `Elder 1` IS NULL) OR (`Elder 1` = \?)) AND ((\? = 1 AND `Elder 2` IS NU" 
L"LL) OR (`Elder 2` = \?)) AND ((\? = 1 AND `Employer 1` IS NULL) OR (`Employer 1` =" 
L" \?)) AND ((\? = 1 AND `Employer 2` IS NULL) OR (`Employer 2` = \?)))";
        this->_adapter->DeleteCommand->CommandType = System::Data::CommandType::Text;
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_ID", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"ID", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_First_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_First_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Middle_Names", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Middle Names", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Middle_Names", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Middle Names", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Last_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Last_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Address", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Sex", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Sex", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Sex", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Sex", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Application_Date", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Application Date", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Application_Date", 
                System::Data::OleDb::OleDbType::Date, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Application Date", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Date_of_Birth", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Date of Birth", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Date_of_Birth", 
                System::Data::OleDb::OleDbType::Date, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Date of Birth", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Place_of_Birth", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Place of Birth", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Place_of_Birth", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Place of Birth", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Parent/Guardian", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Parent/Guardian", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Parent/Guardian", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Parent/Guardian", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Younger_Siblings", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Younger Siblings", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Younger_Siblings", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Younger Siblings", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Older_Siblings", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Older Siblings", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Older_Siblings", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Older Siblings", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Baptised", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Baptised", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Baptised", System::Data::OleDb::OleDbType::Boolean, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Baptised", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Date_of_Baptism", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Date of Baptism", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Date_of_Baptism", 
                System::Data::OleDb::OleDbType::Date, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Date of Baptism", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Attended_High_School", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Attended High School", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Attended_High_School", 
                System::Data::OleDb::OleDbType::Boolean, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Attended High School", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Name_of_High_School", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Name of High School", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Name_of_High_School", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Name of High School", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Address_of_High_School", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Address of High School", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Address_of_High_School", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Address of High School", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Ministers_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Ministers Name", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Ministers_Name", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Ministers Name", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Ministers_Address", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Ministers Address", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Ministers_Address", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Ministers Address", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Christian_Work_Performed", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Christian Work Performed", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Christian_Work_Performed", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Christian Work Performed", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Elder_1", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Elder 1", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Elder_1", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Elder 1", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Elder_2", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Elder 2", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Elder_2", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Elder 2", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Employer_1", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Employer 1", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Employer_1", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Employer 1", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Employer_2", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Employer 2", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->DeleteCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Employer_2", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Employer 2", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->InsertCommand = (gcnew System::Data::OleDb::OleDbCommand());
        this->_adapter->InsertCommand->Connection = this->Connection;
        this->_adapter->InsertCommand->CommandText = L"INSERT INTO `Student` (`First Name`, `Middle Names`, `Last Name`, `Address`, `Sex" 
L"`, `Application Date`, `Date of Birth`, `Place of Birth`, `Parent/Guardian`, `Yo" 
L"unger Siblings`, `Older Siblings`, `Baptised`, `Date of Baptism`, `Attended High" 
L" School`, `Name of High School`, `Address of High School`, `Ministers Name`, `Mi" 
L"nisters Address`, `Christian Work Performed`, `Elder 1`, `Elder 2`, `Employer 1`" 
L", `Employer 2`) VALUES (\?, \?, \?, \?, \?, \?, \?, \?, \?, \?, \?, \?, \?, \?, \?, \?, \?, \?, \?," 
L" \?, \?, \?, \?)";
        this->_adapter->InsertCommand->CommandType = System::Data::CommandType::Text;
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"First_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Middle_Names", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Middle Names", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Last_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Sex", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Sex", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Application_Date", System::Data::OleDb::OleDbType::Date, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Application Date", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Date_of_Birth", System::Data::OleDb::OleDbType::Date, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Date of Birth", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Place_of_Birth", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Place of Birth", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Parent/Guardian", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Parent/Guardian", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Younger_Siblings", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Younger Siblings", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Older_Siblings", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Older Siblings", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Baptised", System::Data::OleDb::OleDbType::Boolean, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Baptised", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Date_of_Baptism", System::Data::OleDb::OleDbType::Date, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Date of Baptism", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Attended_High_School", System::Data::OleDb::OleDbType::Boolean, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Attended High School", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Name_of_High_School", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Name of High School", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Address_of_High_School", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Address of High School", System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Ministers_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Ministers Name", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Ministers_Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Ministers Address", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Christian_Work_Performed", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Christian Work Performed", System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Elder_1", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Elder 1", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Elder_2", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Elder 2", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Employer_1", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Employer 1", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->InsertCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Employer_2", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Employer 2", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand = (gcnew System::Data::OleDb::OleDbCommand());
        this->_adapter->UpdateCommand->Connection = this->Connection;
        this->_adapter->UpdateCommand->CommandText = L"UPDATE `Student` SET `First Name` = \?, `Middle Names` = \?, `Last Name` = \?, `Addr" 
L"ess` = \?, `Sex` = \?, `Application Date` = \?, `Date of Birth` = \?, `Place of Birt" 
L"h` = \?, `Parent/Guardian` = \?, `Younger Siblings` = \?, `Older Siblings` = \?, `Ba" 
L"ptised` = \?, `Date of Baptism` = \?, `Attended High School` = \?, `Name of High Sc" 
L"hool` = \?, `Address of High School` = \?, `Ministers Name` = \?, `Ministers Addres" 
L"s` = \?, `Christian Work Performed` = \?, `Elder 1` = \?, `Elder 2` = \?, `Employer " 
L"1` = \?, `Employer 2` = \? WHERE ((`ID` = \?) AND ((\? = 1 AND `First Name` IS NULL)" 
L" OR (`First Name` = \?)) AND ((\? = 1 AND `Middle Names` IS NULL) OR (`Middle Name" 
L"s` = \?)) AND ((\? = 1 AND `Last Name` IS NULL) OR (`Last Name` = \?)) AND ((\? = 1 " 
L"AND `Address` IS NULL) OR (`Address` = \?)) AND ((\? = 1 AND `Sex` IS NULL) OR (`S" 
L"ex` = \?)) AND ((\? = 1 AND `Application Date` IS NULL) OR (`Application Date` = \?" 
L")) AND ((\? = 1 AND `Date of Birth` IS NULL) OR (`Date of Birth` = \?)) AND ((\? = " 
L"1 AND `Place of Birth` IS NULL) OR (`Place of Birth` = \?)) AND ((\? = 1 AND `Pare" 
L"nt/Guardian` IS NULL) OR (`Parent/Guardian` = \?)) AND ((\? = 1 AND `Younger Sibli" 
L"ngs` IS NULL) OR (`Younger Siblings` = \?)) AND ((\? = 1 AND `Older Siblings` IS N" 
L"ULL) OR (`Older Siblings` = \?)) AND ((\? = 1 AND `Baptised` IS NULL) OR (`Baptise" 
L"d` = \?)) AND ((\? = 1 AND `Date of Baptism` IS NULL) OR (`Date of Baptism` = \?)) " 
L"AND ((\? = 1 AND `Attended High School` IS NULL) OR (`Attended High School` = \?))" 
L" AND ((\? = 1 AND `Name of High School` IS NULL) OR (`Name of High School` = \?)) " 
L"AND ((\? = 1 AND `Address of High School` IS NULL) OR (`Address of High School` =" 
L" \?)) AND ((\? = 1 AND `Ministers Name` IS NULL) OR (`Ministers Name` = \?)) AND ((" 
L"\? = 1 AND `Ministers Address` IS NULL) OR (`Ministers Address` = \?)) AND ((\? = 1" 
L" AND `Christian Work Performed` IS NULL) OR (`Christian Work Performed` = \?)) AN" 
L"D ((\? = 1 AND `Elder 1` IS NULL) OR (`Elder 1` = \?)) AND ((\? = 1 AND `Elder 2` I" 
L"S NULL) OR (`Elder 2` = \?)) AND ((\? = 1 AND `Employer 1` IS NULL) OR (`Employer " 
L"1` = \?)) AND ((\? = 1 AND `Employer 2` IS NULL) OR (`Employer 2` = \?)))";
        this->_adapter->UpdateCommand->CommandType = System::Data::CommandType::Text;
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"First_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Middle_Names", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Middle Names", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Last_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Sex", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Sex", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Application_Date", System::Data::OleDb::OleDbType::Date, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Application Date", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Date_of_Birth", System::Data::OleDb::OleDbType::Date, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Date of Birth", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Place_of_Birth", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Place of Birth", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Parent/Guardian", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Parent/Guardian", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Younger_Siblings", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Younger Siblings", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Older_Siblings", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Older Siblings", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Baptised", System::Data::OleDb::OleDbType::Boolean, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Baptised", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Date_of_Baptism", System::Data::OleDb::OleDbType::Date, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Date of Baptism", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Attended_High_School", System::Data::OleDb::OleDbType::Boolean, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Attended High School", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Name_of_High_School", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Name of High School", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Address_of_High_School", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Address of High School", System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Ministers_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Ministers Name", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Ministers_Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Ministers Address", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Christian_Work_Performed", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Christian Work Performed", System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Elder_1", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Elder 1", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Elder_2", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Elder 2", System::Data::DataRowVersion::Current, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Employer_1", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Employer 1", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Employer_2", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Employer 2", 
                System::Data::DataRowVersion::Current, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_ID", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"ID", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_First_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_First_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"First Name", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Middle_Names", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Middle Names", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Middle_Names", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Middle Names", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Last_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Last_Name", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Last Name", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Address", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Address", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Address", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Sex", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Sex", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Sex", System::Data::OleDb::OleDbType::VarWChar, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Sex", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Application_Date", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Application Date", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Application_Date", 
                System::Data::OleDb::OleDbType::Date, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Application Date", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Date_of_Birth", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Date of Birth", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Date_of_Birth", 
                System::Data::OleDb::OleDbType::Date, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Date of Birth", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Place_of_Birth", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Place of Birth", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Place_of_Birth", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Place of Birth", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Parent/Guardian", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Parent/Guardian", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Parent/Guardian", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Parent/Guardian", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Younger_Siblings", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Younger Siblings", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Younger_Siblings", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Younger Siblings", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Older_Siblings", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Older Siblings", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Older_Siblings", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Older Siblings", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Baptised", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Baptised", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Baptised", System::Data::OleDb::OleDbType::Boolean, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Baptised", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Date_of_Baptism", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Date of Baptism", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Date_of_Baptism", 
                System::Data::OleDb::OleDbType::Date, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Date of Baptism", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Attended_High_School", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Attended High School", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Attended_High_School", 
                System::Data::OleDb::OleDbType::Boolean, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Attended High School", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Name_of_High_School", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Name of High School", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Name_of_High_School", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Name of High School", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Address_of_High_School", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Address of High School", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Address_of_High_School", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Address of High School", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Ministers_Name", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Ministers Name", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Ministers_Name", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Ministers Name", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Ministers_Address", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Ministers Address", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Ministers_Address", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Ministers Address", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Christian_Work_Performed", 
                System::Data::OleDb::OleDbType::Integer, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Christian Work Performed", System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Christian_Work_Performed", 
                System::Data::OleDb::OleDbType::VarWChar, 0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), 
                L"Christian Work Performed", System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Elder_1", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Elder 1", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Elder_1", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Elder 1", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Elder_2", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Elder 2", System::Data::DataRowVersion::Original, 
                true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Elder_2", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Elder 2", System::Data::DataRowVersion::Original, 
                false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Employer_1", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Employer 1", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Employer_1", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Employer 1", 
                System::Data::DataRowVersion::Original, false, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"IsNull_Employer_2", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Employer 2", 
                System::Data::DataRowVersion::Original, true, nullptr)));
        this->_adapter->UpdateCommand->Parameters->Add((gcnew System::Data::OleDb::OleDbParameter(L"Original_Employer_2", System::Data::OleDb::OleDbType::Integer, 
                0, System::Data::ParameterDirection::Input, static_cast<System::Byte>(0), static_cast<System::Byte>(0), L"Employer 2", 
                System::Data::DataRowVersion::Original, false, nullptr)));
    }
    
    inline System::Void StudentTableAdapter::InitConnection() {
        this->_connection = (gcnew System::Data::OleDb::OleDbConnection());
        this->_connection->ConnectionString = L"Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\\LCBC-AdminRegistrationSystem\\LCBC" 
L"-AdminRegistrationSystem\\release\\project.mdb";
    }
    
    inline System::Void StudentTableAdapter::InitCommandCollection() {
        this->_commandCollection = gcnew cli::array< System::Data::OleDb::OleDbCommand^  >(1);
        this->_commandCollection[0] = (gcnew System::Data::OleDb::OleDbCommand());
        this->_commandCollection[0]->Connection = this->Connection;
        this->_commandCollection[0]->CommandText = L"SELECT ID, [First Name], [Middle Names], [Last Name], Address, Sex, [Application " 
L"Date], [Date of Birth], [Place of Birth], [Parent/Guardian], [Younger Siblings]," 
L" [Older Siblings], Baptised, [Date of Baptism], [Attended High School], [Name of" 
L" High School], [Address of High School], [Ministers Name], [Ministers Address], " 
L"[Christian Work Performed], [Elder 1], [Elder 2], [Employer 1], [Employer 2] FRO" 
L"M Student";
        this->_commandCollection[0]->CommandType = System::Data::CommandType::Text;
    }
    
    inline System::Int32 StudentTableAdapter::Fill(LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  dataTable) {
        this->Adapter->SelectCommand = this->CommandCollection[0];
        if (this->ClearBeforeFill == true) {
            dataTable->Clear();
        }
        System::Int32 returnValue = this->Adapter->Fill(dataTable);
        return returnValue;
    }
    
    inline LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  StudentTableAdapter::GetData() {
        this->Adapter->SelectCommand = this->CommandCollection[0];
        LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  dataTable = (gcnew LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable());
        this->Adapter->Fill(dataTable);
        return dataTable;
    }
    
    inline System::Int32 StudentTableAdapter::Update(LCBCAdminRegistrationSystem::projectDataSet::StudentDataTable^  dataTable) {
        return this->Adapter->Update(dataTable);
    }
    
    inline System::Int32 StudentTableAdapter::Update(LCBCAdminRegistrationSystem::projectDataSet^  dataSet) {
        return this->Adapter->Update(dataSet, L"Student");
    }
    
    inline System::Int32 StudentTableAdapter::Update(System::Data::DataRow^  dataRow) {
        return this->Adapter->Update(gcnew cli::array< System::Data::DataRow^  >(1) {dataRow});
    }
    
    inline System::Int32 StudentTableAdapter::Update(cli::array< System::Data::DataRow^  >^  dataRows) {
        return this->Adapter->Update(dataRows);
    }
    
    inline System::Int32 StudentTableAdapter::Delete(
                System::Int32 Original_ID, 
                System::String^  Original_First_Name, 
                System::String^  Original_Middle_Names, 
                System::String^  Original_Last_Name, 
                System::String^  Original_Address, 
                System::String^  Original_Sex, 
                System::Nullable<System::DateTime > Original_Application_Date, 
                System::Nullable<System::DateTime > Original_Date_of_Birth, 
                System::String^  Original_Place_of_Birth, 
                System::Nullable<System::Int32 > _Original_Parent_Guardian, 
                System::Nullable<System::Int32 > Original_Younger_Siblings, 
                System::Nullable<System::Int32 > Original_Older_Siblings, 
                System::Boolean Original_Baptised, 
                System::Nullable<System::DateTime > Original_Date_of_Baptism, 
                System::Boolean Original_Attended_High_School, 
                System::String^  Original_Name_of_High_School, 
                System::String^  Original_Address_of_High_School, 
                System::String^  Original_Ministers_Name, 
                System::String^  Original_Ministers_Address, 
                System::String^  Original_Christian_Work_Performed, 
                System::Nullable<System::Int32 > Original_Elder_1, 
                System::Nullable<System::Int32 > Original_Elder_2, 
                System::Nullable<System::Int32 > Original_Employer_1, 
                System::Nullable<System::Int32 > Original_Employer_2) {
        this->Adapter->DeleteCommand->Parameters[0]->Value = static_cast<System::Int32>(Original_ID);
        if (Original_First_Name == nullptr) {
            this->Adapter->DeleteCommand->Parameters[1]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[2]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[1]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[2]->Value = (cli::safe_cast<System::String^  >(Original_First_Name));
        }
        if (Original_Middle_Names == nullptr) {
            this->Adapter->DeleteCommand->Parameters[3]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[4]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[3]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[4]->Value = (cli::safe_cast<System::String^  >(Original_Middle_Names));
        }
        if (Original_Last_Name == nullptr) {
            this->Adapter->DeleteCommand->Parameters[5]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[6]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[5]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[6]->Value = (cli::safe_cast<System::String^  >(Original_Last_Name));
        }
        if (Original_Address == nullptr) {
            this->Adapter->DeleteCommand->Parameters[7]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[8]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[7]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[8]->Value = (cli::safe_cast<System::String^  >(Original_Address));
        }
        if (Original_Sex == nullptr) {
            this->Adapter->DeleteCommand->Parameters[9]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[10]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[9]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[10]->Value = (cli::safe_cast<System::String^  >(Original_Sex));
        }
        if (Original_Application_Date.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[11]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[12]->Value = static_cast<System::DateTime>(Original_Application_Date.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[11]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[12]->Value = System::DBNull::Value;
        }
        if (Original_Date_of_Birth.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[13]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[14]->Value = static_cast<System::DateTime>(Original_Date_of_Birth.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[13]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[14]->Value = System::DBNull::Value;
        }
        if (Original_Place_of_Birth == nullptr) {
            this->Adapter->DeleteCommand->Parameters[15]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[16]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[15]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[16]->Value = (cli::safe_cast<System::String^  >(Original_Place_of_Birth));
        }
        if (_Original_Parent_Guardian.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[17]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[18]->Value = static_cast<System::Int32>(_Original_Parent_Guardian.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[17]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[18]->Value = System::DBNull::Value;
        }
        if (Original_Younger_Siblings.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[19]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[20]->Value = static_cast<System::Int32>(Original_Younger_Siblings.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[19]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[20]->Value = System::DBNull::Value;
        }
        if (Original_Older_Siblings.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[21]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[22]->Value = static_cast<System::Int32>(Original_Older_Siblings.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[21]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[22]->Value = System::DBNull::Value;
        }
        this->Adapter->DeleteCommand->Parameters[23]->Value = cli::safe_cast<System::Object^>(0);
        this->Adapter->DeleteCommand->Parameters[24]->Value = static_cast<System::Boolean>(Original_Baptised);
        if (Original_Date_of_Baptism.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[25]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[26]->Value = static_cast<System::DateTime>(Original_Date_of_Baptism.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[25]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[26]->Value = System::DBNull::Value;
        }
        this->Adapter->DeleteCommand->Parameters[27]->Value = cli::safe_cast<System::Object^>(0);
        this->Adapter->DeleteCommand->Parameters[28]->Value = static_cast<System::Boolean>(Original_Attended_High_School);
        if (Original_Name_of_High_School == nullptr) {
            this->Adapter->DeleteCommand->Parameters[29]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[30]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[29]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[30]->Value = (cli::safe_cast<System::String^  >(Original_Name_of_High_School));
        }
        if (Original_Address_of_High_School == nullptr) {
            this->Adapter->DeleteCommand->Parameters[31]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[32]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[31]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[32]->Value = (cli::safe_cast<System::String^  >(Original_Address_of_High_School));
        }
        if (Original_Ministers_Name == nullptr) {
            this->Adapter->DeleteCommand->Parameters[33]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[34]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[33]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[34]->Value = (cli::safe_cast<System::String^  >(Original_Ministers_Name));
        }
        if (Original_Ministers_Address == nullptr) {
            this->Adapter->DeleteCommand->Parameters[35]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[36]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[35]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[36]->Value = (cli::safe_cast<System::String^  >(Original_Ministers_Address));
        }
        if (Original_Christian_Work_Performed == nullptr) {
            this->Adapter->DeleteCommand->Parameters[37]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[38]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->DeleteCommand->Parameters[37]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[38]->Value = (cli::safe_cast<System::String^  >(Original_Christian_Work_Performed));
        }
        if (Original_Elder_1.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[39]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[40]->Value = static_cast<System::Int32>(Original_Elder_1.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[39]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[40]->Value = System::DBNull::Value;
        }
        if (Original_Elder_2.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[41]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[42]->Value = static_cast<System::Int32>(Original_Elder_2.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[41]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[42]->Value = System::DBNull::Value;
        }
        if (Original_Employer_1.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[43]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[44]->Value = static_cast<System::Int32>(Original_Employer_1.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[43]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[44]->Value = System::DBNull::Value;
        }
        if (Original_Employer_2.HasValue == true) {
            this->Adapter->DeleteCommand->Parameters[45]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->DeleteCommand->Parameters[46]->Value = static_cast<System::Int32>(Original_Employer_2.Value);
        }
        else {
            this->Adapter->DeleteCommand->Parameters[45]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->DeleteCommand->Parameters[46]->Value = System::DBNull::Value;
        }
        System::Data::ConnectionState previousConnectionState = this->Adapter->DeleteCommand->Connection->State;
        if ((this->Adapter->DeleteCommand->Connection->State & System::Data::ConnectionState::Open) 
                    != System::Data::ConnectionState::Open) {
            this->Adapter->DeleteCommand->Connection->Open();
        }
        try {
            System::Int32 returnValue = this->Adapter->DeleteCommand->ExecuteNonQuery();
            return returnValue;
        }
        finally {
            if (previousConnectionState == System::Data::ConnectionState::Closed) {
                this->Adapter->DeleteCommand->Connection->Close();
            }
        }
    }
    
    inline System::Int32 StudentTableAdapter::Insert(
                System::String^  First_Name, 
                System::String^  Middle_Names, 
                System::String^  Last_Name, 
                System::String^  Address, 
                System::String^  Sex, 
                System::Nullable<System::DateTime > Application_Date, 
                System::Nullable<System::DateTime > Date_of_Birth, 
                System::String^  Place_of_Birth, 
                System::Nullable<System::Int32 > _Parent_Guardian, 
                System::Nullable<System::Int32 > Younger_Siblings, 
                System::Nullable<System::Int32 > Older_Siblings, 
                System::Boolean Baptised, 
                System::Nullable<System::DateTime > Date_of_Baptism, 
                System::Boolean Attended_High_School, 
                System::String^  Name_of_High_School, 
                System::String^  Address_of_High_School, 
                System::String^  Ministers_Name, 
                System::String^  Ministers_Address, 
                System::String^  Christian_Work_Performed, 
                System::Nullable<System::Int32 > Elder_1, 
                System::Nullable<System::Int32 > Elder_2, 
                System::Nullable<System::Int32 > Employer_1, 
                System::Nullable<System::Int32 > Employer_2) {
        if (First_Name == nullptr) {
            this->Adapter->InsertCommand->Parameters[0]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[0]->Value = (cli::safe_cast<System::String^  >(First_Name));
        }
        if (Middle_Names == nullptr) {
            this->Adapter->InsertCommand->Parameters[1]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[1]->Value = (cli::safe_cast<System::String^  >(Middle_Names));
        }
        if (Last_Name == nullptr) {
            this->Adapter->InsertCommand->Parameters[2]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[2]->Value = (cli::safe_cast<System::String^  >(Last_Name));
        }
        if (Address == nullptr) {
            this->Adapter->InsertCommand->Parameters[3]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[3]->Value = (cli::safe_cast<System::String^  >(Address));
        }
        if (Sex == nullptr) {
            this->Adapter->InsertCommand->Parameters[4]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[4]->Value = (cli::safe_cast<System::String^  >(Sex));
        }
        if (Application_Date.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[5]->Value = static_cast<System::DateTime>(Application_Date.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[5]->Value = System::DBNull::Value;
        }
        if (Date_of_Birth.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[6]->Value = static_cast<System::DateTime>(Date_of_Birth.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[6]->Value = System::DBNull::Value;
        }
        if (Place_of_Birth == nullptr) {
            this->Adapter->InsertCommand->Parameters[7]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[7]->Value = (cli::safe_cast<System::String^  >(Place_of_Birth));
        }
        if (_Parent_Guardian.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[8]->Value = static_cast<System::Int32>(_Parent_Guardian.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[8]->Value = System::DBNull::Value;
        }
        if (Younger_Siblings.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[9]->Value = static_cast<System::Int32>(Younger_Siblings.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[9]->Value = System::DBNull::Value;
        }
        if (Older_Siblings.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[10]->Value = static_cast<System::Int32>(Older_Siblings.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[10]->Value = System::DBNull::Value;
        }
        this->Adapter->InsertCommand->Parameters[11]->Value = static_cast<System::Boolean>(Baptised);
        if (Date_of_Baptism.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[12]->Value = static_cast<System::DateTime>(Date_of_Baptism.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[12]->Value = System::DBNull::Value;
        }
        this->Adapter->InsertCommand->Parameters[13]->Value = static_cast<System::Boolean>(Attended_High_School);
        if (Name_of_High_School == nullptr) {
            this->Adapter->InsertCommand->Parameters[14]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[14]->Value = (cli::safe_cast<System::String^  >(Name_of_High_School));
        }
        if (Address_of_High_School == nullptr) {
            this->Adapter->InsertCommand->Parameters[15]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[15]->Value = (cli::safe_cast<System::String^  >(Address_of_High_School));
        }
        if (Ministers_Name == nullptr) {
            this->Adapter->InsertCommand->Parameters[16]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[16]->Value = (cli::safe_cast<System::String^  >(Ministers_Name));
        }
        if (Ministers_Address == nullptr) {
            this->Adapter->InsertCommand->Parameters[17]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[17]->Value = (cli::safe_cast<System::String^  >(Ministers_Address));
        }
        if (Christian_Work_Performed == nullptr) {
            this->Adapter->InsertCommand->Parameters[18]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->InsertCommand->Parameters[18]->Value = (cli::safe_cast<System::String^  >(Christian_Work_Performed));
        }
        if (Elder_1.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[19]->Value = static_cast<System::Int32>(Elder_1.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[19]->Value = System::DBNull::Value;
        }
        if (Elder_2.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[20]->Value = static_cast<System::Int32>(Elder_2.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[20]->Value = System::DBNull::Value;
        }
        if (Employer_1.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[21]->Value = static_cast<System::Int32>(Employer_1.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[21]->Value = System::DBNull::Value;
        }
        if (Employer_2.HasValue == true) {
            this->Adapter->InsertCommand->Parameters[22]->Value = static_cast<System::Int32>(Employer_2.Value);
        }
        else {
            this->Adapter->InsertCommand->Parameters[22]->Value = System::DBNull::Value;
        }
        System::Data::ConnectionState previousConnectionState = this->Adapter->InsertCommand->Connection->State;
        if ((this->Adapter->InsertCommand->Connection->State & System::Data::ConnectionState::Open) 
                    != System::Data::ConnectionState::Open) {
            this->Adapter->InsertCommand->Connection->Open();
        }
        try {
            System::Int32 returnValue = this->Adapter->InsertCommand->ExecuteNonQuery();
            return returnValue;
        }
        finally {
            if (previousConnectionState == System::Data::ConnectionState::Closed) {
                this->Adapter->InsertCommand->Connection->Close();
            }
        }
    }
    
    inline System::Int32 StudentTableAdapter::Update(
                System::String^  First_Name, 
                System::String^  Middle_Names, 
                System::String^  Last_Name, 
                System::String^  Address, 
                System::String^  Sex, 
                System::Nullable<System::DateTime > Application_Date, 
                System::Nullable<System::DateTime > Date_of_Birth, 
                System::String^  Place_of_Birth, 
                System::Nullable<System::Int32 > _Parent_Guardian, 
                System::Nullable<System::Int32 > Younger_Siblings, 
                System::Nullable<System::Int32 > Older_Siblings, 
                System::Boolean Baptised, 
                System::Nullable<System::DateTime > Date_of_Baptism, 
                System::Boolean Attended_High_School, 
                System::String^  Name_of_High_School, 
                System::String^  Address_of_High_School, 
                System::String^  Ministers_Name, 
                System::String^  Ministers_Address, 
                System::String^  Christian_Work_Performed, 
                System::Nullable<System::Int32 > Elder_1, 
                System::Nullable<System::Int32 > Elder_2, 
                System::Nullable<System::Int32 > Employer_1, 
                System::Nullable<System::Int32 > Employer_2, 
                System::Int32 Original_ID, 
                System::String^  Original_First_Name, 
                System::String^  Original_Middle_Names, 
                System::String^  Original_Last_Name, 
                System::String^  Original_Address, 
                System::String^  Original_Sex, 
                System::Nullable<System::DateTime > Original_Application_Date, 
                System::Nullable<System::DateTime > Original_Date_of_Birth, 
                System::String^  Original_Place_of_Birth, 
                System::Nullable<System::Int32 > _Original_Parent_Guardian, 
                System::Nullable<System::Int32 > Original_Younger_Siblings, 
                System::Nullable<System::Int32 > Original_Older_Siblings, 
                System::Boolean Original_Baptised, 
                System::Nullable<System::DateTime > Original_Date_of_Baptism, 
                System::Boolean Original_Attended_High_School, 
                System::String^  Original_Name_of_High_School, 
                System::String^  Original_Address_of_High_School, 
                System::String^  Original_Ministers_Name, 
                System::String^  Original_Ministers_Address, 
                System::String^  Original_Christian_Work_Performed, 
                System::Nullable<System::Int32 > Original_Elder_1, 
                System::Nullable<System::Int32 > Original_Elder_2, 
                System::Nullable<System::Int32 > Original_Employer_1, 
                System::Nullable<System::Int32 > Original_Employer_2) {
        if (First_Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[0]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[0]->Value = (cli::safe_cast<System::String^  >(First_Name));
        }
        if (Middle_Names == nullptr) {
            this->Adapter->UpdateCommand->Parameters[1]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[1]->Value = (cli::safe_cast<System::String^  >(Middle_Names));
        }
        if (Last_Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[2]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[2]->Value = (cli::safe_cast<System::String^  >(Last_Name));
        }
        if (Address == nullptr) {
            this->Adapter->UpdateCommand->Parameters[3]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[3]->Value = (cli::safe_cast<System::String^  >(Address));
        }
        if (Sex == nullptr) {
            this->Adapter->UpdateCommand->Parameters[4]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[4]->Value = (cli::safe_cast<System::String^  >(Sex));
        }
        if (Application_Date.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[5]->Value = static_cast<System::DateTime>(Application_Date.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[5]->Value = System::DBNull::Value;
        }
        if (Date_of_Birth.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[6]->Value = static_cast<System::DateTime>(Date_of_Birth.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[6]->Value = System::DBNull::Value;
        }
        if (Place_of_Birth == nullptr) {
            this->Adapter->UpdateCommand->Parameters[7]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[7]->Value = (cli::safe_cast<System::String^  >(Place_of_Birth));
        }
        if (_Parent_Guardian.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[8]->Value = static_cast<System::Int32>(_Parent_Guardian.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[8]->Value = System::DBNull::Value;
        }
        if (Younger_Siblings.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[9]->Value = static_cast<System::Int32>(Younger_Siblings.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[9]->Value = System::DBNull::Value;
        }
        if (Older_Siblings.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[10]->Value = static_cast<System::Int32>(Older_Siblings.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[10]->Value = System::DBNull::Value;
        }
        this->Adapter->UpdateCommand->Parameters[11]->Value = static_cast<System::Boolean>(Baptised);
        if (Date_of_Baptism.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[12]->Value = static_cast<System::DateTime>(Date_of_Baptism.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[12]->Value = System::DBNull::Value;
        }
        this->Adapter->UpdateCommand->Parameters[13]->Value = static_cast<System::Boolean>(Attended_High_School);
        if (Name_of_High_School == nullptr) {
            this->Adapter->UpdateCommand->Parameters[14]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[14]->Value = (cli::safe_cast<System::String^  >(Name_of_High_School));
        }
        if (Address_of_High_School == nullptr) {
            this->Adapter->UpdateCommand->Parameters[15]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[15]->Value = (cli::safe_cast<System::String^  >(Address_of_High_School));
        }
        if (Ministers_Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[16]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[16]->Value = (cli::safe_cast<System::String^  >(Ministers_Name));
        }
        if (Ministers_Address == nullptr) {
            this->Adapter->UpdateCommand->Parameters[17]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[17]->Value = (cli::safe_cast<System::String^  >(Ministers_Address));
        }
        if (Christian_Work_Performed == nullptr) {
            this->Adapter->UpdateCommand->Parameters[18]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[18]->Value = (cli::safe_cast<System::String^  >(Christian_Work_Performed));
        }
        if (Elder_1.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[19]->Value = static_cast<System::Int32>(Elder_1.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[19]->Value = System::DBNull::Value;
        }
        if (Elder_2.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[20]->Value = static_cast<System::Int32>(Elder_2.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[20]->Value = System::DBNull::Value;
        }
        if (Employer_1.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[21]->Value = static_cast<System::Int32>(Employer_1.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[21]->Value = System::DBNull::Value;
        }
        if (Employer_2.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[22]->Value = static_cast<System::Int32>(Employer_2.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[22]->Value = System::DBNull::Value;
        }
        this->Adapter->UpdateCommand->Parameters[23]->Value = static_cast<System::Int32>(Original_ID);
        if (Original_First_Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[24]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[25]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[24]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[25]->Value = (cli::safe_cast<System::String^  >(Original_First_Name));
        }
        if (Original_Middle_Names == nullptr) {
            this->Adapter->UpdateCommand->Parameters[26]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[27]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[26]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[27]->Value = (cli::safe_cast<System::String^  >(Original_Middle_Names));
        }
        if (Original_Last_Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[28]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[29]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[28]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[29]->Value = (cli::safe_cast<System::String^  >(Original_Last_Name));
        }
        if (Original_Address == nullptr) {
            this->Adapter->UpdateCommand->Parameters[30]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[31]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[30]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[31]->Value = (cli::safe_cast<System::String^  >(Original_Address));
        }
        if (Original_Sex == nullptr) {
            this->Adapter->UpdateCommand->Parameters[32]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[33]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[32]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[33]->Value = (cli::safe_cast<System::String^  >(Original_Sex));
        }
        if (Original_Application_Date.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[34]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[35]->Value = static_cast<System::DateTime>(Original_Application_Date.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[34]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[35]->Value = System::DBNull::Value;
        }
        if (Original_Date_of_Birth.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[36]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[37]->Value = static_cast<System::DateTime>(Original_Date_of_Birth.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[36]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[37]->Value = System::DBNull::Value;
        }
        if (Original_Place_of_Birth == nullptr) {
            this->Adapter->UpdateCommand->Parameters[38]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[39]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[38]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[39]->Value = (cli::safe_cast<System::String^  >(Original_Place_of_Birth));
        }
        if (_Original_Parent_Guardian.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[40]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[41]->Value = static_cast<System::Int32>(_Original_Parent_Guardian.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[40]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[41]->Value = System::DBNull::Value;
        }
        if (Original_Younger_Siblings.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[42]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[43]->Value = static_cast<System::Int32>(Original_Younger_Siblings.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[42]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[43]->Value = System::DBNull::Value;
        }
        if (Original_Older_Siblings.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[44]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[45]->Value = static_cast<System::Int32>(Original_Older_Siblings.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[44]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[45]->Value = System::DBNull::Value;
        }
        this->Adapter->UpdateCommand->Parameters[46]->Value = cli::safe_cast<System::Object^>(0);
        this->Adapter->UpdateCommand->Parameters[47]->Value = static_cast<System::Boolean>(Original_Baptised);
        if (Original_Date_of_Baptism.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[48]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[49]->Value = static_cast<System::DateTime>(Original_Date_of_Baptism.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[48]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[49]->Value = System::DBNull::Value;
        }
        this->Adapter->UpdateCommand->Parameters[50]->Value = cli::safe_cast<System::Object^>(0);
        this->Adapter->UpdateCommand->Parameters[51]->Value = static_cast<System::Boolean>(Original_Attended_High_School);
        if (Original_Name_of_High_School == nullptr) {
            this->Adapter->UpdateCommand->Parameters[52]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[53]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[52]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[53]->Value = (cli::safe_cast<System::String^  >(Original_Name_of_High_School));
        }
        if (Original_Address_of_High_School == nullptr) {
            this->Adapter->UpdateCommand->Parameters[54]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[55]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[54]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[55]->Value = (cli::safe_cast<System::String^  >(Original_Address_of_High_School));
        }
        if (Original_Ministers_Name == nullptr) {
            this->Adapter->UpdateCommand->Parameters[56]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[57]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[56]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[57]->Value = (cli::safe_cast<System::String^  >(Original_Ministers_Name));
        }
        if (Original_Ministers_Address == nullptr) {
            this->Adapter->UpdateCommand->Parameters[58]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[59]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[58]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[59]->Value = (cli::safe_cast<System::String^  >(Original_Ministers_Address));
        }
        if (Original_Christian_Work_Performed == nullptr) {
            this->Adapter->UpdateCommand->Parameters[60]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[61]->Value = System::DBNull::Value;
        }
        else {
            this->Adapter->UpdateCommand->Parameters[60]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[61]->Value = (cli::safe_cast<System::String^  >(Original_Christian_Work_Performed));
        }
        if (Original_Elder_1.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[62]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[63]->Value = static_cast<System::Int32>(Original_Elder_1.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[62]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[63]->Value = System::DBNull::Value;
        }
        if (Original_Elder_2.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[64]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[65]->Value = static_cast<System::Int32>(Original_Elder_2.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[64]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[65]->Value = System::DBNull::Value;
        }
        if (Original_Employer_1.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[66]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[67]->Value = static_cast<System::Int32>(Original_Employer_1.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[66]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[67]->Value = System::DBNull::Value;
        }
        if (Original_Employer_2.HasValue == true) {
            this->Adapter->UpdateCommand->Parameters[68]->Value = cli::safe_cast<System::Object^>(0);
            this->Adapter->UpdateCommand->Parameters[69]->Value = static_cast<System::Int32>(Original_Employer_2.Value);
        }
        else {
            this->Adapter->UpdateCommand->Parameters[68]->Value = cli::safe_cast<System::Object^>(1);
            this->Adapter->UpdateCommand->Parameters[69]->Value = System::DBNull::Value;
        }
        System::Data::ConnectionState previousConnectionState = this->Adapter->UpdateCommand->Connection->State;
        if ((this->Adapter->UpdateCommand->Connection->State & System::Data::ConnectionState::Open) 
                    != System::Data::ConnectionState::Open) {
            this->Adapter->UpdateCommand->Connection->Open();
        }
        try {
            System::Int32 returnValue = this->Adapter->UpdateCommand->ExecuteNonQuery();
            return returnValue;
        }
        finally {
            if (previousConnectionState == System::Data::ConnectionState::Closed) {
                this->Adapter->UpdateCommand->Connection->Close();
            }
        }
    }
    }
}
